{"version":3,"sources":["webpack:///bulbs-dfp.js","webpack:///./elements/bulbs-dfp/bulbs-dfp.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_defaults","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","setPrototypeOf","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_inViewMonitor","_inViewMonitor2","_invariant","_invariant2","_registerElement","BulbsDfp","_BulbsHTMLElement","this","apply","arguments","attachedCallback","hasAttribute","handleEnterViewport","bind","handleExitViewport","handleInterval","addEventListener","threshold","parseFloat","getAttribute","add","distanceFromTop","window","innerHeight","distanceFromBottom","defaultRefreshInterval","adUnitData","adsManager","adUnits","units","dataset","adUnit","refreshDisabled","refreshInterval","setInterval","detachedCallback","remove","clearInterval","trackedEnterViewport","asyncRefreshSlot","trackedExitViewport","browserVisibility","document","visibilityState","isViewable","reloadAds","refreshSlot","get","isElementInViewport","offsetHeight","BULBS_ELEMENTS_ADS_MANAGER","BulbsHTMLElement","extends","registerElement"],"mappings":"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","file":"bulbs-dfp.js","sourcesContent":["webpackJsonp([7],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _inViewMonitor = __webpack_require__(8);\n\t\n\tvar _inViewMonitor2 = _interopRequireDefault(_inViewMonitor);\n\t\n\tvar _invariant = __webpack_require__(5);\n\t\n\tvar _invariant2 = _interopRequireDefault(_invariant);\n\t\n\tvar _registerElement = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\t\n\tvar BulbsDfp = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsDfp, _BulbsHTMLElement);\n\t\n\t  function BulbsDfp() {\n\t    _classCallCheck(this, BulbsDfp);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsDfp.prototype.attachedCallback = function attachedCallback() {\n\t\n\t    (0, _invariant2.default)(this.hasAttribute('viewport-threshold'), '<div is=\"bulbs-dfp\"> MUST specify a `viewport-threshold` property. ' + 'This value defines how many screens away from the viewport the slot ' + 'will be in order to trigger an ad load. 1.2 = 120% viewport height.');\n\t\n\t    this.handleEnterViewport = this.handleEnterViewport.bind(this);\n\t    this.handleExitViewport = this.handleExitViewport.bind(this);\n\t    this.handleInterval = this.handleInterval.bind(this);\n\t\n\t    this.addEventListener('enterviewport', this.handleEnterViewport);\n\t    this.addEventListener('exitviewport', this.handleExitViewport);\n\t\n\t    var threshold = parseFloat(this.getAttribute('viewport-threshold'), 10);\n\t    _inViewMonitor2.default.add(this, {\n\t      get distanceFromTop() {\n\t        return -(window.innerHeight * threshold);\n\t      },\n\t      get distanceFromBottom() {\n\t        return window.innerHeight * threshold;\n\t      }\n\t    });\n\t\n\t    var defaultRefreshInterval = 30000;\n\t    this.adUnitData = this.adsManager.adUnits.units[this.dataset.adUnit];\n\t    if (!this.adUnitData.refreshDisabled && !this.hasAttribute('no-refresh')) {\n\t\n\t      this.refreshInterval = window.setInterval(this.handleInterval, this.adUnitData.refreshInterval || defaultRefreshInterval);\n\t    }\n\t  };\n\t\n\t  BulbsDfp.prototype.detachedCallback = function detachedCallback() {\n\t    _inViewMonitor2.default.remove(this);\n\t\n\t    if (this.refreshInterval) {\n\t      window.clearInterval(this.refreshInterval);\n\t    }\n\t  };\n\t\n\t  BulbsDfp.prototype.handleEnterViewport = function handleEnterViewport() {\n\t    if (!this.trackedEnterViewport && this.adsManager) {\n\t      this.trackedEnterViewport = true;\n\t      this.adsManager.asyncRefreshSlot(this);\n\t    }\n\t  };\n\t\n\t  BulbsDfp.prototype.handleExitViewport = function handleExitViewport() {\n\t    if (!this.trackedExitViewport) {\n\t      this.trackedExitViewport = true;\n\t      // * The eventual strategy will be:\n\t      //this.adsManager.unloadAds(this)\n\t    }\n\t  };\n\t\n\t  BulbsDfp.prototype.handleInterval = function handleInterval() {\n\t    var browserVisibility = document.visibilityState;\n\t\n\t    if (this.isViewable) {\n\t      if (browserVisibility === 'visible') {\n\t        this.adsManager.reloadAds(this);\n\t        this.adsManager.refreshSlot(this);\n\t      }\n\t    }\n\t  };\n\t\n\t  _createClass(BulbsDfp, [{\n\t    key: 'isViewable',\n\t    get: function get() {\n\t      return _inViewMonitor2.default.isElementInViewport(this, null, {\n\t        distanceFromTop: this.offsetHeight * 0.66,\n\t        distanceFromBottom: -(this.offsetHeight * 0.66)\n\t      });\n\t    }\n\t  }, {\n\t    key: 'adsManager',\n\t    get: function get() {\n\t      return window.BULBS_ELEMENTS_ADS_MANAGER;\n\t    }\n\t  }]);\n\t\n\t  return BulbsDfp;\n\t}(_registerElement.BulbsHTMLElement);\n\t\n\texports.default = BulbsDfp;\n\t\n\t\n\tBulbsDfp.extends = 'div';\n\t\n\t(0, _registerElement.registerElement)('bulbs-dfp', BulbsDfp);\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// bulbs-dfp.js","import InViewMonitor from 'bulbs-elements/util/in-view-monitor';\nimport invariant from 'invariant';\nimport {\n  registerElement,\n  BulbsHTMLElement,\n} from 'bulbs-elements/register-element';\n\nexport default class BulbsDfp extends BulbsHTMLElement {\n  attachedCallback () {\n\n    invariant(this.hasAttribute('viewport-threshold'),\n        '<div is=\"bulbs-dfp\"> MUST specify a `viewport-threshold` property. ' +\n        'This value defines how many screens away from the viewport the slot ' +\n        'will be in order to trigger an ad load. 1.2 = 120% viewport height.');\n\n    this.handleEnterViewport = this.handleEnterViewport.bind(this);\n    this.handleExitViewport = this.handleExitViewport.bind(this);\n    this.handleInterval = this.handleInterval.bind(this);\n\n    this.addEventListener('enterviewport', this.handleEnterViewport);\n    this.addEventListener('exitviewport', this.handleExitViewport);\n\n    let threshold = parseFloat(this.getAttribute('viewport-threshold'), 10);\n    InViewMonitor.add(this, {\n      get distanceFromTop () {\n        return -(window.innerHeight * threshold);\n      },\n      get distanceFromBottom () {\n        return window.innerHeight * threshold;\n      },\n    });\n\n    let defaultRefreshInterval = 30000;\n    this.adUnitData = this.adsManager.adUnits.units[this.dataset.adUnit];\n    if (!this.adUnitData.refreshDisabled && !this.hasAttribute('no-refresh')) {\n\n      this.refreshInterval = window.setInterval(\n        this.handleInterval,\n        this.adUnitData.refreshInterval || defaultRefreshInterval\n      );\n    }\n  }\n\n  detachedCallback () {\n    InViewMonitor.remove(this);\n\n    if (this.refreshInterval) {\n      window.clearInterval(this.refreshInterval);\n    }\n  }\n\n  handleEnterViewport () {\n    if(!this.trackedEnterViewport && this.adsManager) {\n      this.trackedEnterViewport = true;\n      this.adsManager.asyncRefreshSlot(this);\n    }\n  }\n\n  handleExitViewport () {\n    if(!this.trackedExitViewport) {\n      this.trackedExitViewport = true;\n      // * The eventual strategy will be:\n      //this.adsManager.unloadAds(this)\n    }\n  }\n\n  handleInterval () {\n    let browserVisibility = document.visibilityState;\n\n    if (this.isViewable) {\n      if (browserVisibility === 'visible') {\n        this.adsManager.reloadAds(this);\n        this.adsManager.refreshSlot(this);\n      }\n    }\n  }\n\n  get isViewable () {\n    return InViewMonitor.isElementInViewport(this, null, {\n      distanceFromTop: this.offsetHeight * 0.66,\n      distanceFromBottom: -(this.offsetHeight * 0.66),\n    });\n  }\n\n  get adsManager () {\n    return window.BULBS_ELEMENTS_ADS_MANAGER;\n  }\n}\n\nBulbsDfp.extends = 'div';\n\nregisterElement('bulbs-dfp', BulbsDfp);\n\n\n\n// WEBPACK FOOTER //\n// ./elements/bulbs-dfp/bulbs-dfp.js"],"sourceRoot":""}