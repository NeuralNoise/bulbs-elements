{"version":3,"sources":["webpack:///bulbs-datamap.js","webpack:///./elements/bulbs-datamap/bulbs-datamap.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/topojson.js?930e","webpack:///./~/topojson/topojson.js","webpack:///./~/datamaps/dist/datamaps.usa.js?9780","webpack:///./~/datamaps/dist/datamaps.usa.js","webpack:///./~/datamaps/~/d3/d3.js","webpack:///./~/datamaps/~/topojson/build/topojson.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","setPrototypeOf","_register","BulbsDatamap","_BulbsHTMLElement","this","apply","arguments","createdCallback","innerHTML","mapContainer","firstChild","that","map","Datamap","element","scope","responsive","fills","defaultFill","geographyConfig","highlightOnHover","window","addEventListener","resizeMap","bind","d3","select","selectAll","on","stateObj","stateClicked","path","classed","event","CustomEvent","detail","dispatchEvent","resize","BulbsHTMLElement","registerElement","212","214","d3_number","x","isNaN","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","e","d3_Map","d3_Set","d3_rebind","target","source","method","d3_vendorSymbol","object","name","charAt","toUpperCase","substring","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","l","z","listeners","listenerByName","listener","get","slice","indexOf","concat","remove","push","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","node","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","ownerDocument","createElementNS","namespaceURI","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","ascending","a","b","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_interrupt","lock","__transition__","active","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","_","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_window","d3_event_dragSelect","d3_documentElement","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","position","top","left","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_sgn","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_Color","d3_hsl","h","d3_Hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_Hcl","d3_hcl_lab","d3_lab","cos","d3_radians","d3_Lab","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","d3_lab_hcl","atan2","d3_degrees","sqrt","NaN","d3_xyz_lab","pow","r","d3_rgbNumber","d3_rgbString","g","d3_Rgb","d3_rgb_hex","max","toString","min","d3_rgb_parse","format","rgb","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_hsl","d3_rgb_lab","d3_rgb_xyz","d3_functor","d3_identity","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","responseText","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","toLowerCase","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_formatPrefix","abs","scale","symbol","d3_format_precision","p","ceil","log","LN10","d3_format_typeDefault","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_true","d3_geo_clipPolygon","segments","compare","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","shift","d3_geo_clipSegmentLength1","rotatedClipStart","invert","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","φ0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipAntimeridianLine","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","isLeft","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_compose","compose","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","join","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","precision","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","step","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","range","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullCCW","i1","i2","i3","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","L","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","before","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","U","d3_geom_voronoiRedBlackRotateLeft","tree","parent","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","Array","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","s0","s1","d3_interpolate_number","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","bs","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_treeSeparation","d3_layout_treeLeft","_tree","thread","d3_layout_treeRight","d3_layout_treeSearch","d3_layout_treeRightmost","d3_layout_treeLeftmost","d3_layout_treeDeepest","d3_layout_treeVisitAfter","visit","previousSibling","previousChild","d3_layout_treeShift","change","prelim","mod","d3_layout_treeMove","ancestor","number","d3_layout_treeAncestor","vim","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","floor","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","reverse","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_format_re","d3_scale_linearFormatPrecision","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","exponent","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_arcOffset","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","size","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNode","inherit","count","transition","ease","duration","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_date_utc","UTC","d3_time_interval","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","d3_time_interval_utc","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","Z","d3_time_parse","localZ","setFullYear","W","getDay","setHours","d3_time_parsers","d3_time_formatRe","names","d3_time_formatLookup","d3_time_formatPad","fill","width","sign","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseWeekdayNumber","d3_time_numberRe","d3_time_parseWeekNumberSunday","d3_time_parseWeekNumberMonday","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseMilliseconds","d3_time_parseAmPm","d3_time_amPmLookup","d3_time_zone","getTimezoneOffset","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_percentRe","d3_time_formatUtc","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_time_scaleFormat","formats","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","document","documentElement","childNodes","nodeType","createElement","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","descending","sum","mean","median","bisector","lo","hi","mid","right","d3_bisector","bisectLeft","bisectRight","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","d3_map_prefix","d3_map_prefixCode","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","uniqueSort","matchesSelector","d3_selectionRoot","subgroup","subnode","subgroups","parentNode","d3_nsPrefix","xhtml","xlink","xml","xmlns","prefix","getAttributeNS","each","contains","getComputedStyle","getPropertyValue","text","html","appendChild","insertBefore","removeChild","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","dataByKeyValue","keyValues","exit","datum","nextSibling","args","empty","upgroup","d3_transitionInheritId","d3_transitionId","d3_transitionInherit","interrupt","mouseenter","mouseleave","mouse","navigator","userAgent","touches","touch","identifier","drag","mousedown","touchstart","touchid","touchposition","dragstart","move","moved","eventId","origin_","dragged","event_","ended","dragRestore","eventTarget","origin","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","mousemove","mousewheelreset","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomstarted","zoomed","zoomended","mouseup","relocate","scale0","locations0","started","changed","touchtime","distance0","l0","l1","distance1","scale1","touchmove","touchend","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","view1","__chart__","deltaY","deltaMode","wheelDelta","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","I","EOF","eol","EOL","rows","isArray","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_format_decimalPoint","d3_format_thousandsSeparator","d3_format_grouping","d3_format_currencySymbol","d3_formatPrefixes","formatPrefix","specifier","align","zfill","comma","suffix","integer","d3_format_types","zcomma","negative","lastIndexOf","after","d3_format_group","String","fromCharCode","toPrecision","toExponential","toFixed","d3_format_groupingLength","geo","d3_adderTemp","valueOf","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","Y","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","hull","vertices","sp","plen","stack","poly","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","delaunay","quadtree","nx","ny","insertChild","nPoint","bottom","xs","ys","x1_","y1_","x2_","y2_","compat","root","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dn","theta","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","gravity","weight","dimension","neighbors","candidates","recurse","childs","revalue","partition","pie","d3_layout_pieSortByValue","arcs","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","firstWalk","apportion","midpoint","separation","secondWalk","vip","vop","vom","sip","sop","sim","som","deep","nodeSize","pack","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","df","d3_svg_arcMax","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","innerTickSize","tickPadding","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time","d3_time_daySymbols","getDate","getUTCDate","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_formatDateTime","d3_time_formatDate","d3_time_formatTime","d3_time_days","d3_time_dayAbbreviations","d3_time_months","d3_time_monthAbbreviations","day","years","days","dayOfYear","week","sunday","weeks","weekOfYear","sundayOfYear","-","mondayOfYear","%","am","pm","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","months","d3_time_scaleLocalMethods","d3_time_scaleLocalFormats","d3_time_scaleLocalFormat","d3_time_scaleUTCMethods","d3_time_scaleUTCFormats","d3_time_scaleUTCFormat","json","responseXML","215","global","216","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","stitchArcs","topology","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","meshArcs","geomsByArc","geometryType","geoms","mergeArcs","objects","register","polygonsByArc","exterior","cartesianRingArea","components","component","sgn","featureOrCollection","absolute","transformAbsolute","indexesByArc","ij","ik","presimplify","triangleArea","triangle","heap","relative","transformRelative","minAreaHeap","maxArea","cartesianTriangleArea","compareArea","up","down","removed","noop","topojson","mesh","217","218","val","datumValue","optionsValue","optionsValues","fnContext","geography","addContainer","height","offsetWidth","offsetHeight","options","padding-bottom","setProjection","projectionConfig","addStyleBlock","drawSubunits","fillData","colorCodeData","geoConfig","subunits","addLayer","geoData","hideAntarctica","fillColor","fillKey","borderWidth","borderColor","handleGeographyConfig","moveToFront","popupOnHover","$this","previousAttributes","stroke","stroke-width","fill-opacity","highlightFillColor","highlightBorderColor","highlightBorderWidth","highlightFillOpacity","updatePopup","addLegend","layer","label","legendTitle","defaultFillName","labels","addGraticule","handleArcs","defaultOptions","arcConfig","strokeColor","strokeWidth","originXY","latLngToXY","latitude","longitude","destXY","destination","midXY","sharpness","arcSharpness","getTotalLength","WebkitTransition","strokeDasharray","strokeDashoffset","animationSpeed","handleLabels","labelStartCoodinates","xOffset","yOffset","smallStateIndex","yStart","fontSize","labelColor","lineWidth","fontFamily","handleBubbles","datumHasCoords","bubbles","latLng","centered","fillOpacity","exitDelay","prop","bubblesConfig","addPlugin","disableDefaultStyles","draw","dataType","done","dataUrl","popupTemplate","animate","newsize","clientWidth","oldsize","tmpData","Datamaps","updateChoropleth","hoverover","pathAndProjection","results","customTopo","dataJson","worldTopo","usaTopo","usa","lat","lng","className","subunit","color","subunitData","pluginFn","createNewLayer","require","jQuery","fn","datamaps","datamap","219","defaultView","d3_ascending","d3_numeric","d3_transposeLength","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","namespace","d3_nsXhtml","createNS","d3_selectionRemove","d3_behavior_dragTouchId","d3_cross2d","d3_color","d3_xhrHasResponse","d3_timer","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","fullSuffix","unit","d3_locale_timeFormat","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","sdλ","adλ","polygonStarted","d3_geom_hullUpper","hs","d3_geom_hullOrder","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","bm","bi","d3_interpolate_numberA","d3_interpolate_numberB","d3_interpolateTransformPop","d3_interpolateTranslate","d3_interpolateRotate","d3_interpolateSkew","d3_interpolateScale","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","wm","wp","rangeRoundPoints","d3_zero","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_selection_interruptNS","activeId","d3_transitionNamespace","schedule","cancelId","cancel","tweens","numbers","variance","deviation","d3_bisect","matches","position1","dragId","position0","dragOffset","dragSubject","dragName","correspondingElement","τε","zoomTo","center0","zooming","location0","targets","zoomName","rebeccapurple","numberFormat","timeFormat","d3_locale_enUS","flippedPoints","upper","lower","skipLeft","skipRight","dw","theta2","chargeDistance2","d3_layout_forceChargeDistance2","chargeDistance","root0","root1","wrapTree","sizeNode","tx","node1","queue","siblings","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","tickSpacing","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","220","factory","feature$1","ring$$","ki"],"mappings":"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","file":"bulbs-datamap.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _register = __webpack_require__(2);\n\t\n\t__webpack_require__(212);\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\t\n\t/* global Datamap */\n\t__webpack_require__(214);\n\t__webpack_require__(215);\n\t__webpack_require__(217);\n\t\n\tvar BulbsDatamap = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsDatamap, _BulbsHTMLElement);\n\t\n\t  function BulbsDatamap() {\n\t    _classCallCheck(this, BulbsDatamap);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsDatamap.prototype.createdCallback = function createdCallback() {\n\t    this.innerHTML = '<div class=\"bulbs-datamap\"></div>';\n\t    var mapContainer = this.firstChild;\n\t    var that = this;\n\t\n\t    this.map = new Datamap({\n\t      element: mapContainer,\n\t      scope: 'usa',\n\t      responsive: true,\n\t      fills: {\n\t        defaultFill: ''\n\t      },\n\t      geographyConfig: {\n\t        highlightOnHover: false\n\t      }\n\t    });\n\t\n\t    window.addEventListener('resize', this.resizeMap.bind(this));\n\t\n\t    window.d3.select(mapContainer).selectAll('svg .datamaps-subunit').on('click', function (stateObj) {\n\t      that.stateClicked(this, stateObj, mapContainer);\n\t    });\n\t  };\n\t\n\t  BulbsDatamap.prototype.stateClicked = function stateClicked(path, stateObj, mapContainer) {\n\t    window.d3.select(mapContainer).selectAll('svg .datamaps-subunit').classed('selected', false);\n\t    window.d3.select(path).classed('selected', true);\n\t\n\t    var event = new CustomEvent('bulbs-datamap:selected', { 'detail': stateObj });\n\t    mapContainer.dispatchEvent(event);\n\t  };\n\t\n\t  BulbsDatamap.prototype.resizeMap = function resizeMap() {\n\t    this.map.resize();\n\t  };\n\t\n\t  return BulbsDatamap;\n\t}(_register.BulbsHTMLElement);\n\t\n\t(0, _register.registerElement)('bulbs-datamap', BulbsDatamap);\n\t\n\texports.default = BulbsDatamap;\n\n/***/ },\n\n/***/ 212:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 214:\n/***/ function(module, exports) {\n\n\t/*** IMPORTS FROM imports-loader ***/\n\t(function() {\n\t\n\td3 = function() {\n\t  var d3 = {\n\t    version: \"3.3.13\"\n\t  };\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n\t  try {\n\t    d3_array(d3_documentElement.childNodes)[0].nodeType;\n\t  } catch (e) {\n\t    d3_array = function(list) {\n\t      var i = list.length, array = new Array(i);\n\t      while (i--) array[i] = list[i];\n\t      return array;\n\t    };\n\t  }\n\t  try {\n\t    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n\t  } catch (error) {\n\t    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t    d3_element_prototype.setAttribute = function(name, value) {\n\t      d3_element_setAttribute.call(this, name, value + \"\");\n\t    };\n\t    d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t    };\n\t    d3_style_prototype.setProperty = function(name, value, priority) {\n\t      d3_style_setProperty.call(this, name, value + \"\", priority);\n\t    };\n\t  }\n\t  d3.ascending = function(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  };\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  function d3_number(x) {\n\t    return x != null && !isNaN(x);\n\t  }\n\t  d3.mean = function(array, f) {\n\t    var n = array.length, a, m = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n\t    } else {\n\t      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n\t    }\n\t    return j ? m : undefined;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    if (arguments.length > 1) array = array.map(f);\n\t    array = array.filter(d3_number);\n\t    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n\t  };\n\t  d3.bisector = function(f) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  };\n\t  var d3_bisector = d3.bisector(function(d) {\n\t    return d;\n\t  });\n\t  d3.bisectLeft = d3_bisector.left;\n\t  d3.bisect = d3.bisectRight = d3_bisector.right;\n\t  d3.shuffle = function(array) {\n\t    var m = array.length, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m], array[m] = array[i], array[i] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    try {\n\t      for (var key in properties) {\n\t        Object.defineProperty(ctor.prototype, key, {\n\t          value: properties[key],\n\t          enumerable: false\n\t        });\n\t      }\n\t    } catch (e) {\n\t      ctor.prototype = properties;\n\t    }\n\t  }\n\t  d3.map = function(object) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) object.forEach(function(key, value) {\n\t      map.set(key, value);\n\t    }); else for (var key in object) map.set(key, object[key]);\n\t    return map;\n\t  };\n\t  function d3_Map() {}\n\t  d3_class(d3_Map, {\n\t    has: function(key) {\n\t      return d3_map_prefix + key in this;\n\t    },\n\t    get: function(key) {\n\t      return this[d3_map_prefix + key];\n\t    },\n\t    set: function(key, value) {\n\t      return this[d3_map_prefix + key] = value;\n\t    },\n\t    remove: function(key) {\n\t      key = d3_map_prefix + key;\n\t      return key in this && delete this[key];\n\t    },\n\t    keys: function() {\n\t      var keys = [];\n\t      this.forEach(function(key) {\n\t        keys.push(key);\n\t      });\n\t      return keys;\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(key, value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      this.forEach(function(key, value) {\n\t        entries.push({\n\t          key: key,\n\t          value: value\n\t        });\n\t      });\n\t      return entries;\n\t    },\n\t    forEach: function(f) {\n\t      for (var key in this) {\n\t        if (key.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, key.substring(1), this[key]);\n\t        }\n\t      }\n\t    }\n\t  });\n\t  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {}\n\t  d3_class(d3_Set, {\n\t    has: function(value) {\n\t      return d3_map_prefix + value in this;\n\t    },\n\t    add: function(value) {\n\t      this[d3_map_prefix + value] = true;\n\t      return value;\n\t    },\n\t    remove: function(value) {\n\t      value = d3_map_prefix + value;\n\t      return value in this && delete this[value];\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    forEach: function(f) {\n\t      for (var value in this) {\n\t        if (value.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, value.substring(1));\n\t        }\n\t      }\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.substring(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.substring(i + 1);\n\t      type = type.substring(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n\t    return d3_selectMatcher.call(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = function(s, n) {\n\t      return Sizzle.uniqueSort(Sizzle(s, n));\n\t    };\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3_selectionRoot;\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.substring(0, i);\n\t        name = name.substring(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return name.trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    } : function() {\n\t      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n\t    };\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(function() {\n\t      var parent = this.parentNode;\n\t      if (parent) parent.removeChild(this);\n\t    });\n\t  };\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          keyValue = key.call(node = group[i], node.__data__, i);\n\t          if (nodeByKeyValue.has(keyValue)) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues.push(keyValue);\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          keyValue = key.call(groupData, nodeData = groupData[i], i);\n\t          if (node = nodeByKeyValue.get(keyValue)) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          } else if (!dataByKeyValue.has(keyValue)) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t          dataByKeyValue.set(keyValue, nodeData);\n\t          nodeByKeyValue.remove(keyValue);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValues[i])) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3.ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    this.each(function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3_selectionPrototype.transition = function() {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function() {\n\t    return this.each(d3_selection_interrupt);\n\t  };\n\t  function d3_selection_interrupt() {\n\t    var lock = this.__transition__;\n\t    if (lock) ++lock.active;\n\t  }\n\t  d3.select = function(node) {\n\t    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  var d3_selectionRoot = d3.select(d3_documentElement);\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.substring(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  d3_selection_onFilters.forEach(function(k) {\n\t    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t  });\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\t  function d3_event_dragSuppress() {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        function off() {\n\t          w.on(click, null);\n\t        }\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n\t        svg = d3.select(\"body\").append(\"svg\").style({\n\t          position: \"absolute\",\n\t          top: 0,\n\t          left: 0,\n\t          margin: 0,\n\t          padding: 0,\n\t          border: \"none\"\n\t        }, \"important\");\n\t        var ctm = svg[0][0].getScreenCTM();\n\t        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t        svg.remove();\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function touchid() {\n\t      return d3.event.changedTouches[0].identifier;\n\t    }\n\t    function touchposition(parent, id) {\n\t      return d3.touches(parent).filter(function(p) {\n\t        return p.identifier === id;\n\t      })[0];\n\t    }\n\t    function dragstart(id, position, move, end) {\n\t      return function() {\n\t        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n\t        if (origin) {\n\t          offset = origin.apply(target, arguments);\n\t          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n\t        } else {\n\t          offset = [ 0, 0 ];\n\t        }\n\t        event_({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n\t          dragged |= dx | dy;\n\t          origin_ = p;\n\t          event_({\n\t            type: \"drag\",\n\t            x: p[0] + offset[0],\n\t            y: p[1] + offset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n\t          dragRestore(dragged && d3.event.target === eventTarget);\n\t          event_({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(event_);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(event_);\n\t            };\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(event_);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(event_);\n\t          zoomed(event_);\n\t          zoomended(event_);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(event) {\n\t      event({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(event) {\n\t      rescale();\n\t      event({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(event) {\n\t      event({\n\t        type: \"zoomend\"\n\t      });\n\t    }\n\t    function mousedowned() {\n\t      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      zoomstarted(event_);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(target), l);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === eventTarget);\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      started();\n\t      zoomstarted(event_);\n\t      function relocate() {\n\t        var touches = d3.touches(target);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0], l = locations0[p.identifier];\n\t            scaleTo(view.k * 2);\n\t            translateTo(p, l);\n\t            d3_eventPreventDefault();\n\t            zoomed(event_);\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(target), p0, l0, p1, l1;\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        w.on(touchmove, null).on(touchend, null);\n\t        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var event_ = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      zoomstarted(event_);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(event_);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      var point = center || d3.mouse(this);\n\t      if (!translate0) translate0 = location(point);\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(point, translate0);\n\t      zoomed(event_);\n\t    }\n\t    function mousewheelreset() {\n\t      translate0 = null;\n\t    }\n\t    function dblclicked() {\n\t      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n\t      zoomstarted(event_);\n\t      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n\t      translateTo(p, l);\n\t      zoomed(event_);\n\t      zoomended(event_);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n\t  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return d3.event.wheelDelta;\n\t  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.detail;\n\t  }, \"MozMousePixelScroll\");\n\t  function d3_Color() {}\n\t  d3_Color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = function(h, s, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n\t  };\n\t  function d3_hsl(h, s, l) {\n\t    return new d3_Hsl(h, s, l);\n\t  }\n\t  function d3_Hsl(h, s, l) {\n\t    this.h = h;\n\t    this.s = s;\n\t    this.l = l;\n\t  }\n\t  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = function(h, c, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n\t  };\n\t  function d3_hcl(h, c, l) {\n\t    return new d3_Hcl(h, c, l);\n\t  }\n\t  function d3_Hcl(h, c, l) {\n\t    this.h = h;\n\t    this.c = c;\n\t    this.l = l;\n\t  }\n\t  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = function(l, a, b) {\n\t    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n\t  };\n\t  function d3_lab(l, a, b) {\n\t    return new d3_Lab(l, a, b);\n\t  }\n\t  function d3_Lab(l, a, b) {\n\t    this.l = l;\n\t    this.a = a;\n\t    this.b = b;\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = function(r, g, b) {\n\t    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n\t  };\n\t  function d3_rgbNumber(value) {\n\t    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  function d3_rgb(r, g, b) {\n\t    return new d3_Rgb(r, g, b);\n\t  }\n\t  function d3_Rgb(r, g, b) {\n\t    this.r = r;\n\t    this.g = g;\n\t    this.b = b;\n\t  }\n\t  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, name;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n\t    if (format != null && format.charAt(0) === \"#\") {\n\t      if (format.length === 4) {\n\t        r = format.charAt(1);\n\t        r += r;\n\t        g = format.charAt(2);\n\t        g += g;\n\t        b = format.charAt(3);\n\t        b += b;\n\t      } else if (format.length === 7) {\n\t        r = format.substring(1, 3);\n\t        g = format.substring(3, 5);\n\t        b = format.substring(5, 7);\n\t      }\n\t      r = parseInt(r, 16);\n\t      g = parseInt(g, 16);\n\t      b = parseInt(b, 16);\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.substring(j, I - k);\n\t        }\n\t        return text.substring(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && !(a = f(a, n++))) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  d3.format = function(specifier) {\n\t    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n\t    if (precision) precision = +precision.substring(1);\n\t    if (zfill || fill === \"0\" && align === \"=\") {\n\t      zfill = fill = \"0\";\n\t      align = \"=\";\n\t      if (comma) width -= Math.floor((width - 1) / 4);\n\t    }\n\t    switch (type) {\n\t     case \"n\":\n\t      comma = true;\n\t      type = \"g\";\n\t      break;\n\t\n\t     case \"%\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"f\";\n\t      break;\n\t\n\t     case \"p\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"r\";\n\t      break;\n\t\n\t     case \"b\":\n\t     case \"o\":\n\t     case \"x\":\n\t     case \"X\":\n\t      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\t\n\t     case \"c\":\n\t     case \"d\":\n\t      integer = true;\n\t      precision = 0;\n\t      break;\n\t\n\t     case \"s\":\n\t      scale = -1;\n\t      type = \"r\";\n\t      break;\n\t    }\n\t    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n\t    if (type == \"r\" && !precision) type = \"g\";\n\t    if (precision != null) {\n\t      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t    }\n\t    type = d3_format_types.get(type) || d3_format_typeDefault;\n\t    var zcomma = zfill && comma;\n\t    return function(value) {\n\t      if (integer && value % 1) return \"\";\n\t      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n\t      if (scale < 0) {\n\t        var prefix = d3.formatPrefix(value, precision);\n\t        value = prefix.scale(value);\n\t        suffix = prefix.symbol;\n\t      } else {\n\t        value *= scale;\n\t      }\n\t      value = type(value, precision);\n\t      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n\t      if (!zfill && comma) before = d3_format_group(before);\n\t      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t      if (zcomma) before = d3_format_group(padding + before);\n\t      negative += symbol;\n\t      value = before + after;\n\t      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n\t    };\n\t  };\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_format_group = d3_identity;\n\t  if (d3_format_grouping) {\n\t    var d3_format_groupingLength = d3_format_grouping.length;\n\t    d3_format_group = function(value) {\n\t      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n\t      while (i > 0 && g > 0) {\n\t        t.push(value.substring(i -= g, i + g));\n\t        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n\t      }\n\t      return t.reverse().join(d3_format_thousandsSeparator);\n\t    };\n\t  }\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t          listener.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          listener.polygonEnd();\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          listener.lineStart();\n\t          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t          listener.lineEnd();\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n\t        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function isLeft(a, b, c) {\n\t        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return projection.rotate([ 0, 0 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n\t      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n\t      vertices = []; i < n; ++i) {\n\t        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n\t      }\n\t      for (i = 1; i < n; ++i) {\n\t        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        if (i === h) continue;\n\t        y1 = vertices[i][1] - vertices[h][1];\n\t        x1 = vertices[i][0] - vertices[h][0];\n\t        points.push({\n\t          angle: Math.atan2(y1, x1),\n\t          index: i\n\t        });\n\t      }\n\t      points.sort(function(a, b) {\n\t        return a.angle - b.angle;\n\t      });\n\t      a = points[0].angle;\n\t      v = points[0].index;\n\t      u = 0;\n\t      for (i = 1; i < plen; ++i) {\n\t        j = points[i].index;\n\t        if (a == points[i].angle) {\n\t          x1 = vertices[v][0] - vertices[h][0];\n\t          y1 = vertices[v][1] - vertices[h][1];\n\t          x2 = vertices[j][0] - vertices[h][0];\n\t          y2 = vertices[j][1] - vertices[h][1];\n\t          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n\t            points[i].index = -1;\n\t            continue;\n\t          } else {\n\t            points[u].index = -1;\n\t          }\n\t        }\n\t        a = points[i].angle;\n\t        u = i;\n\t        v = j;\n\t      }\n\t      stack.push(h);\n\t      for (i = 0, j = 0; i < 2; ++j) {\n\t        if (points[j].index > -1) {\n\t          stack.push(points[j].index);\n\t          i++;\n\t        }\n\t      }\n\t      sp = stack.length;\n\t      for (;j < plen; ++j) {\n\t        if (points[j].index < 0) continue;\n\t        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n\t          --sp;\n\t        }\n\t        stack[sp++] = points[j].index;\n\t      }\n\t      var poly = [];\n\t      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n\t      return poly;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullCCW(i1, i2, i3, v) {\n\t    var t, a, b, c, d, e, f;\n\t    t = v[i1];\n\t    a = t[0];\n\t    b = t[1];\n\t    t = v[i2];\n\t    c = t[0];\n\t    d = t[1];\n\t    t = v[i3];\n\t    e = t[0];\n\t    f = t[1];\n\t    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = sx; else x2 = sx;\n\t        if (bottom) y1 = sy; else y2 = sy;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    b -= a = +a;\n\t    return function(t) {\n\t      return a + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n\t    a = a + \"\", b = b + \"\";\n\t    d3_interpolate_number.lastIndex = 0;\n\t    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n\t      if (m.index) s.push(b.substring(s0, s1 = m.index));\n\t      q.push({\n\t        i: s.length,\n\t        x: m[0]\n\t      });\n\t      s.push(null);\n\t      s0 = d3_interpolate_number.lastIndex;\n\t    }\n\t    if (s0 < b.length) s.push(b.substring(s0));\n\t    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n\t      o = q[i];\n\t      if (o.x == m[0]) {\n\t        if (o.i) {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i - 1] += o.x;\n\t            s.splice(o.i, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          } else {\n\t            s[o.i - 1] += o.x + s[o.i + 1];\n\t            s.splice(o.i, 2);\n\t            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n\t          }\n\t        } else {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i] = o.x;\n\t          } else {\n\t            s[o.i] = o.x + s[o.i + 1];\n\t            s.splice(o.i + 1, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          }\n\t        }\n\t        q.splice(i, 1);\n\t        n--;\n\t        i--;\n\t      } else {\n\t        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n\t      }\n\t    }\n\t    while (i < n) {\n\t      o = q.pop();\n\t      if (s[o.i + 1] == null) {\n\t        s[o.i] = o.x;\n\t      } else {\n\t        s[o.i] = o.x + s[o.i + 1];\n\t        s.splice(o.i + 1, 1);\n\t      }\n\t      n--;\n\t    }\n\t    if (s.length === 1) {\n\t      return s[0] == null ? (o = q[0].x, function(t) {\n\t        return o(t) + \"\";\n\t      }) : function() {\n\t        return b;\n\t      };\n\t    }\n\t    return function(t) {\n\t      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return (x - a) * b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) * b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n\t          if ((x2 - x1) * dn < theta) {\n\t            var k = quad.charge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t            return true;\n\t          }\n\t          if (quad.point && isFinite(dn)) {\n\t            var k = quad.pointCharge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return theta;\n\t      theta = +x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n\t        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function recurse(node, depth, nodes) {\n\t      var childs = children.call(hierarchy, node, depth);\n\t      node.depth = depth;\n\t      nodes.push(node);\n\t      if (childs && (n = childs.length)) {\n\t        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n\t        while (++i < n) {\n\t          d = c[i] = recurse(childs[i], j, nodes);\n\t          d.parent = node;\n\t          v += d.value;\n\t        }\n\t        if (sort) c.sort(sort);\n\t        if (value) node.value = v;\n\t      } else {\n\t        delete node.children;\n\t        if (value) {\n\t          node.value = +value.call(hierarchy, node, depth) || 0;\n\t        }\n\t      }\n\t      return node;\n\t    }\n\t    function revalue(node, depth) {\n\t      var children = node.children, v = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, j = depth + 1;\n\t        while (++i < n) v += revalue(children[i], j);\n\t      } else if (value) {\n\t        v = +value.call(hierarchy, node, depth) || 0;\n\t      }\n\t      if (value) node.value = v;\n\t      return v;\n\t    }\n\t    function hierarchy(d) {\n\t      var nodes = [];\n\t      recurse(d, 0, nodes);\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      revalue(root, 0);\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n\t    function pie(data) {\n\t      var values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      });\n\t      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n\t      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n\t      var index = d3.range(data.length);\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      var arcs = [];\n\t      index.forEach(function(i) {\n\t        var d;\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: d = values[i],\n\t          startAngle: a,\n\t          endAngle: a += d * k\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return pie;\n\t    };\n\t    pie.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(x) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = x;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(x) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = x;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var n = series.length, m = series[0].length, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n\t      function firstWalk(node, previousSibling) {\n\t        var children = node.children, layout = node._tree;\n\t        if (children && (n = children.length)) {\n\t          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n\t          while (++i < n) {\n\t            child = children[i];\n\t            firstWalk(child, previousChild);\n\t            ancestor = apportion(child, previousChild, ancestor);\n\t            previousChild = child;\n\t          }\n\t          d3_layout_treeShift(node);\n\t          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t            layout.mod = layout.prelim - midpoint;\n\t          } else {\n\t            layout.prelim = midpoint;\n\t          }\n\t        } else {\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t          }\n\t        }\n\t      }\n\t      function secondWalk(node, x) {\n\t        node.x = node._tree.prelim + x;\n\t        var children = node.children;\n\t        if (children && (n = children.length)) {\n\t          var i = -1, n;\n\t          x += node._tree.mod;\n\t          while (++i < n) {\n\t            secondWalk(children[i], x);\n\t          }\n\t        }\n\t      }\n\t      function apportion(node, previousSibling, ancestor) {\n\t        if (previousSibling) {\n\t          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n\t          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t            vom = d3_layout_treeLeft(vom);\n\t            vop = d3_layout_treeRight(vop);\n\t            vop._tree.ancestor = node;\n\t            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n\t            if (shift > 0) {\n\t              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n\t              sip += shift;\n\t              sop += shift;\n\t            }\n\t            sim += vim._tree.mod;\n\t            sip += vip._tree.mod;\n\t            som += vom._tree.mod;\n\t            sop += vop._tree.mod;\n\t          }\n\t          if (vim && !d3_layout_treeRight(vop)) {\n\t            vop._tree.thread = vim;\n\t            vop._tree.mod += sim - sop;\n\t          }\n\t          if (vip && !d3_layout_treeLeft(vom)) {\n\t            vom._tree.thread = vip;\n\t            vom._tree.mod += sip - som;\n\t            ancestor = node;\n\t          }\n\t        }\n\t        return ancestor;\n\t      }\n\t      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n\t        node._tree = {\n\t          ancestor: node,\n\t          prelim: 0,\n\t          mod: 0,\n\t          change: 0,\n\t          shift: 0,\n\t          number: previousSibling ? previousSibling._tree.number + 1 : 0\n\t        };\n\t      });\n\t      firstWalk(root);\n\t      secondWalk(root, -root._tree.prelim);\n\t      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x *= size[0];\n\t        node.y = node.depth * size[1];\n\t        delete node._tree;\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = node.depth / y1 * size[1];\n\t        delete node._tree;\n\t      });\n\t      return nodes;\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? children[0] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeSearch(node, compare) {\n\t    var children = node.children;\n\t    if (children && (n = children.length)) {\n\t      var child, n, i = -1;\n\t      while (++i < n) {\n\t        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n\t          node = child;\n\t        }\n\t      }\n\t    }\n\t    return node;\n\t  }\n\t  function d3_layout_treeRightmost(a, b) {\n\t    return a.x - b.x;\n\t  }\n\t  function d3_layout_treeLeftmost(a, b) {\n\t    return b.x - a.x;\n\t  }\n\t  function d3_layout_treeDeepest(a, b) {\n\t    return a.depth - b.depth;\n\t  }\n\t  function d3_layout_treeVisitAfter(node, callback) {\n\t    function visit(node, previousSibling) {\n\t      var children = node.children;\n\t      if (children && (n = children.length)) {\n\t        var child, previousChild = null, i = -1, n;\n\t        while (++i < n) {\n\t          child = children[i];\n\t          visit(child, previousChild);\n\t          previousChild = child;\n\t        }\n\t      }\n\t      callback(node, previousSibling);\n\t    }\n\t    visit(node, null);\n\t  }\n\t  function d3_layout_treeShift(node) {\n\t    var shift = 0, change = 0, children = node.children, i = children.length, child;\n\t    while (--i >= 0) {\n\t      child = children[i]._tree;\n\t      child.prelim += shift;\n\t      child.mod += shift;\n\t      shift += child.shift + (change += child.change);\n\t    }\n\t  }\n\t  function d3_layout_treeMove(ancestor, node, shift) {\n\t    ancestor = ancestor._tree;\n\t    node = node._tree;\n\t    var change = shift / (node.number - ancestor.number);\n\t    ancestor.change += change;\n\t    node.change -= change;\n\t    node.shift += shift;\n\t    node.prelim += shift;\n\t    node.mod += shift;\n\t  }\n\t  function d3_layout_treeAncestor(vim, node, ancestor) {\n\t    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_treeVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_treeVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n\t      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n\t    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n\t      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n\t      range = steps(start + Math.round(error / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.filter(function(d) {\n\t        return !isNaN(d);\n\t      }).sort(d3.ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function arc() {\n\t      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n\t      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n\t      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] + d3_svg_arcOffset;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  function d3_transition(groups, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection) {\n\t    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node.__transition__[id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node.__transition__[id].tween.remove(name);\n\t    } : function(node) {\n\t      node.__transition__[id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node.__transition__[id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node.__transition__[id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node.__transition__[id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node.__transition__[id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      d3_transitionInheritId = id;\n\t      d3_selection_each(this, function(node, i, j) {\n\t        d3_transitionInherit = node.__transition__[id];\n\t        type.call(node, node.__data__, i, j);\n\t      });\n\t      d3_transitionInherit = inherit;\n\t      d3_transitionInheritId = inheritId;\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node.__transition__[id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = Object.create(node.__transition__[id0]);\n\t          transition.delay += transition.duration;\n\t          d3_transitionNode(node, i, id1, transition);\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id1);\n\t  };\n\t  function d3_transitionNode(node, i, id, inherit) {\n\t    var lock = node.__transition__ || (node.__transition__ = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        ease: inherit.ease,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration\n\t      };\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, d, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, d, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return stop();\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, d, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node.__transition__;\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n\t        switch (orient) {\n\t         case \"bottom\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", innerTickSize);\n\t            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"top\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", -innerTickSize);\n\t            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"left\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", -innerTickSize);\n\t            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n\t            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"right\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", innerTickSize);\n\t            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n\t            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n\t            break;\n\t          }\n\t        }\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1);\n\t        }\n\t        tickEnter.call(tickTransform, scale0);\n\t        tickUpdate.call(tickTransform, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(\" + x(d) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(0,\" + y(d) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n\t  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  d3_time_daySymbols.forEach(function(day, i) {\n\t    day = day.toLowerCase();\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  d3_time.format = d3_time_format;\n\t  function d3_time_format(template) {\n\t    var n = template.length;\n\t    function format(date) {\n\t      var string = [], i = -1, j = 0, c, p, f;\n\t      while (++i < n) {\n\t        if (template.charCodeAt(i) === 37) {\n\t          string.push(template.substring(j, i));\n\t          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t      string.push(template.substring(j, i));\n\t      return string.join(\"\");\n\t    }\n\t    format.parse = function(string) {\n\t      var d = {\n\t        y: 1900,\n\t        m: 0,\n\t        d: 1,\n\t        H: 0,\n\t        M: 0,\n\t        S: 0,\n\t        L: 0,\n\t        Z: null\n\t      }, i = d3_time_parse(d, template, string, 0);\n\t      if (i != string.length) return null;\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t        date.setFullYear(d.y, 0, 1);\n\t        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t      } else date.setFullYear(d.y, d.m, d.d);\n\t      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n\t      return localZ ? date._ : date;\n\t    };\n\t    format.toString = function() {\n\t      return template;\n\t    };\n\t    return format;\n\t  }\n\t  function d3_time_parse(date, template, string, j) {\n\t    var c, p, t, i = 0, n = template.length, m = string.length;\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = template.charCodeAt(i++);\n\t      if (c === 37) {\n\t        t = template.charAt(i++);\n\t        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t        if (!p || (j = p(date, string, j)) < 0) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  };\n\t  var d3_time_formats = {\n\t    a: function(d) {\n\t      return d3_time_dayAbbreviations[d.getDay()];\n\t    },\n\t    A: function(d) {\n\t      return d3_time_days[d.getDay()];\n\t    },\n\t    b: function(d) {\n\t      return d3_time_monthAbbreviations[d.getMonth()];\n\t    },\n\t    B: function(d) {\n\t      return d3_time_months[d.getMonth()];\n\t    },\n\t    c: d3_time_format(d3_time_formatDateTime),\n\t    d: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    e: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    H: function(d, p) {\n\t      return d3_time_formatPad(d.getHours(), p, 2);\n\t    },\n\t    I: function(d, p) {\n\t      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t    },\n\t    j: function(d, p) {\n\t      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t    },\n\t    L: function(d, p) {\n\t      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t    },\n\t    m: function(d, p) {\n\t      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t    },\n\t    M: function(d, p) {\n\t      return d3_time_formatPad(d.getMinutes(), p, 2);\n\t    },\n\t    p: function(d) {\n\t      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n\t    },\n\t    S: function(d, p) {\n\t      return d3_time_formatPad(d.getSeconds(), p, 2);\n\t    },\n\t    U: function(d, p) {\n\t      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t    },\n\t    w: function(d) {\n\t      return d.getDay();\n\t    },\n\t    W: function(d, p) {\n\t      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t    },\n\t    x: d3_time_format(d3_time_formatDate),\n\t    X: d3_time_format(d3_time_formatTime),\n\t    y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t    },\n\t    Y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t    },\n\t    Z: d3_time_zone,\n\t    \"%\": function() {\n\t      return \"%\";\n\t    }\n\t  };\n\t  var d3_time_parsers = {\n\t    a: d3_time_parseWeekdayAbbrev,\n\t    A: d3_time_parseWeekday,\n\t    b: d3_time_parseMonthAbbrev,\n\t    B: d3_time_parseMonth,\n\t    c: d3_time_parseLocaleFull,\n\t    d: d3_time_parseDay,\n\t    e: d3_time_parseDay,\n\t    H: d3_time_parseHour24,\n\t    I: d3_time_parseHour24,\n\t    j: d3_time_parseDayOfYear,\n\t    L: d3_time_parseMilliseconds,\n\t    m: d3_time_parseMonthNumber,\n\t    M: d3_time_parseMinutes,\n\t    p: d3_time_parseAmPm,\n\t    S: d3_time_parseSeconds,\n\t    U: d3_time_parseWeekNumberSunday,\n\t    w: d3_time_parseWeekdayNumber,\n\t    W: d3_time_parseWeekNumberMonday,\n\t    x: d3_time_parseLocaleDate,\n\t    X: d3_time_parseLocaleTime,\n\t    y: d3_time_parseYear,\n\t    Y: d3_time_parseFullYear,\n\t    Z: d3_time_parseZone,\n\t    \"%\": d3_time_parseLiteralPercent\n\t  };\n\t  function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t    d3_time_dayAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekday(date, string, i) {\n\t    d3_time_dayRe.lastIndex = 0;\n\t    var n = d3_time_dayRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonthAbbrev(date, string, i) {\n\t    d3_time_monthAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonth(date, string, i) {\n\t    d3_time_monthRe.lastIndex = 0;\n\t    var n = d3_time_monthRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseLocaleFull(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleDate(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleTime(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  var d3_time_numberRe = /^\\s*\\d+/;\n\t  function d3_time_parseAmPm(date, string, i) {\n\t    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n\t    return n == null ? -1 : (date.p = n, i);\n\t  }\n\t  var d3_time_amPmLookup = d3.map({\n\t    am: 0,\n\t    pm: 1\n\t  });\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  d3_time_format.utc = d3_time_formatUtc;\n\t  function d3_time_formatUtc(template) {\n\t    var local = d3_time_format(template);\n\t    function format(date) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date();\n\t        utc._ = date;\n\t        return local(utc);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    format.parse = function(string) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var date = local.parse(string);\n\t        return date && date._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t    format.toString = local.toString;\n\t    return format;\n\t  }\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  function d3_time_scaleFormat(formats) {\n\t    return function(date) {\n\t      var i = formats.length - 1, f = formats[i];\n\t      while (!f[1](date)) f = formats[--i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n\t    return d.getMonth();\n\t  } ], [ d3_time_format(\"%b %d\"), function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%a %d\"), function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%I %p\"), function(d) {\n\t    return d.getHours();\n\t  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n\t    return d.getMinutes();\n\t  } ], [ d3_time_format(\":%S\"), function(d) {\n\t    return d.getSeconds();\n\t  } ], [ d3_time_format(\".%L\"), function(d) {\n\t    return d.getMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n\t  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  return d3;\n\t}();\n\t}.call(window));\n\n/***/ },\n\n/***/ 215:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"topojson\"] = __webpack_require__(216);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 216:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var topojson = {\n\t    version: \"1.6.9\",\n\t    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n\t    meshArcs: meshArcs,\n\t    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n\t    mergeArcs: mergeArcs,\n\t    feature: featureOrCollection,\n\t    neighbors: neighbors,\n\t    presimplify: presimplify\n\t  };\n\t\n\t  function stitchArcs(topology, arcs) {\n\t    var stitchedArcs = {},\n\t        fragmentByStart = {},\n\t        fragmentByEnd = {},\n\t        fragments = [],\n\t        emptyIndex = -1;\n\t\n\t    // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t    arcs.forEach(function(i, j) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t      }\n\t    });\n\t\n\t    arcs.forEach(function(i) {\n\t      var e = ends(i),\n\t          start = e[0],\n\t          end = e[1],\n\t          f, g;\n\t\n\t      if (f = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[f.end];\n\t        f.push(i);\n\t        f.end = end;\n\t        if (g = fragmentByStart[end]) {\n\t          delete fragmentByStart[g.start];\n\t          var fg = g === f ? f : f.concat(g);\n\t          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else if (f = fragmentByStart[end]) {\n\t        delete fragmentByStart[f.start];\n\t        f.unshift(i);\n\t        f.start = start;\n\t        if (g = fragmentByEnd[start]) {\n\t          delete fragmentByEnd[g.end];\n\t          var gf = g === f ? f : g.concat(f);\n\t          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else {\n\t        f = [i];\n\t        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t      }\n\t    });\n\t\n\t    function ends(i) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t      else p1 = arc[arc.length - 1];\n\t      return i < 0 ? [p1, p0] : [p0, p1];\n\t    }\n\t\n\t    function flush(fragmentByEnd, fragmentByStart) {\n\t      for (var k in fragmentByEnd) {\n\t        var f = fragmentByEnd[k];\n\t        delete fragmentByStart[f.start];\n\t        delete f.start;\n\t        delete f.end;\n\t        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t        fragments.push(f);\n\t      }\n\t    }\n\t\n\t    flush(fragmentByEnd, fragmentByStart);\n\t    flush(fragmentByStart, fragmentByEnd);\n\t    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t    return fragments;\n\t  }\n\t\n\t  function meshArcs(topology, o, filter) {\n\t    var arcs = [];\n\t\n\t    if (arguments.length > 1) {\n\t      var geomsByArc = [],\n\t          geom;\n\t\n\t      function arc(i) {\n\t        var j = i < 0 ? ~i : i;\n\t        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t      }\n\t\n\t      function line(arcs) {\n\t        arcs.forEach(arc);\n\t      }\n\t\n\t      function polygon(arcs) {\n\t        arcs.forEach(line);\n\t      }\n\t\n\t      function geometry(o) {\n\t        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t      }\n\t\n\t      var geometryType = {\n\t        LineString: line,\n\t        MultiLineString: polygon,\n\t        Polygon: polygon,\n\t        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t      };\n\t\n\t      geometry(o);\n\t\n\t      geomsByArc.forEach(arguments.length < 3\n\t          ? function(geoms) { arcs.push(geoms[0].i); }\n\t          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t    } else {\n\t      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t    }\n\t\n\t    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t  }\n\t\n\t  function mergeArcs(topology, objects) {\n\t    var polygonsByArc = {},\n\t        polygons = [],\n\t        components = [];\n\t\n\t    objects.forEach(function(o) {\n\t      if (o.type === \"Polygon\") register(o.arcs);\n\t      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t    });\n\t\n\t    function register(polygon) {\n\t      polygon.forEach(function(ring) {\n\t        ring.forEach(function(arc) {\n\t          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t        });\n\t      });\n\t      polygons.push(polygon);\n\t    }\n\t\n\t    function exterior(ring) {\n\t      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n\t    }\n\t\n\t    polygons.forEach(function(polygon) {\n\t      if (!polygon._) {\n\t        var component = [],\n\t            neighbors = [polygon];\n\t        polygon._ = 1;\n\t        components.push(component);\n\t        while (polygon = neighbors.pop()) {\n\t          component.push(polygon);\n\t          polygon.forEach(function(ring) {\n\t            ring.forEach(function(arc) {\n\t              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t                if (!polygon._) {\n\t                  polygon._ = 1;\n\t                  neighbors.push(polygon);\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t      }\n\t    });\n\t\n\t    polygons.forEach(function(polygon) {\n\t      delete polygon._;\n\t    });\n\t\n\t    return {\n\t      type: \"MultiPolygon\",\n\t      arcs: components.map(function(polygons) {\n\t        var arcs = [];\n\t\n\t        // Extract the exterior (unique) arcs.\n\t        polygons.forEach(function(polygon) {\n\t          polygon.forEach(function(ring) {\n\t            ring.forEach(function(arc) {\n\t              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t                arcs.push(arc);\n\t              }\n\t            });\n\t          });\n\t        });\n\t\n\t        // Stitch the arcs into one or more rings.\n\t        arcs = stitchArcs(topology, arcs);\n\t\n\t        // If more than one ring is returned,\n\t        // at most one of these rings can be the exterior;\n\t        // this exterior ring has the same winding order\n\t        // as any exterior ring in the original polygons.\n\t        if ((n = arcs.length) > 1) {\n\t          var sgn = exterior(polygons[0][0]);\n\t          for (var i = 0, t; i < n; ++i) {\n\t            if (sgn === exterior(arcs[i])) {\n\t              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        return arcs;\n\t      })\n\t    };\n\t  }\n\t\n\t  function featureOrCollection(topology, o) {\n\t    return o.type === \"GeometryCollection\" ? {\n\t      type: \"FeatureCollection\",\n\t      features: o.geometries.map(function(o) { return feature(topology, o); })\n\t    } : feature(topology, o);\n\t  }\n\t\n\t  function feature(topology, o) {\n\t    var f = {\n\t      type: \"Feature\",\n\t      id: o.id,\n\t      properties: o.properties || {},\n\t      geometry: object(topology, o)\n\t    };\n\t    if (o.id == null) delete f.id;\n\t    return f;\n\t  }\n\t\n\t  function object(topology, o) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        arcs = topology.arcs;\n\t\n\t    function arc(i, points) {\n\t      if (points.length) points.pop();\n\t      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t        points.push(p = a[k].slice());\n\t        absolute(p, k);\n\t      }\n\t      if (i < 0) reverse(points, n);\n\t    }\n\t\n\t    function point(p) {\n\t      p = p.slice();\n\t      absolute(p, 0);\n\t      return p;\n\t    }\n\t\n\t    function line(arcs) {\n\t      var points = [];\n\t      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t      if (points.length < 2) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function ring(arcs) {\n\t      var points = line(arcs);\n\t      while (points.length < 4) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      return arcs.map(ring);\n\t    }\n\t\n\t    function geometry(o) {\n\t      var t = o.type;\n\t      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t          : null;\n\t    }\n\t\n\t    var geometryType = {\n\t      Point: function(o) { return point(o.coordinates); },\n\t      MultiPoint: function(o) { return o.coordinates.map(point); },\n\t      LineString: function(o) { return line(o.arcs); },\n\t      MultiLineString: function(o) { return o.arcs.map(line); },\n\t      Polygon: function(o) { return polygon(o.arcs); },\n\t      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t    };\n\t\n\t    return geometry(o);\n\t  }\n\t\n\t  function reverse(array, n) {\n\t    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t  }\n\t\n\t  function bisect(a, x) {\n\t    var lo = 0, hi = a.length;\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (a[mid] < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  function neighbors(objects) {\n\t    var indexesByArc = {}, // arc index -> array of object indexes\n\t        neighbors = objects.map(function() { return []; });\n\t\n\t    function line(arcs, i) {\n\t      arcs.forEach(function(a) {\n\t        if (a < 0) a = ~a;\n\t        var o = indexesByArc[a];\n\t        if (o) o.push(i);\n\t        else indexesByArc[a] = [i];\n\t      });\n\t    }\n\t\n\t    function polygon(arcs, i) {\n\t      arcs.forEach(function(arc) { line(arc, i); });\n\t    }\n\t\n\t    function geometry(o, i) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t    }\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t    };\n\t\n\t    objects.forEach(geometry);\n\t\n\t    for (var i in indexesByArc) {\n\t      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t        for (var k = j + 1; k < m; ++k) {\n\t          var ij = indexes[j], ik = indexes[k], n;\n\t          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t        }\n\t      }\n\t    }\n\t\n\t    return neighbors;\n\t  }\n\t\n\t  function presimplify(topology, triangleArea) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        relative = transformRelative(topology.transform),\n\t        heap = minAreaHeap(),\n\t        maxArea = 0,\n\t        triangle;\n\t\n\t    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      var triangles = [];\n\t\n\t      arc.forEach(absolute);\n\t\n\t      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n\t        triangle = arc.slice(i - 1, i + 2);\n\t        triangle[1][2] = triangleArea(triangle);\n\t        triangles.push(triangle);\n\t        heap.push(triangle);\n\t      }\n\t\n\t      // Always keep the arc endpoints!\n\t      arc[0][2] = arc[n][2] = Infinity;\n\t\n\t      for (var i = 0, n = triangles.length; i < n; ++i) {\n\t        triangle = triangles[i];\n\t        triangle.previous = triangles[i - 1];\n\t        triangle.next = triangles[i + 1];\n\t      }\n\t    });\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the area of the current point is less than that of the previous point\n\t      // to be eliminated, use the latter's area instead. This ensures that the\n\t      // current point cannot be eliminated without eliminating previously-\n\t      // eliminated points.\n\t      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t      else maxArea = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      arc.forEach(relative);\n\t    });\n\t\n\t    function update(triangle) {\n\t      heap.remove(triangle);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    return topology;\n\t  };\n\t\n\t  function cartesianRingArea(ring) {\n\t    var i = -1,\n\t        n = ring.length,\n\t        a,\n\t        b = ring[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = ring[i];\n\t      area += a[0] * b[1] - a[1] * b[0];\n\t    }\n\t\n\t    return area * .5;\n\t  }\n\t\n\t  function cartesianTriangleArea(triangle) {\n\t    var a = triangle[0], b = triangle[1], c = triangle[2];\n\t    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t  }\n\t\n\t  function compareArea(a, b) {\n\t    return a[1][2] - b[1][2];\n\t  }\n\t\n\t  function minAreaHeap() {\n\t    var heap = {},\n\t        array = [],\n\t        size = 0;\n\t\n\t    heap.push = function(object) {\n\t      up(array[object._ = size] = object, size++);\n\t      return size;\n\t    };\n\t\n\t    heap.pop = function() {\n\t      if (size <= 0) return;\n\t      var removed = array[0], object;\n\t      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t      return removed;\n\t    };\n\t\n\t    heap.remove = function(removed) {\n\t      var i = removed._, object;\n\t      if (array[i] !== removed) return; // invalid request\n\t      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t      return i;\n\t    };\n\t\n\t    function up(object, i) {\n\t      while (i > 0) {\n\t        var j = ((i + 1) >> 1) - 1,\n\t            parent = array[j];\n\t        if (compareArea(object, parent) >= 0) break;\n\t        array[parent._ = i] = parent;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    function down(object, i) {\n\t      while (true) {\n\t        var r = (i + 1) << 1,\n\t            l = r - 1,\n\t            j = i,\n\t            child = array[j];\n\t        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t        if (j === i) break;\n\t        array[child._ = i] = child;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    return heap;\n\t  }\n\t\n\t  function transformAbsolute(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      point[0] = (x0 += point[0]) * kx + dx;\n\t      point[1] = (y0 += point[1]) * ky + dy;\n\t    };\n\t  }\n\t\n\t  function transformRelative(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      var x1 = (point[0] - dx) / kx | 0,\n\t          y1 = (point[1] - dy) / ky | 0;\n\t      point[0] = x1 - x0;\n\t      point[1] = y1 - y0;\n\t      x0 = x1;\n\t      y0 = y1;\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (topojson), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n\t  else this.topojson = topojson;\n\t}();\n\n\n/***/ },\n\n/***/ 217:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {module.exports = global[\"Datamap\"] = __webpack_require__(218);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 218:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var svg;\n\t\n\t  //save off default references\n\t  var d3 = window.d3, topojson = window.topojson;\n\t  \n\t  var defaultOptions = {\n\t    scope: 'world',\n\t    responsive: false,\n\t    setProjection: setProjection,\n\t    projection: 'equirectangular',\n\t    dataType: 'json',\n\t    data: {},\n\t    done: function() {},\n\t    fills: {\n\t      defaultFill: '#ABDDA4'\n\t    },\n\t    geographyConfig: {\n\t        dataUrl: null,\n\t        hideAntarctica: true,\n\t        borderWidth: 1,\n\t        borderColor: '#FDFDFD',\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n\t        },\n\t        popupOnHover: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2\n\t    },\n\t    projectionConfig: {\n\t      rotation: [97, 0]\n\t    },\n\t    bubblesConfig: {\n\t        borderWidth: 2,\n\t        borderColor: '#FFFFFF',\n\t        popupOnHover: true,\n\t        radius: null,\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n\t        },\n\t        fillOpacity: 0.75,\n\t        animate: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2,\n\t        highlightFillOpacity: 0.85,\n\t        exitDelay: 100\n\t    },\n\t    arcConfig: {\n\t      strokeColor: '#DD1C77',\n\t      strokeWidth: 1,\n\t      arcSharpness: 1,\n\t      animationSpeed: 600\n\t    }\n\t  };\n\t\n\t  /*\n\t    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n\t  */\n\t  function val( datumValue, optionsValue, context ) {\n\t    if ( typeof context === 'undefined' ) {\n\t      context = optionsValue;\n\t      optionsValues = undefined;\n\t    }\n\t    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\t\n\t    if (typeof value === 'undefined') {\n\t      return  null;\n\t    }\n\t\n\t    if ( typeof value === 'function' ) {\n\t      var fnContext = [context];\n\t      if ( context.geography ) {\n\t        fnContext = [context.geography, context.data];\n\t      }\n\t      return value.apply(null, fnContext);\n\t    }\n\t    else {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  function addContainer( element, height, width ) {\n\t    this.svg = d3.select( element ).append('svg')\n\t      .attr('width', width || element.offsetWidth)\n\t      .attr('data-width', width || element.offsetWidth)\n\t      .attr('class', 'datamap')\n\t      .attr('height', height || element.offsetHeight)\n\t      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\t\n\t    if (this.options.responsive) {\n\t      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n\t      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n\t      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\t    \n\t    }\n\t\n\t    return this.svg;\n\t  }\n\t\n\t  // setProjection takes the svg element and options\n\t  function setProjection( element, options ) {\n\t    var width = options.width || element.offsetWidth;\n\t    var height = options.height || element.offsetHeight;\n\t    var projection, path;\n\t    var svg = this.svg;\n\t    \n\t    if ( options && typeof options.scope === 'undefined') {\n\t      options.scope = 'world';\n\t    }\n\t\n\t    if ( options.scope === 'usa' ) {\n\t      projection = d3.geo.albersUsa()\n\t        .scale(width)\n\t        .translate([width / 2, height / 2]);\n\t    }\n\t    else if ( options.scope === 'world' ) {\n\t      projection = d3.geo[options.projection]()\n\t        .scale((width + 1) / 2 / Math.PI)\n\t        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n\t    }\n\t\n\t    if ( options.projection === 'orthographic' ) {\n\t\n\t      svg.append(\"defs\").append(\"path\")\n\t        .datum({type: \"Sphere\"})\n\t        .attr(\"id\", \"sphere\")\n\t        .attr(\"d\", path);\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"stroke\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"fill\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n\t    }\n\t\n\t    path = d3.geo.path()\n\t      .projection( projection );\n\t\n\t    return {path: path, projection: projection};\n\t  }\n\t\n\t  function addStyleBlock() {\n\t    if ( d3.select('.datamaps-style-block').empty() ) {\n\t      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n\t      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n\t    }\n\t  }\n\t\n\t  function drawSubunits( data ) {\n\t    var fillData = this.options.fills,\n\t        colorCodeData = this.options.data || {},\n\t        geoConfig = this.options.geographyConfig;\n\t\n\t\n\t    var subunits = this.svg.select('g.datamaps-subunits');\n\t    if ( subunits.empty() ) {\n\t      subunits = this.addLayer('datamaps-subunits', null, true);\n\t    }\n\t\n\t    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n\t    if ( geoConfig.hideAntarctica ) {\n\t      geoData = geoData.filter(function(feature) {\n\t        return feature.id !== \"ATA\";\n\t      });\n\t    }\n\t\n\t    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\t\n\t    geo.enter()\n\t      .append('path')\n\t      .attr('d', this.path)\n\t      .attr('class', function(d) {\n\t        return 'datamaps-subunit ' + d.id;\n\t      })\n\t      .attr('data-info', function(d) {\n\t        return JSON.stringify( colorCodeData[d.id]);\n\t      })\n\t      .style('fill', function(d) {\n\t        //if fillKey - use that\n\t        //otherwise check 'fill'\n\t        //otherwise check 'defaultFill'\n\t        var fillColor;\n\t\n\t        var datum = colorCodeData[d.id];\n\t        if ( datum && datum.fillKey ) {\n\t          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n\t        }\n\t        \n\t        if ( typeof fillColor === 'undefined' ) {\n\t          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n\t        }\n\t\n\t        return fillColor;\n\t      })\n\t      .style('stroke-width', geoConfig.borderWidth)\n\t      .style('stroke', geoConfig.borderColor);\n\t  }\n\t\n\t  function handleGeographyConfig () {\n\t    var hoverover;\n\t    var svg = this.svg;\n\t    var self = this;\n\t    var options = this.options.geographyConfig;\n\t\n\t    if ( options.highlightOnHover || options.popupOnHover ) {\n\t      svg.selectAll('.datamaps-subunit')\n\t        .on('mouseover', function(d) {\n\t          var $this = d3.select(this);\n\t          var datum = self.options.data[d.id] || {};\n\t          if ( options.highlightOnHover ) {\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t\n\t            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n\t            if ( ! /((MSIE)|(Trident))/.test ) {\n\t             moveToFront.call(this);\n\t            }\n\t          }\n\t\n\t          if ( options.popupOnHover ) {\n\t            self.updatePopup($this, d, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function() {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t          $this.on('mousemove', null);\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        });\n\t    }\n\t    \n\t    function moveToFront() {\n\t      this.parentNode.appendChild(this);\n\t    }\n\t  }\n\t\n\t  //plugin to add a simple map legend\n\t  function addLegend(layer, data, options) {\n\t    data = data || {};\n\t    if ( !this.options.fills ) {\n\t      return;\n\t    }\n\t\n\t    var html = '<dl>';\n\t    var label = '';\n\t    if ( data.legendTitle ) {\n\t      html = '<h2>' + data.legendTitle + '</h2>' + html;\n\t    }\n\t    for ( var fillKey in this.options.fills ) {\n\t\n\t      if ( fillKey === 'defaultFill') {\n\t        if (! data.defaultFillName ) {\n\t          continue;\n\t        }\n\t        label = data.defaultFillName;\n\t      } else {\n\t        if (data.labels && data.labels[fillKey]) {\n\t          label = data.labels[fillKey];\n\t        } else {\n\t          label= fillKey + ': ';\n\t        }\n\t      }\n\t      html += '<dt>' + label + '</dt>';\n\t      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n\t    }\n\t    html += '</dl>';\n\t\n\t    var hoverover = d3.select( this.options.element ).append('div')\n\t      .attr('class', 'datamaps-legend')\n\t      .html(html);\n\t  }\n\t\n\t    function addGraticule ( layer, options ) {\n\t      var graticule = d3.geo.graticule();\n\t      this.svg.insert(\"path\", '.datamaps-subunits')\n\t        .datum(graticule)\n\t        .attr(\"class\", \"datamaps-graticule\")\n\t        .attr(\"d\", this.path); \n\t  }\n\t\n\t  function handleArcs (layer, data, options) {\n\t    var self = this,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - arcs must be an array\";\n\t    }\n\t\n\t    // For some reason arc options were put in an `options` object instead of the parent arc\n\t    // I don't like this, so to match bubbles and other plugins I'm moving it\n\t    // This is to keep backwards compatability\n\t    for ( var i = 0; i < data.length; i++ ) {\n\t      data[i] = defaults(data[i], data[i].options);\n\t      delete data[i].options;\n\t    }\n\t\n\t    if ( typeof options === \"undefined\" ) {\n\t      options = defaultOptions.arcConfig;\n\t    }\n\t\n\t    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\t\n\t    var path = d3.geo.path()\n\t        .projection(self.projection);\n\t\n\t    arcs\n\t      .enter()\n\t        .append('svg:path')\n\t        .attr('class', 'datamaps-arc')\n\t        .style('stroke-linecap', 'round')\n\t        .style('stroke', function(datum) {\n\t          return val(datum.strokeColor, options.strokeColor, datum);\n\t        })\n\t        .style('fill', 'none')\n\t        .style('stroke-width', function(datum) {\n\t            return val(datum.strokeWidth, options.strokeWidth, datum);\n\t        })\n\t        .attr('d', function(datum) {\n\t            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n\t            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n\t            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n\t            if (options.greatArc) {\n\t                  // TODO: Move this to inside `if` clause when setting attr `d`\n\t              var greatArc = d3.geo.greatArc()\n\t                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n\t                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\t\n\t              return path(greatArc(datum))\n\t            }\n\t            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n\t            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n\t        })\n\t        .transition()\n\t          .delay(100)\n\t          .style('fill', function(datum) {\n\t            /*\n\t              Thank you Jake Archibald, this is awesome.\n\t              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n\t            */\n\t            var length = this.getTotalLength();\n\t            this.style.transition = this.style.WebkitTransition = 'none';\n\t            this.style.strokeDasharray = length + ' ' + length;\n\t            this.style.strokeDashoffset = length;\n\t            this.getBoundingClientRect();\n\t            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n\t            this.style.strokeDashoffset = '0';\n\t            return 'none';\n\t          })\n\t\n\t    arcs.exit()\n\t      .transition()\n\t      .style('opacity', 0)\n\t      .remove();\n\t  }\n\t\n\t  function handleLabels ( layer, options ) {\n\t    var self = this;\n\t    options = options || {};\n\t    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n\t    this.svg.selectAll(\".datamaps-subunit\")\n\t      .attr(\"data-foo\", function(d) {\n\t        var center = self.path.centroid(d);\n\t        var xOffset = 7.5, yOffset = 5;\n\t\n\t        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n\t        if ( d.id === \"NY\" ) xOffset = -1;\n\t        if ( d.id === \"MI\" ) yOffset = 18;\n\t        if ( d.id === \"LA\" ) xOffset = 13;\n\t\n\t        var x,y;\n\t\n\t        x = center[0] - xOffset;\n\t        y = center[1] + yOffset;\n\t\n\t        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n\t        if ( smallStateIndex > -1) {\n\t          var yStart = labelStartCoodinates[1];\n\t          x = labelStartCoodinates[0];\n\t          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n\t          layer.append(\"line\")\n\t            .attr(\"x1\", x - 3)\n\t            .attr(\"y1\", y - 5)\n\t            .attr(\"x2\", center[0])\n\t            .attr(\"y2\", center[1])\n\t            .style(\"stroke\", options.labelColor || \"#000\")\n\t            .style(\"stroke-width\", options.lineWidth || 1)\n\t        }\n\t\n\t        layer.append(\"text\")\n\t          .attr(\"x\", x)\n\t          .attr(\"y\", y)\n\t          .style(\"font-size\", (options.fontSize || 10) + 'px')\n\t          .style(\"font-family\", options.fontFamily || \"Verdana\")\n\t          .style(\"fill\", options.labelColor || \"#000\")\n\t          .text( d.id );\n\t        return \"bar\";\n\t      });\n\t  }\n\t\n\t\n\t  function handleBubbles (layer, data, options ) {\n\t    var self = this,\n\t        fillData = this.options.fills,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - bubbles must be an array\";\n\t    }\n\t\n\t    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\t\n\t    bubbles\n\t      .enter()\n\t        .append('svg:circle')\n\t        .attr('class', 'datamaps-bubble')\n\t        .attr('cx', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[0];\n\t        })\n\t        .attr('cy', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[1];;\n\t        })\n\t        .attr('r', 0) //for animation purposes\n\t        .attr('data-info', function(d) {\n\t          return JSON.stringify(d);\n\t        })\n\t        .style('stroke', function ( datum ) {\n\t          return val(datum.borderColor, options.borderColor, datum);\n\t        })\n\t        .style('stroke-width', function ( datum ) {\n\t          return val(datum.borderWidth, options.borderWidth, datum);\n\t        })\n\t        .style('fill-opacity', function ( datum ) {\n\t          return val(datum.fillOpacity, options.fillOpacity, datum);\n\t        })\n\t        .style('fill', function ( datum ) {\n\t          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n\t          return fillColor || fillData.defaultFill;\n\t        })\n\t        .on('mouseover', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //save all previous attributes for mouseout\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t          }\n\t\n\t          if (options.popupOnHover) {\n\t            self.updatePopup($this, datum, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        })\n\t        .transition().duration(400)\n\t          .attr('r', function ( datum ) {\n\t            return val(datum.radius, options.radius, datum);\n\t          });\n\t\n\t    bubbles.exit()\n\t      .transition()\n\t        .delay(options.exitDelay)\n\t        .attr(\"r\", 0)\n\t        .remove();\n\t\n\t    function datumHasCoords (datum) {\n\t      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n\t    }\n\t\n\t  }\n\t\n\t  //stolen from underscore.js\n\t  function defaults(obj) {\n\t    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n\t      if (source) {\n\t        for (var prop in source) {\n\t          if (obj[prop] == null) obj[prop] = source[prop];\n\t        }\n\t      }\n\t    });\n\t    return obj;\n\t  }\n\t  /**************************************\n\t             Public Functions\n\t  ***************************************/\n\t\n\t  function Datamap( options ) {\n\t\n\t    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n\t      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n\t   }\n\t    //set options for global use\n\t    this.options = defaults(options, defaultOptions);\n\t    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n\t    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n\t    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n\t    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\t\n\t    //add the SVG container\n\t    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n\t      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n\t    }\n\t\n\t    /* Add core plugins to this instance */\n\t    this.addPlugin('bubbles', handleBubbles);\n\t    this.addPlugin('legend', addLegend);\n\t    this.addPlugin('arc', handleArcs);\n\t    this.addPlugin('labels', handleLabels);\n\t    this.addPlugin('graticule', addGraticule);\n\t\n\t    //append style block with basic hoverover styles\n\t    if ( ! this.options.disableDefaultStyles ) {\n\t      addStyleBlock();\n\t    }\n\t\n\t    return this.draw();\n\t  }\n\t\n\t  // resize map\n\t  Datamap.prototype.resize = function () {\n\t\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    if (options.responsive) {\n\t      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n\t          newsize = options.element.clientWidth,\n\t          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\t\n\t      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n\t    }\n\t  }\n\t\n\t  // actually draw the features(states & countries)\n\t  Datamap.prototype.draw = function() {\n\t    //save off in a closure\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    //set projections and paths based on scope\n\t    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\t\n\t    this.path = pathAndProjection.path;\n\t    this.projection = pathAndProjection.projection;\n\t\n\t    //if custom URL for topojson data, retrieve it and render\n\t    if ( options.geographyConfig.dataUrl ) {\n\t      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n\t        if ( error ) throw new Error(error);\n\t        self.customTopo = results;\n\t        draw( results );\n\t      });\n\t    }\n\t    else {\n\t      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n\t    }\n\t\n\t    return this;\n\t\n\t      function draw (data) {\n\t        // if fetching remote data, draw the map first then call `updateChoropleth`\n\t        if ( self.options.dataUrl ) {\n\t          //allow for csv or json data types\n\t          d3[self.options.dataType](self.options.dataUrl, function(data) {\n\t            //in the case of csv, transform data to object\n\t            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n\t              var tmpData = {};\n\t              for(var i = 0; i < data.length; i++) {\n\t                tmpData[data[i].id] = data[i];\n\t              } \n\t              data = tmpData;\n\t            }\n\t            Datamaps.prototype.updateChoropleth.call(self, data);\n\t          });\n\t        }\n\t        drawSubunits.call(self, data);\n\t        handleGeographyConfig.call(self);\n\t\n\t        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n\t          hoverover = d3.select( self.options.element ).append('div')\n\t            .attr('class', 'datamaps-hoverover')\n\t            .style('z-index', 10001)\n\t            .style('position', 'absolute');\n\t        }\n\t\n\t        //fire off finished callback\n\t        self.options.done(self);\n\t      }\n\t  };\n\t  /**************************************\n\t                TopoJSON\n\t  ***************************************/\n\t  Datamap.prototype.worldTopo = '__WORLD__';\n\t  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\t\n\t  /**************************************\n\t                Utilities\n\t  ***************************************/\n\t\n\t  //convert lat/lng coords to X / Y coords\n\t  Datamap.prototype.latLngToXY = function(lat, lng) {\n\t     return this.projection([lng, lat]);\n\t  };\n\t\n\t  //add <g> layer to root SVG\n\t  Datamap.prototype.addLayer = function( className, id, first ) {\n\t    var layer;\n\t    if ( first ) {\n\t      layer = this.svg.insert('g', ':first-child')\n\t    }\n\t    else {\n\t      layer = this.svg.append('g')\n\t    }\n\t    return layer.attr('id', id || '')\n\t      .attr('class', className || '');\n\t  };\n\t\n\t  Datamap.prototype.updateChoropleth = function(data) {\n\t    var svg = this.svg;\n\t    for ( var subunit in data ) {\n\t      if ( data.hasOwnProperty(subunit) ) {\n\t        var color;\n\t        var subunitData = data[subunit]\n\t        if ( ! subunit ) {\n\t          continue;\n\t        }\n\t        else if ( typeof subunitData === \"string\" ) {\n\t          color = subunitData;\n\t        }\n\t        else if ( typeof subunitData.color === \"string\" ) {\n\t          color = subunitData.color;\n\t        }\n\t        else {\n\t          color = this.options.fills[ subunitData.fillKey ];\n\t        }\n\t        //if it's an object, overriding the previous data\n\t        if ( subunitData === Object(subunitData) ) {\n\t          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n\t          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n\t        }\n\t        svg\n\t          .selectAll('.' + subunit)\n\t          .transition()\n\t            .style('fill', color);\n\t      }\n\t    }\n\t  };\n\t\n\t  Datamap.prototype.updatePopup = function (element, d, options) {\n\t    var self = this;\n\t    element.on('mousemove', null);\n\t    element.on('mousemove', function() {\n\t      var position = d3.mouse(self.options.element);\n\t      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n\t        .style('top', ( (position[1] + 30)) + \"px\")\n\t        .html(function() {\n\t          var data = JSON.parse(element.attr('data-info'));\n\t          //if ( !data ) return '';\n\t          return options.popupTemplate(d, data);\n\t        })\n\t        .style('left', ( position[0]) + \"px\");\n\t    });\n\t\n\t    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n\t  };\n\t\n\t  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n\t    var self = this;\n\t    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n\t      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n\t        var layer;\n\t        if ( typeof createNewLayer === \"undefined\" ) {\n\t          createNewLayer = false;\n\t        }\n\t\n\t        if ( typeof options === 'function' ) {\n\t          callback = options;\n\t          options = undefined;\n\t        }\n\t\n\t        options = defaults(options || {}, self.options[name + 'Config']);\n\t\n\t        //add a single layer, reuse the old layer\n\t        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n\t          layer = this.options[name + 'Layer'];\n\t          options = options || this.options[name + 'Options'];\n\t        }\n\t        else {\n\t          layer = this.addLayer(name);\n\t          this.options[name + 'Layer'] = layer;\n\t          this.options[name + 'Options'] = options;\n\t        }\n\t        pluginFn.apply(this, [layer, data, options]);\n\t        if ( callback ) {\n\t          callback(layer);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  // expose library\n\t  if ( true ) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) { d3 = __webpack_require__(219); topojson = __webpack_require__(220); return Datamap; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  else {\n\t    window.Datamap = window.Datamaps = Datamap;\n\t  }\n\t\n\t  if ( window.jQuery ) {\n\t    window.jQuery.fn.datamaps = function(options, callback) {\n\t      options = options || {};\n\t      options.element = this[0];\n\t      var datamap = new Datamap(options);\n\t      if ( typeof callback === \"function\" ) {\n\t        callback(datamap, options);\n\t      }\n\t      return this;\n\t    };\n\t  }\n\t})();\n\n\n/***/ },\n\n/***/ 219:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 220:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.topojson = global.topojson || {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function noop() {}\n\t\n\t  function transformAbsolute(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      point[0] = (x0 += point[0]) * kx + dx;\n\t      point[1] = (y0 += point[1]) * ky + dy;\n\t    };\n\t  }\n\t\n\t  function transformRelative(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      var x1 = Math.round((point[0] - dx) / kx),\n\t          y1 = Math.round((point[1] - dy) / ky);\n\t      point[0] = x1 - x0;\n\t      point[1] = y1 - y0;\n\t      x0 = x1;\n\t      y0 = y1;\n\t    };\n\t  }\n\t\n\t  function reverse(array, n) {\n\t    var t, j = array.length, i = j - n;\n\t    while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t  }\n\t\n\t  function bisect(a, x) {\n\t    var lo = 0, hi = a.length;\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (a[mid] < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  function feature(topology, o) {\n\t    return o.type === \"GeometryCollection\" ? {\n\t      type: \"FeatureCollection\",\n\t      features: o.geometries.map(function(o) { return feature$1(topology, o); })\n\t    } : feature$1(topology, o);\n\t  }\n\t\n\t  function feature$1(topology, o) {\n\t    var f = {\n\t      type: \"Feature\",\n\t      id: o.id,\n\t      properties: o.properties || {},\n\t      geometry: object(topology, o)\n\t    };\n\t    if (o.id == null) delete f.id;\n\t    return f;\n\t  }\n\t\n\t  function object(topology, o) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        arcs = topology.arcs;\n\t\n\t    function arc(i, points) {\n\t      if (points.length) points.pop();\n\t      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t        points.push(p = a[k].slice());\n\t        absolute(p, k);\n\t      }\n\t      if (i < 0) reverse(points, n);\n\t    }\n\t\n\t    function point(p) {\n\t      p = p.slice();\n\t      absolute(p, 0);\n\t      return p;\n\t    }\n\t\n\t    function line(arcs) {\n\t      var points = [];\n\t      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t      if (points.length < 2) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function ring(arcs) {\n\t      var points = line(arcs);\n\t      while (points.length < 4) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      return arcs.map(ring);\n\t    }\n\t\n\t    function geometry(o) {\n\t      var t = o.type;\n\t      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t          : null;\n\t    }\n\t\n\t    var geometryType = {\n\t      Point: function(o) { return point(o.coordinates); },\n\t      MultiPoint: function(o) { return o.coordinates.map(point); },\n\t      LineString: function(o) { return line(o.arcs); },\n\t      MultiLineString: function(o) { return o.arcs.map(line); },\n\t      Polygon: function(o) { return polygon(o.arcs); },\n\t      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t    };\n\t\n\t    return geometry(o);\n\t  }\n\t\n\t  function stitchArcs(topology, arcs) {\n\t    var stitchedArcs = {},\n\t        fragmentByStart = {},\n\t        fragmentByEnd = {},\n\t        fragments = [],\n\t        emptyIndex = -1;\n\t\n\t    // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t    arcs.forEach(function(i, j) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t      }\n\t    });\n\t\n\t    arcs.forEach(function(i) {\n\t      var e = ends(i),\n\t          start = e[0],\n\t          end = e[1],\n\t          f, g;\n\t\n\t      if (f = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[f.end];\n\t        f.push(i);\n\t        f.end = end;\n\t        if (g = fragmentByStart[end]) {\n\t          delete fragmentByStart[g.start];\n\t          var fg = g === f ? f : f.concat(g);\n\t          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else if (f = fragmentByStart[end]) {\n\t        delete fragmentByStart[f.start];\n\t        f.unshift(i);\n\t        f.start = start;\n\t        if (g = fragmentByEnd[start]) {\n\t          delete fragmentByEnd[g.end];\n\t          var gf = g === f ? f : g.concat(f);\n\t          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else {\n\t        f = [i];\n\t        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t      }\n\t    });\n\t\n\t    function ends(i) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t      else p1 = arc[arc.length - 1];\n\t      return i < 0 ? [p1, p0] : [p0, p1];\n\t    }\n\t\n\t    function flush(fragmentByEnd, fragmentByStart) {\n\t      for (var k in fragmentByEnd) {\n\t        var f = fragmentByEnd[k];\n\t        delete fragmentByStart[f.start];\n\t        delete f.start;\n\t        delete f.end;\n\t        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t        fragments.push(f);\n\t      }\n\t    }\n\t\n\t    flush(fragmentByEnd, fragmentByStart);\n\t    flush(fragmentByStart, fragmentByEnd);\n\t    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t    return fragments;\n\t  }\n\t\n\t  function mesh(topology) {\n\t    return object(topology, meshArcs.apply(this, arguments));\n\t  }\n\t\n\t  function meshArcs(topology, o, filter) {\n\t    var arcs = [];\n\t\n\t    function arc(i) {\n\t      var j = i < 0 ? ~i : i;\n\t      (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t    }\n\t\n\t    function line(arcs) {\n\t      arcs.forEach(arc);\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      arcs.forEach(line);\n\t    }\n\t\n\t    function geometry(o) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t      else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t    }\n\t\n\t    if (arguments.length > 1) {\n\t      var geomsByArc = [],\n\t          geom;\n\t\n\t      var geometryType = {\n\t        LineString: line,\n\t        MultiLineString: polygon,\n\t        Polygon: polygon,\n\t        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t      };\n\t\n\t      geometry(o);\n\t\n\t      geomsByArc.forEach(arguments.length < 3\n\t          ? function(geoms) { arcs.push(geoms[0].i); }\n\t          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t    } else {\n\t      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t    }\n\t\n\t    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t  }\n\t\n\t  function cartesianTriangleArea(triangle) {\n\t    var a = triangle[0], b = triangle[1], c = triangle[2];\n\t    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t  }\n\t\n\t  function ring(ring) {\n\t    var i = -1,\n\t        n = ring.length,\n\t        a,\n\t        b = ring[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = ring[i];\n\t      area += a[0] * b[1] - a[1] * b[0];\n\t    }\n\t\n\t    return area / 2;\n\t  }\n\t\n\t  function merge(topology) {\n\t    return object(topology, mergeArcs.apply(this, arguments));\n\t  }\n\t\n\t  function mergeArcs(topology, objects) {\n\t    var polygonsByArc = {},\n\t        polygons = [],\n\t        components = [];\n\t\n\t    objects.forEach(function(o) {\n\t      if (o.type === \"Polygon\") register(o.arcs);\n\t      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t    });\n\t\n\t    function register(polygon) {\n\t      polygon.forEach(function(ring$$) {\n\t        ring$$.forEach(function(arc) {\n\t          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t        });\n\t      });\n\t      polygons.push(polygon);\n\t    }\n\t\n\t    function area(ring$$) {\n\t      return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n\t    }\n\t\n\t    polygons.forEach(function(polygon) {\n\t      if (!polygon._) {\n\t        var component = [],\n\t            neighbors = [polygon];\n\t        polygon._ = 1;\n\t        components.push(component);\n\t        while (polygon = neighbors.pop()) {\n\t          component.push(polygon);\n\t          polygon.forEach(function(ring$$) {\n\t            ring$$.forEach(function(arc) {\n\t              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t                if (!polygon._) {\n\t                  polygon._ = 1;\n\t                  neighbors.push(polygon);\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t      }\n\t    });\n\t\n\t    polygons.forEach(function(polygon) {\n\t      delete polygon._;\n\t    });\n\t\n\t    return {\n\t      type: \"MultiPolygon\",\n\t      arcs: components.map(function(polygons) {\n\t        var arcs = [], n;\n\t\n\t        // Extract the exterior (unique) arcs.\n\t        polygons.forEach(function(polygon) {\n\t          polygon.forEach(function(ring$$) {\n\t            ring$$.forEach(function(arc) {\n\t              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t                arcs.push(arc);\n\t              }\n\t            });\n\t          });\n\t        });\n\t\n\t        // Stitch the arcs into one or more rings.\n\t        arcs = stitchArcs(topology, arcs);\n\t\n\t        // If more than one ring is returned,\n\t        // at most one of these rings can be the exterior;\n\t        // choose the one with the greatest absolute area.\n\t        if ((n = arcs.length) > 1) {\n\t          for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t            if ((ki = area(arcs[i])) > k) {\n\t              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t            }\n\t          }\n\t        }\n\t\n\t        return arcs;\n\t      })\n\t    };\n\t  }\n\t\n\t  function neighbors(objects) {\n\t    var indexesByArc = {}, // arc index -> array of object indexes\n\t        neighbors = objects.map(function() { return []; });\n\t\n\t    function line(arcs, i) {\n\t      arcs.forEach(function(a) {\n\t        if (a < 0) a = ~a;\n\t        var o = indexesByArc[a];\n\t        if (o) o.push(i);\n\t        else indexesByArc[a] = [i];\n\t      });\n\t    }\n\t\n\t    function polygon(arcs, i) {\n\t      arcs.forEach(function(arc) { line(arc, i); });\n\t    }\n\t\n\t    function geometry(o, i) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t    }\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t    };\n\t\n\t    objects.forEach(geometry);\n\t\n\t    for (var i in indexesByArc) {\n\t      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t        for (var k = j + 1; k < m; ++k) {\n\t          var ij = indexes[j], ik = indexes[k], n;\n\t          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t        }\n\t      }\n\t    }\n\t\n\t    return neighbors;\n\t  }\n\t\n\t  function compareArea(a, b) {\n\t    return a[1][2] - b[1][2];\n\t  }\n\t\n\t  function minAreaHeap() {\n\t    var heap = {},\n\t        array = [],\n\t        size = 0;\n\t\n\t    heap.push = function(object) {\n\t      up(array[object._ = size] = object, size++);\n\t      return size;\n\t    };\n\t\n\t    heap.pop = function() {\n\t      if (size <= 0) return;\n\t      var removed = array[0], object;\n\t      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t      return removed;\n\t    };\n\t\n\t    heap.remove = function(removed) {\n\t      var i = removed._, object;\n\t      if (array[i] !== removed) return; // invalid request\n\t      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t      return i;\n\t    };\n\t\n\t    function up(object, i) {\n\t      while (i > 0) {\n\t        var j = ((i + 1) >> 1) - 1,\n\t            parent = array[j];\n\t        if (compareArea(object, parent) >= 0) break;\n\t        array[parent._ = i] = parent;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    function down(object, i) {\n\t      while (true) {\n\t        var r = (i + 1) << 1,\n\t            l = r - 1,\n\t            j = i,\n\t            child = array[j];\n\t        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t        if (j === i) break;\n\t        array[child._ = i] = child;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    return heap;\n\t  }\n\t\n\t  function presimplify(topology, triangleArea) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        relative = transformRelative(topology.transform),\n\t        heap = minAreaHeap();\n\t\n\t    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      var triangles = [],\n\t          maxArea = 0,\n\t          triangle,\n\t          i,\n\t          n,\n\t          p;\n\t\n\t      // To store each point’s effective area, we create a new array rather than\n\t      // extending the passed-in point to workaround a Chrome/V8 bug (getting\n\t      // stuck in smi mode). For midpoints, the initial effective area of\n\t      // Infinity will be computed in the next step.\n\t      for (i = 0, n = arc.length; i < n; ++i) {\n\t        p = arc[i];\n\t        absolute(arc[i] = [p[0], p[1], Infinity], i);\n\t      }\n\t\n\t      for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t        triangle = arc.slice(i - 1, i + 2);\n\t        triangle[1][2] = triangleArea(triangle);\n\t        triangles.push(triangle);\n\t        heap.push(triangle);\n\t      }\n\t\n\t      for (i = 0, n = triangles.length; i < n; ++i) {\n\t        triangle = triangles[i];\n\t        triangle.previous = triangles[i - 1];\n\t        triangle.next = triangles[i + 1];\n\t      }\n\t\n\t      while (triangle = heap.pop()) {\n\t        var previous = triangle.previous,\n\t            next = triangle.next;\n\t\n\t        // If the area of the current point is less than that of the previous point\n\t        // to be eliminated, use the latter's area instead. This ensures that the\n\t        // current point cannot be eliminated without eliminating previously-\n\t        // eliminated points.\n\t        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t        else maxArea = triangle[1][2];\n\t\n\t        if (previous) {\n\t          previous.next = next;\n\t          previous[2] = triangle[2];\n\t          update(previous);\n\t        }\n\t\n\t        if (next) {\n\t          next.previous = previous;\n\t          next[0] = triangle[0];\n\t          update(next);\n\t        }\n\t      }\n\t\n\t      arc.forEach(relative);\n\t    });\n\t\n\t    function update(triangle) {\n\t      heap.remove(triangle);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    return topology;\n\t  }\n\t\n\t  var version = \"1.6.26\";\n\t\n\t  exports.version = version;\n\t  exports.mesh = mesh;\n\t  exports.meshArcs = meshArcs;\n\t  exports.merge = merge;\n\t  exports.mergeArcs = mergeArcs;\n\t  exports.feature = feature;\n\t  exports.neighbors = neighbors;\n\t  exports.presimplify = presimplify;\n\t\n\t}));\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** bulbs-datamap.js\n **/","/* global Datamap */\nrequire('!imports?this=>window!d3/d3.js');\nrequire('expose?topojson!topojson/topojson.js');\nrequire('expose?Datamap!datamaps/dist/datamaps.usa.js');\n\nimport {\n  registerElement,\n  BulbsHTMLElement,\n} from 'bulbs-elements/register';\nimport './bulbs-datamap.scss';\n\nclass BulbsDatamap extends BulbsHTMLElement {\n  createdCallback () {\n    this.innerHTML = '<div class=\"bulbs-datamap\"></div>';\n    let mapContainer = this.firstChild;\n    let that = this;\n\n    this.map = new Datamap({\n      element: mapContainer,\n      scope: 'usa',\n      responsive: true,\n      fills: {\n        defaultFill: '',\n      },\n      geographyConfig: {\n        highlightOnHover: false,\n      },\n    });\n\n    window.addEventListener('resize', this.resizeMap.bind(this));\n\n    window.d3.select(mapContainer).selectAll('svg .datamaps-subunit').on('click', function (stateObj) {\n      that.stateClicked(this, stateObj, mapContainer);\n    });\n  }\n\n  stateClicked (path, stateObj, mapContainer) {\n    window.d3.select(mapContainer)\n      .selectAll('svg .datamaps-subunit')\n      .classed('selected', false);\n    window.d3.select(path).classed('selected', true);\n\n    let event = new CustomEvent('bulbs-datamap:selected', { 'detail': stateObj });\n    mapContainer.dispatchEvent(event);\n  }\n\n  resizeMap () {\n    this.map.resize();\n  }\n}\n\nregisterElement('bulbs-datamap', BulbsDatamap);\n\nexport default BulbsDatamap;\n\n\n\n/** WEBPACK FOOTER **\n ** ./elements/bulbs-datamap/bulbs-datamap.js\n **/","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\nd3 = function() {\n  var d3 = {\n    version: \"3.3.13\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  };\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n  d3.mean = function(array, f) {\n    var n = array.length, a, m = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n    } else {\n      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n    }\n    return j ? m : undefined;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n  };\n  d3.bisector = function(f) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  };\n  var d3_bisector = d3.bisector(function(d) {\n    return d;\n  });\n  d3.bisectLeft = d3_bisector.left;\n  d3.bisect = d3.bisectRight = d3_bisector.right;\n  d3.shuffle = function(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n  d3.map = function(object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function(key, value) {\n      map.set(key, value);\n    }); else for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  function d3_Map() {}\n  d3_class(d3_Map, {\n    has: function(key) {\n      return d3_map_prefix + key in this;\n    },\n    get: function(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: function(key) {\n      key = d3_map_prefix + key;\n      return key in this && delete this[key];\n    },\n    keys: function() {\n      var keys = [];\n      this.forEach(function(key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      this.forEach(function(key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    forEach: function(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, key.substring(1), this[key]);\n        }\n      }\n    }\n  });\n  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {}\n  d3_class(d3_Set, {\n    has: function(value) {\n      return d3_map_prefix + value in this;\n    },\n    add: function(value) {\n      this[d3_map_prefix + value] = true;\n      return value;\n    },\n    remove: function(value) {\n      value = d3_map_prefix + value;\n      return value in this && delete this[value];\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(value) {\n        values.push(value);\n      });\n      return values;\n    },\n    forEach: function(f) {\n      for (var value in this) {\n        if (value.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, value.substring(1));\n        }\n      }\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = function(s, n) {\n      return Sizzle.uniqueSort(Sizzle(s, n));\n    };\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return name.trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n        for (i = -1; ++i < n; ) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues.push(keyValue);\n        }\n        for (i = -1; ++i < m; ) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n          if (node = nodeByKeyValue.get(keyValue)) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          } else if (!dataByKeyValue.has(keyValue)) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n          dataByKeyValue.set(keyValue, nodeData);\n          nodeByKeyValue.remove(keyValue);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3.ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    this.each(function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3_selectionPrototype.transition = function() {\n    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_selectionPrototype.interrupt = function() {\n    return this.each(d3_selection_interrupt);\n  };\n  function d3_selection_interrupt() {\n    var lock = this.__transition__;\n    if (lock) ++lock.active;\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.substring(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        function off() {\n          w.on(click, null);\n        }\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function touchid() {\n      return d3.event.changedTouches[0].identifier;\n    }\n    function touchposition(parent, id) {\n      return d3.touches(parent).filter(function(p) {\n        return p.identifier === id;\n      })[0];\n    }\n    function dragstart(id, position, move, end) {\n      return function() {\n        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n        if (origin) {\n          offset = origin.apply(target, arguments);\n          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n        } else {\n          offset = [ 0, 0 ];\n        }\n        event_({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n          dragged |= dx | dy;\n          origin_ = p;\n          event_({\n            type: \"drag\",\n            x: p[0] + offset[0],\n            y: p[1] + offset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n          dragRestore(dragged && d3.event.target === eventTarget);\n          event_({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(event_);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(event_);\n            };\n          }).each(\"end.zoom\", function() {\n            zoomended(event_);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(event_);\n          zoomed(event_);\n          zoomended(event_);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(event) {\n      event({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(event) {\n      rescale();\n      event({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(event) {\n      event({\n        type: \"zoomend\"\n      });\n    }\n    function mousedowned() {\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      zoomstarted(event_);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(target), l);\n        zoomed(event_);\n      }\n      function ended() {\n        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === eventTarget);\n        zoomended(event_);\n      }\n    }\n    function touchstarted() {\n      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      started();\n      zoomstarted(event_);\n      function relocate() {\n        var touches = d3.touches(target);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0], l = locations0[p.identifier];\n            scaleTo(view.k * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            zoomed(event_);\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(target), p0, l0, p1, l1;\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(event_);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        w.on(touchmove, null).on(touchend, null);\n        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(event_);\n      }\n    }\n    function mousewheeled() {\n      var event_ = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      zoomstarted(event_);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(event_);\n      }, 50);\n      d3_eventPreventDefault();\n      var point = center || d3.mouse(this);\n      if (!translate0) translate0 = location(point);\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(point, translate0);\n      zoomed(event_);\n    }\n    function mousewheelreset() {\n      translate0 = null;\n    }\n    function dblclicked() {\n      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n      zoomstarted(event_);\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      zoomed(event_);\n      zoomended(event_);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  function d3_Color() {}\n  d3_Color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = function(h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = function(h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n  d3_hclPrototype.brighter = function(k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = function(l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n  d3_labPrototype.brighter = function(k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = function(r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n  function d3_rgbNumber(value) {\n    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, name;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n    if (format != null && format.charAt(0) === \"#\") {\n      if (format.length === 4) {\n        r = format.charAt(1);\n        r += r;\n        g = format.charAt(2);\n        g += g;\n        b = format.charAt(3);\n        b += b;\n      } else if (format.length === 7) {\n        r = format.substring(1, 3);\n        g = format.substring(3, 5);\n        b = format.substring(5, 7);\n      }\n      r = parseInt(r, 16);\n      g = parseInt(g, 16);\n      b = parseInt(b, 16);\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.substring(j, I - k);\n        }\n        return text.substring(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  d3.format = function(specifier) {\n    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n    if (precision) precision = +precision.substring(1);\n    if (zfill || fill === \"0\" && align === \"=\") {\n      zfill = fill = \"0\";\n      align = \"=\";\n      if (comma) width -= Math.floor((width - 1) / 4);\n    }\n    switch (type) {\n     case \"n\":\n      comma = true;\n      type = \"g\";\n      break;\n\n     case \"%\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"f\";\n      break;\n\n     case \"p\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"r\";\n      break;\n\n     case \"b\":\n     case \"o\":\n     case \"x\":\n     case \"X\":\n      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\n     case \"c\":\n     case \"d\":\n      integer = true;\n      precision = 0;\n      break;\n\n     case \"s\":\n      scale = -1;\n      type = \"r\";\n      break;\n    }\n    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n    if (type == \"r\" && !precision) type = \"g\";\n    if (precision != null) {\n      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n    }\n    type = d3_format_types.get(type) || d3_format_typeDefault;\n    var zcomma = zfill && comma;\n    return function(value) {\n      if (integer && value % 1) return \"\";\n      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n      if (scale < 0) {\n        var prefix = d3.formatPrefix(value, precision);\n        value = prefix.scale(value);\n        suffix = prefix.symbol;\n      } else {\n        value *= scale;\n      }\n      value = type(value, precision);\n      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n      if (!zfill && comma) before = d3_format_group(before);\n      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n      if (zcomma) before = d3_format_group(padding + before);\n      negative += symbol;\n      value = before + after;\n      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n    };\n  };\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_format_group = d3_identity;\n  if (d3_format_grouping) {\n    var d3_format_groupingLength = d3_format_grouping.length;\n    d3_format_group = function(value) {\n      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n      while (i > 0 && g > 0) {\n        t.push(value.substring(i -= g, i + g));\n        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n      }\n      return t.reverse().join(d3_format_thousandsSeparator);\n    };\n  }\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n          listener.polygonStart();\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          listener.polygonEnd();\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          listener.lineStart();\n          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n          listener.lineEnd();\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function isLeft(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return projection.rotate([ 0, 0 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n      vertices = []; i < n; ++i) {\n        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n      }\n      for (i = 1; i < n; ++i) {\n        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n      }\n      for (i = 0; i < n; ++i) {\n        if (i === h) continue;\n        y1 = vertices[i][1] - vertices[h][1];\n        x1 = vertices[i][0] - vertices[h][0];\n        points.push({\n          angle: Math.atan2(y1, x1),\n          index: i\n        });\n      }\n      points.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      a = points[0].angle;\n      v = points[0].index;\n      u = 0;\n      for (i = 1; i < plen; ++i) {\n        j = points[i].index;\n        if (a == points[i].angle) {\n          x1 = vertices[v][0] - vertices[h][0];\n          y1 = vertices[v][1] - vertices[h][1];\n          x2 = vertices[j][0] - vertices[h][0];\n          y2 = vertices[j][1] - vertices[h][1];\n          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n            points[i].index = -1;\n            continue;\n          } else {\n            points[u].index = -1;\n          }\n        }\n        a = points[i].angle;\n        u = i;\n        v = j;\n      }\n      stack.push(h);\n      for (i = 0, j = 0; i < 2; ++j) {\n        if (points[j].index > -1) {\n          stack.push(points[j].index);\n          i++;\n        }\n      }\n      sp = stack.length;\n      for (;j < plen; ++j) {\n        if (points[j].index < 0) continue;\n        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n          --sp;\n        }\n        stack[sp++] = points[j].index;\n      }\n      var poly = [];\n      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n      return poly;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullCCW(i1, i2, i3, v) {\n    var t, a, b, c, d, e, f;\n    t = v[i1];\n    a = t[0];\n    b = t[1];\n    t = v[i2];\n    c = t[0];\n    d = t[1];\n    t = v[i3];\n    e = t[0];\n    f = t[1];\n    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx; else x2 = sx;\n        if (bottom) y1 = sy; else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    b -= a = +a;\n    return function(t) {\n      return a + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n    a = a + \"\", b = b + \"\";\n    d3_interpolate_number.lastIndex = 0;\n    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n      if (m.index) s.push(b.substring(s0, s1 = m.index));\n      q.push({\n        i: s.length,\n        x: m[0]\n      });\n      s.push(null);\n      s0 = d3_interpolate_number.lastIndex;\n    }\n    if (s0 < b.length) s.push(b.substring(s0));\n    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n      o = q[i];\n      if (o.x == m[0]) {\n        if (o.i) {\n          if (s[o.i + 1] == null) {\n            s[o.i - 1] += o.x;\n            s.splice(o.i, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          } else {\n            s[o.i - 1] += o.x + s[o.i + 1];\n            s.splice(o.i, 2);\n            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n          }\n        } else {\n          if (s[o.i + 1] == null) {\n            s[o.i] = o.x;\n          } else {\n            s[o.i] = o.x + s[o.i + 1];\n            s.splice(o.i + 1, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          }\n        }\n        q.splice(i, 1);\n        n--;\n        i--;\n      } else {\n        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n      }\n    }\n    while (i < n) {\n      o = q.pop();\n      if (s[o.i + 1] == null) {\n        s[o.i] = o.x;\n      } else {\n        s[o.i] = o.x + s[o.i + 1];\n        s.splice(o.i + 1, 1);\n      }\n      n--;\n    }\n    if (s.length === 1) {\n      return s[0] == null ? (o = q[0].x, function(t) {\n        return o(t) + \"\";\n      }) : function() {\n        return b;\n      };\n    }\n    return function(t) {\n      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return (x - a) * b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n          if ((x2 - x1) * dn < theta) {\n            var k = quad.charge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n            return true;\n          }\n          if (quad.point && isFinite(dn)) {\n            var k = quad.pointCharge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return theta;\n      theta = +x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function recurse(node, depth, nodes) {\n      var childs = children.call(hierarchy, node, depth);\n      node.depth = depth;\n      nodes.push(node);\n      if (childs && (n = childs.length)) {\n        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n        while (++i < n) {\n          d = c[i] = recurse(childs[i], j, nodes);\n          d.parent = node;\n          v += d.value;\n        }\n        if (sort) c.sort(sort);\n        if (value) node.value = v;\n      } else {\n        delete node.children;\n        if (value) {\n          node.value = +value.call(hierarchy, node, depth) || 0;\n        }\n      }\n      return node;\n    }\n    function revalue(node, depth) {\n      var children = node.children, v = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n, j = depth + 1;\n        while (++i < n) v += revalue(children[i], j);\n      } else if (value) {\n        v = +value.call(hierarchy, node, depth) || 0;\n      }\n      if (value) node.value = v;\n      return v;\n    }\n    function hierarchy(d) {\n      var nodes = [];\n      recurse(d, 0, nodes);\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      revalue(root, 0);\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n    function pie(data) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length, m = series[0].length, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      function firstWalk(node, previousSibling) {\n        var children = node.children, layout = node._tree;\n        if (children && (n = children.length)) {\n          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n          while (++i < n) {\n            child = children[i];\n            firstWalk(child, previousChild);\n            ancestor = apportion(child, previousChild, ancestor);\n            previousChild = child;\n          }\n          d3_layout_treeShift(node);\n          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n            layout.mod = layout.prelim - midpoint;\n          } else {\n            layout.prelim = midpoint;\n          }\n        } else {\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n          }\n        }\n      }\n      function secondWalk(node, x) {\n        node.x = node._tree.prelim + x;\n        var children = node.children;\n        if (children && (n = children.length)) {\n          var i = -1, n;\n          x += node._tree.mod;\n          while (++i < n) {\n            secondWalk(children[i], x);\n          }\n        }\n      }\n      function apportion(node, previousSibling, ancestor) {\n        if (previousSibling) {\n          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n            vom = d3_layout_treeLeft(vom);\n            vop = d3_layout_treeRight(vop);\n            vop._tree.ancestor = node;\n            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n            if (shift > 0) {\n              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n              sip += shift;\n              sop += shift;\n            }\n            sim += vim._tree.mod;\n            sip += vip._tree.mod;\n            som += vom._tree.mod;\n            sop += vop._tree.mod;\n          }\n          if (vim && !d3_layout_treeRight(vop)) {\n            vop._tree.thread = vim;\n            vop._tree.mod += sim - sop;\n          }\n          if (vip && !d3_layout_treeLeft(vom)) {\n            vom._tree.thread = vip;\n            vom._tree.mod += sip - som;\n            ancestor = node;\n          }\n        }\n        return ancestor;\n      }\n      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n        node._tree = {\n          ancestor: node,\n          prelim: 0,\n          mod: 0,\n          change: 0,\n          shift: 0,\n          number: previousSibling ? previousSibling._tree.number + 1 : 0\n        };\n      });\n      firstWalk(root);\n      secondWalk(root, -root._tree.prelim);\n      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x *= size[0];\n        node.y = node.depth * size[1];\n        delete node._tree;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = node.depth / y1 * size[1];\n        delete node._tree;\n      });\n      return nodes;\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(node) {\n    var children = node.children;\n    return children && children.length ? children[0] : node._tree.thread;\n  }\n  function d3_layout_treeRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n  }\n  function d3_layout_treeSearch(node, compare) {\n    var children = node.children;\n    if (children && (n = children.length)) {\n      var child, n, i = -1;\n      while (++i < n) {\n        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n          node = child;\n        }\n      }\n    }\n    return node;\n  }\n  function d3_layout_treeRightmost(a, b) {\n    return a.x - b.x;\n  }\n  function d3_layout_treeLeftmost(a, b) {\n    return b.x - a.x;\n  }\n  function d3_layout_treeDeepest(a, b) {\n    return a.depth - b.depth;\n  }\n  function d3_layout_treeVisitAfter(node, callback) {\n    function visit(node, previousSibling) {\n      var children = node.children;\n      if (children && (n = children.length)) {\n        var child, previousChild = null, i = -1, n;\n        while (++i < n) {\n          child = children[i];\n          visit(child, previousChild);\n          previousChild = child;\n        }\n      }\n      callback(node, previousSibling);\n    }\n    visit(node, null);\n  }\n  function d3_layout_treeShift(node) {\n    var shift = 0, change = 0, children = node.children, i = children.length, child;\n    while (--i >= 0) {\n      child = children[i]._tree;\n      child.prelim += shift;\n      child.mod += shift;\n      shift += child.shift + (change += child.change);\n    }\n  }\n  function d3_layout_treeMove(ancestor, node, shift) {\n    ancestor = ancestor._tree;\n    node = node._tree;\n    var change = shift / (node.number - ancestor.number);\n    ancestor.change += change;\n    node.change -= change;\n    node.shift += shift;\n    node.prelim += shift;\n    node.mod += shift;\n  }\n  function d3_layout_treeAncestor(vim, node, ancestor) {\n    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_treeVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_treeVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(function(d) {\n        return !isNaN(d);\n      }).sort(d3.ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node.__transition__[id].tween.remove(name);\n    } : function(node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function(node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id1);\n  };\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, d, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n        switch (orient) {\n         case \"bottom\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", innerTickSize);\n            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n            break;\n          }\n\n         case \"top\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", -innerTickSize);\n            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n            break;\n          }\n\n         case \"left\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", -innerTickSize);\n            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n            break;\n          }\n\n         case \"right\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", innerTickSize);\n            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n            break;\n          }\n        }\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1);\n        }\n        tickEnter.call(tickTransform, scale0);\n        tickUpdate.call(tickTransform, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  d3_time_daySymbols.forEach(function(day, i) {\n    day = day.toLowerCase();\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  d3_time.format = d3_time_format;\n  function d3_time_format(template) {\n    var n = template.length;\n    function format(date) {\n      var string = [], i = -1, j = 0, c, p, f;\n      while (++i < n) {\n        if (template.charCodeAt(i) === 37) {\n          string.push(template.substring(j, i));\n          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n      string.push(template.substring(j, i));\n      return string.join(\"\");\n    }\n    format.parse = function(string) {\n      var d = {\n        y: 1900,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0,\n        Z: null\n      }, i = d3_time_parse(d, template, string, 0);\n      if (i != string.length) return null;\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n        date.setFullYear(d.y, 0, 1);\n        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n      } else date.setFullYear(d.y, d.m, d.d);\n      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n      return localZ ? date._ : date;\n    };\n    format.toString = function() {\n      return template;\n    };\n    return format;\n  }\n  function d3_time_parse(date, template, string, j) {\n    var c, p, t, i = 0, n = template.length, m = string.length;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = template.charCodeAt(i++);\n      if (c === 37) {\n        t = template.charAt(i++);\n        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n        if (!p || (j = p(date, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  };\n  var d3_time_formats = {\n    a: function(d) {\n      return d3_time_dayAbbreviations[d.getDay()];\n    },\n    A: function(d) {\n      return d3_time_days[d.getDay()];\n    },\n    b: function(d) {\n      return d3_time_monthAbbreviations[d.getMonth()];\n    },\n    B: function(d) {\n      return d3_time_months[d.getMonth()];\n    },\n    c: d3_time_format(d3_time_formatDateTime),\n    d: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    e: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    H: function(d, p) {\n      return d3_time_formatPad(d.getHours(), p, 2);\n    },\n    I: function(d, p) {\n      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n    },\n    j: function(d, p) {\n      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n    },\n    L: function(d, p) {\n      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n    },\n    m: function(d, p) {\n      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n    },\n    M: function(d, p) {\n      return d3_time_formatPad(d.getMinutes(), p, 2);\n    },\n    p: function(d) {\n      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n    },\n    S: function(d, p) {\n      return d3_time_formatPad(d.getSeconds(), p, 2);\n    },\n    U: function(d, p) {\n      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n    },\n    w: function(d) {\n      return d.getDay();\n    },\n    W: function(d, p) {\n      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n    },\n    x: d3_time_format(d3_time_formatDate),\n    X: d3_time_format(d3_time_formatTime),\n    y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n    },\n    Y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n    },\n    Z: d3_time_zone,\n    \"%\": function() {\n      return \"%\";\n    }\n  };\n  var d3_time_parsers = {\n    a: d3_time_parseWeekdayAbbrev,\n    A: d3_time_parseWeekday,\n    b: d3_time_parseMonthAbbrev,\n    B: d3_time_parseMonth,\n    c: d3_time_parseLocaleFull,\n    d: d3_time_parseDay,\n    e: d3_time_parseDay,\n    H: d3_time_parseHour24,\n    I: d3_time_parseHour24,\n    j: d3_time_parseDayOfYear,\n    L: d3_time_parseMilliseconds,\n    m: d3_time_parseMonthNumber,\n    M: d3_time_parseMinutes,\n    p: d3_time_parseAmPm,\n    S: d3_time_parseSeconds,\n    U: d3_time_parseWeekNumberSunday,\n    w: d3_time_parseWeekdayNumber,\n    W: d3_time_parseWeekNumberMonday,\n    x: d3_time_parseLocaleDate,\n    X: d3_time_parseLocaleTime,\n    y: d3_time_parseYear,\n    Y: d3_time_parseFullYear,\n    Z: d3_time_parseZone,\n    \"%\": d3_time_parseLiteralPercent\n  };\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\n    d3_time_dayAbbrevRe.lastIndex = 0;\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekday(date, string, i) {\n    d3_time_dayRe.lastIndex = 0;\n    var n = d3_time_dayRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMonthAbbrev(date, string, i) {\n    d3_time_monthAbbrevRe.lastIndex = 0;\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseMonth(date, string, i) {\n    d3_time_monthRe.lastIndex = 0;\n    var n = d3_time_monthRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseLocaleFull(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n  }\n  function d3_time_parseLocaleDate(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n  }\n  function d3_time_parseLocaleTime(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  var d3_time_numberRe = /^\\s*\\d+/;\n  function d3_time_parseAmPm(date, string, i) {\n    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n    return n == null ? -1 : (date.p = n, i);\n  }\n  var d3_time_amPmLookup = d3.map({\n    am: 0,\n    pm: 1\n  });\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  d3_time_format.utc = d3_time_formatUtc;\n  function d3_time_formatUtc(template) {\n    var local = d3_time_format(template);\n    function format(date) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date();\n        utc._ = date;\n        return local(utc);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    format.parse = function(string) {\n      try {\n        d3_date = d3_date_utc;\n        var date = local.parse(string);\n        return date && date._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n    format.toString = local.toString;\n    return format;\n  }\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  function d3_time_scaleFormat(formats) {\n    return function(date) {\n      var i = formats.length - 1, f = formats[i];\n      while (!f[1](date)) f = formats[--i];\n      return f[0](date);\n    };\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n    return d.getMonth();\n  } ], [ d3_time_format(\"%b %d\"), function(d) {\n    return d.getDate() != 1;\n  } ], [ d3_time_format(\"%a %d\"), function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ d3_time_format(\"%I %p\"), function(d) {\n    return d.getHours();\n  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n    return d.getMinutes();\n  } ], [ d3_time_format(\":%S\"), function(d) {\n    return d.getSeconds();\n  } ], [ d3_time_format(\".%L\"), function(d) {\n    return d.getMilliseconds();\n  } ] ];\n  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n    return d.getUTCMonth();\n  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n    return d.getUTCHours();\n  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n    return d.getUTCMinutes();\n  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n    return d.getUTCSeconds();\n  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n    return d.getUTCMilliseconds();\n  } ] ];\n  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  return d3;\n}();\n}.call(window));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/imports-loader?this=>window!./~/d3/d3.js\n ** module id = 214\n ** module chunks = 5\n **/","module.exports = global[\"topojson\"] = require(\"-!/Users/collinmiller/Code/monorepo/bulbs-elements/node_modules/topojson/topojson.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?topojson!./~/topojson/topojson.js\n ** module id = 215\n ** module chunks = 5\n **/","!function() {\n  var topojson = {\n    version: \"1.6.9\",\n    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n    meshArcs: meshArcs,\n    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n    mergeArcs: mergeArcs,\n    feature: featureOrCollection,\n    neighbors: neighbors,\n    presimplify: presimplify\n  };\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1;\n\n    // Stitch empty arcs first, since they may be subsumed by other arcs.\n    arcs.forEach(function(i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i], t;\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n\n    arcs.forEach(function(i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f, g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n      else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n    return fragments;\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n\n      function arc(i) {\n        var j = i < 0 ? ~i : i;\n        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n      }\n\n      function line(arcs) {\n        arcs.forEach(arc);\n      }\n\n      function polygon(arcs) {\n        arcs.forEach(line);\n      }\n\n      function geometry(o) {\n        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n      }\n\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n      };\n\n      geometry(o);\n\n      geomsByArc.forEach(arguments.length < 3\n          ? function(geoms) { arcs.push(geoms[0].i); }\n          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n    }\n\n    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n\n    objects.forEach(function(o) {\n      if (o.type === \"Polygon\") register(o.arcs);\n      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function(ring) {\n        ring.forEach(function(arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function exterior(ring) {\n      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n    }\n\n    polygons.forEach(function(polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n\n    polygons.forEach(function(polygon) {\n      delete polygon._;\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function(polygons) {\n        var arcs = [];\n\n        // Extract the exterior (unique) arcs.\n        polygons.forEach(function(polygon) {\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        });\n\n        // Stitch the arcs into one or more rings.\n        arcs = stitchArcs(topology, arcs);\n\n        // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // this exterior ring has the same winding order\n        // as any exterior ring in the original polygons.\n        if ((n = arcs.length) > 1) {\n          var sgn = exterior(polygons[0][0]);\n          for (var i = 0, t; i < n; ++i) {\n            if (sgn === exterior(arcs[i])) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n              break;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function featureOrCollection(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function(o) { return feature(topology, o); })\n    } : feature(topology, o);\n  }\n\n  function feature(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute = transformAbsolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute(p, k);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n      while (points.length < 4) points.push(points[0].slice());\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n          : null;\n    }\n\n    var geometryType = {\n      Point: function(o) { return point(o.coordinates); },\n      MultiPoint: function(o) { return o.coordinates.map(point); },\n      LineString: function(o) { return line(o.arcs); },\n      MultiLineString: function(o) { return o.arcs.map(line); },\n      Polygon: function(o) { return polygon(o.arcs); },\n      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n    };\n\n    return geometry(o);\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  function bisect(a, x) {\n    var lo = 0, hi = a.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {}, // arc index -> array of object indexes\n        neighbors = objects.map(function() { return []; });\n\n    function line(arcs, i) {\n      arcs.forEach(function(a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);\n        else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function(arc) { line(arc, i); });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n    };\n\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j], ik = indexes[k], n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute = transformAbsolute(topology.transform),\n        relative = transformRelative(topology.transform),\n        heap = minAreaHeap(),\n        maxArea = 0,\n        triangle;\n\n    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n    topology.arcs.forEach(function(arc) {\n      var triangles = [];\n\n      arc.forEach(absolute);\n\n      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      // Always keep the arc endpoints!\n      arc[0][2] = arc[n][2] = Infinity;\n\n      for (var i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n    });\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    topology.arcs.forEach(function(arc) {\n      arc.forEach(relative);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  };\n\n  function cartesianRingArea(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area * .5;\n  }\n\n  function cartesianTriangleArea(triangle) {\n    var a = triangle[0], b = triangle[1], c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function(object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function() {\n      if (size <= 0) return;\n      var removed = array[0], object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function(removed) {\n      var i = removed._, object;\n      if (array[i] !== removed) return; // invalid request\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = ((i + 1) >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = (i + 1) << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function transformAbsolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function transformRelative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = (point[0] - dx) / kx | 0,\n          y1 = (point[1] - dy) / ky | 0;\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function noop() {}\n\n  if (typeof define === \"function\" && define.amd) define(topojson);\n  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n  else this.topojson = topojson;\n}();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/topojson/topojson.js\n ** module id = 216\n ** module chunks = 5\n **/","module.exports = global[\"Datamap\"] = require(\"-!/Users/collinmiller/Code/monorepo/bulbs-elements/node_modules/datamaps/dist/datamaps.usa.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/expose-loader?Datamap!./~/datamaps/dist/datamaps.usa.js\n ** module id = 217\n ** module chunks = 5\n **/","(function() {\n  var svg;\n\n  //save off default references\n  var d3 = window.d3, topojson = window.topojson;\n  \n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        borderWidth: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n    \n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n    \n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        //if fillKey - use that\n        //otherwise check 'fill'\n        //otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n        \n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n    \n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  //plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path); \n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n        layer.append(\"text\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .style(\"font-size\", (options.fontSize || 10) + 'px')\n          .style(\"font-family\", options.fontFamily || \"Verdana\")\n          .style(\"fill\", options.labelColor || \"#000\")\n          .text( d.id );\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[1];;\n        })\n        .attr('r', 0) //for animation purposes\n        .attr('data-info', function(d) {\n          return JSON.stringify(d);\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition().duration(400)\n          .attr('r', function ( datum ) {\n            return val(datum.radius, options.radius, datum);\n          });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n\n  }\n\n  //stolen from underscore.js\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    //set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    //add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    /* Add core plugins to this instance */\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    //append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n          newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    //save off in a closure\n    var self = this;\n    var options = self.options;\n\n    //set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    //if custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // if fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          //allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            //in the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              } \n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        //fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = '__WORLD__';\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  //convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  //add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data) {\n    var svg = this.svg;\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        //if it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          //if ( !data ) return '';\n          return options.popupTemplate(d, data);\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        //add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // expose library\n  if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", function(require) { d3 = require('d3'); topojson = require('topojson'); return Datamap; } );\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/datamaps/dist/datamaps.usa.js\n ** module id = 218\n ** module chunks = 5\n **/","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/datamaps/~/d3/d3.js\n ** module id = 219\n ** module chunks = 5\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, function (exports) { 'use strict';\n\n  function noop() {}\n\n  function transformAbsolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function transformRelative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = Math.round((point[0] - dx) / kx),\n          y1 = Math.round((point[1] - dy) / ky);\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n;\n    while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  function bisect(a, x) {\n    var lo = 0, hi = a.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function feature(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function(o) { return feature$1(topology, o); })\n    } : feature$1(topology, o);\n  }\n\n  function feature$1(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute = transformAbsolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute(p, k);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n      while (points.length < 4) points.push(points[0].slice());\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n          : null;\n    }\n\n    var geometryType = {\n      Point: function(o) { return point(o.coordinates); },\n      MultiPoint: function(o) { return o.coordinates.map(point); },\n      LineString: function(o) { return line(o.arcs); },\n      MultiLineString: function(o) { return o.arcs.map(line); },\n      Polygon: function(o) { return polygon(o.arcs); },\n      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n    };\n\n    return geometry(o);\n  }\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1;\n\n    // Stitch empty arcs first, since they may be subsumed by other arcs.\n    arcs.forEach(function(i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i], t;\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n\n    arcs.forEach(function(i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f, g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n      else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n    return fragments;\n  }\n\n  function mesh(topology) {\n    return object(topology, meshArcs.apply(this, arguments));\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    function arc(i) {\n      var j = i < 0 ? ~i : i;\n      (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n    }\n\n    function line(arcs) {\n      arcs.forEach(arc);\n    }\n\n    function polygon(arcs) {\n      arcs.forEach(line);\n    }\n\n    function geometry(o) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n      else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n    }\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n      };\n\n      geometry(o);\n\n      geomsByArc.forEach(arguments.length < 3\n          ? function(geoms) { arcs.push(geoms[0].i); }\n          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n    }\n\n    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n  }\n\n  function cartesianTriangleArea(triangle) {\n    var a = triangle[0], b = triangle[1], c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function ring(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area / 2;\n  }\n\n  function merge(topology) {\n    return object(topology, mergeArcs.apply(this, arguments));\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n\n    objects.forEach(function(o) {\n      if (o.type === \"Polygon\") register(o.arcs);\n      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function(ring$$) {\n        ring$$.forEach(function(arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function area(ring$$) {\n      return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n    }\n\n    polygons.forEach(function(polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function(ring$$) {\n            ring$$.forEach(function(arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n\n    polygons.forEach(function(polygon) {\n      delete polygon._;\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function(polygons) {\n        var arcs = [], n;\n\n        // Extract the exterior (unique) arcs.\n        polygons.forEach(function(polygon) {\n          polygon.forEach(function(ring$$) {\n            ring$$.forEach(function(arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        });\n\n        // Stitch the arcs into one or more rings.\n        arcs = stitchArcs(topology, arcs);\n\n        // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // choose the one with the greatest absolute area.\n        if ((n = arcs.length) > 1) {\n          for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n            if ((ki = area(arcs[i])) > k) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {}, // arc index -> array of object indexes\n        neighbors = objects.map(function() { return []; });\n\n    function line(arcs, i) {\n      arcs.forEach(function(a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);\n        else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function(arc) { line(arc, i); });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n    };\n\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j], ik = indexes[k], n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function(object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function() {\n      if (size <= 0) return;\n      var removed = array[0], object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function(removed) {\n      var i = removed._, object;\n      if (array[i] !== removed) return; // invalid request\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = ((i + 1) >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = (i + 1) << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute = transformAbsolute(topology.transform),\n        relative = transformRelative(topology.transform),\n        heap = minAreaHeap();\n\n    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n    topology.arcs.forEach(function(arc) {\n      var triangles = [],\n          maxArea = 0,\n          triangle,\n          i,\n          n,\n          p;\n\n      // To store each point’s effective area, we create a new array rather than\n      // extending the passed-in point to workaround a Chrome/V8 bug (getting\n      // stuck in smi mode). For midpoints, the initial effective area of\n      // Infinity will be computed in the next step.\n      for (i = 0, n = arc.length; i < n; ++i) {\n        p = arc[i];\n        absolute(arc[i] = [p[0], p[1], Infinity], i);\n      }\n\n      for (i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      for (i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n\n      while (triangle = heap.pop()) {\n        var previous = triangle.previous,\n            next = triangle.next;\n\n        // If the area of the current point is less than that of the previous point\n        // to be eliminated, use the latter's area instead. This ensures that the\n        // current point cannot be eliminated without eliminating previously-\n        // eliminated points.\n        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n        else maxArea = triangle[1][2];\n\n        if (previous) {\n          previous.next = next;\n          previous[2] = triangle[2];\n          update(previous);\n        }\n\n        if (next) {\n          next.previous = previous;\n          next[0] = triangle[0];\n          update(next);\n        }\n      }\n\n      arc.forEach(relative);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  }\n\n  var version = \"1.6.26\";\n\n  exports.version = version;\n  exports.mesh = mesh;\n  exports.meshArcs = meshArcs;\n  exports.merge = merge;\n  exports.mergeArcs = mergeArcs;\n  exports.feature = feature;\n  exports.neighbors = neighbors;\n  exports.presimplify = presimplify;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/datamaps/~/topojson/build/topojson.js\n ** module id = 220\n ** module chunks = 5\n **/"],"sourceRoot":""}