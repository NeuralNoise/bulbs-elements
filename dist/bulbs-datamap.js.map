{"version":3,"sources":["webpack:///bulbs-datamap.js","webpack:///./elements/bulbs-datamap/bulbs-datamap.js","webpack:///./~/d3/index-browserify.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/index.js","webpack:///./~/topojson/topojson.js","webpack:///./~/topojson/lib/topojson/topology.js","webpack:///./~/topojson/lib/topojson/type.js","webpack:///./~/topojson/lib/topojson/stitch.js","webpack:///./~/topojson/lib/topojson/coordinate-systems.js","webpack:///./~/topojson/lib/topojson/cartesian.js","webpack:///./~/topojson/lib/topojson/spherical.js","webpack:///./~/topojson/lib/topojson/topology/index.js","webpack:///./~/topojson/lib/topojson/topology/hashmap.js","webpack:///./~/topojson/lib/topojson/topology/extract.js","webpack:///./~/topojson/lib/topojson/topology/cut.js","webpack:///./~/topojson/lib/topojson/topology/join.js","webpack:///./~/topojson/lib/topojson/topology/hashset.js","webpack:///./~/topojson/lib/topojson/topology/point-hash.js","webpack:///./~/topojson/lib/topojson/topology/point-equal.js","webpack:///./~/topojson/lib/topojson/topology/dedup.js","webpack:///./~/topojson/lib/topojson/delta.js","webpack:///./~/topojson/lib/topojson/geomify.js","webpack:///./~/topojson/lib/topojson/pre-quantize.js","webpack:///./~/topojson/lib/topojson/quantize.js","webpack:///./~/topojson/lib/topojson/post-quantize.js","webpack:///./~/topojson/lib/topojson/bounds.js","webpack:///./~/topojson/lib/topojson/compute-id.js","webpack:///./~/topojson/lib/topojson/transform-properties.js","webpack:///./~/topojson/lib/topojson/simplify.js","webpack:///./~/topojson/lib/topojson/clockwise.js","webpack:///./~/topojson/lib/topojson/filter.js","webpack:///./~/topojson/lib/topojson/prune.js","webpack:///./~/topojson/lib/topojson/bind.js","webpack:///./~/topojson/lib/topojson/scale.js","webpack:///./~/datamaps/dist/datamaps.all.js","webpack:///./~/datamaps/~/d3/d3.js","webpack:///./~/datamaps/~/topojson/build/topojson.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","_defaults","defaults","keys","getOwnPropertyNames","i","length","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","setPrototypeOf","_d","d3","_topojson","_datamaps","_datamaps2","_register","BulbsDatamap","_BulbsHTMLElement","this","apply","arguments","createdCallback","innerHTML","mapContainer","firstChild","that","map","element","scope","responsive","fills","defaultFill","geographyConfig","highlightOnHover","window","addEventListener","resizeMap","bind","select","selectAll","on","stateObj","stateClicked","path","classed","event","CustomEvent","detail","dispatchEvent","resize","BulbsHTMLElement","registerElement","228","229","d3_number","x","isNaN","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","e","d3_Map","d3_Set","d3_rebind","target","source","method","d3_vendorSymbol","object","name","charAt","toUpperCase","substring","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","l","z","listeners","listenerByName","listener","get","slice","indexOf","concat","remove","push","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","node","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","ownerDocument","createElementNS","namespaceURI","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","ascending","a","b","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_interrupt","lock","__transition__","active","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","_","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_window","d3_event_dragSelect","d3_documentElement","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","position","top","left","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_sgn","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_Color","d3_hsl","h","d3_Hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_Hcl","d3_hcl_lab","d3_lab","cos","d3_radians","d3_Lab","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","d3_lab_hcl","atan2","d3_degrees","sqrt","NaN","d3_xyz_lab","pow","r","d3_rgbNumber","d3_rgbString","g","d3_Rgb","d3_rgb_hex","max","toString","min","d3_rgb_parse","format","rgb","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_hsl","d3_rgb_lab","d3_rgb_xyz","d3_functor","d3_identity","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","responseText","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","toLowerCase","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_formatPrefix","abs","scale","symbol","d3_format_precision","p","ceil","log","LN10","d3_format_typeDefault","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_true","d3_geo_clipPolygon","segments","compare","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","shift","d3_geo_clipSegmentLength1","rotatedClipStart","invert","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","φ0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipAntimeridianLine","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","isLeft","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_compose","compose","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","join","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","precision","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","step","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","range","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullCCW","i1","i2","i3","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","L","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","before","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","U","d3_geom_voronoiRedBlackRotateLeft","tree","parent","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","Array","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","s0","s1","d3_interpolate_number","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","bs","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_treeSeparation","d3_layout_treeLeft","_tree","thread","d3_layout_treeRight","d3_layout_treeSearch","d3_layout_treeRightmost","d3_layout_treeLeftmost","d3_layout_treeDeepest","d3_layout_treeVisitAfter","visit","previousSibling","previousChild","d3_layout_treeShift","change","prelim","mod","d3_layout_treeMove","ancestor","number","d3_layout_treeAncestor","vim","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","floor","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","reverse","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_format_re","d3_scale_linearFormatPrecision","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","exponent","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_arcOffset","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","size","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNode","inherit","count","transition","ease","duration","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_date_utc","UTC","d3_time_interval","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","d3_time_interval_utc","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","Z","d3_time_parse","localZ","setFullYear","W","getDay","setHours","d3_time_parsers","d3_time_formatRe","names","d3_time_formatLookup","d3_time_formatPad","fill","width","sign","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseWeekdayNumber","d3_time_numberRe","d3_time_parseWeekNumberSunday","d3_time_parseWeekNumberMonday","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseMilliseconds","d3_time_parseAmPm","d3_time_amPmLookup","d3_time_zone","getTimezoneOffset","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_percentRe","d3_time_formatUtc","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_time_scaleFormat","formats","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","document","documentElement","childNodes","nodeType","createElement","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","descending","sum","mean","median","bisector","lo","hi","mid","right","d3_bisector","bisectLeft","bisectRight","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","d3_map_prefix","d3_map_prefixCode","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","uniqueSort","matchesSelector","d3_selectionRoot","subgroup","subnode","subgroups","parentNode","d3_nsPrefix","xhtml","xlink","xml","xmlns","prefix","getAttributeNS","each","contains","getComputedStyle","getPropertyValue","text","html","appendChild","insertBefore","removeChild","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","dataByKeyValue","keyValues","exit","datum","nextSibling","args","empty","upgroup","d3_transitionInheritId","d3_transitionId","d3_transitionInherit","interrupt","mouseenter","mouseleave","mouse","navigator","userAgent","touches","touch","identifier","drag","mousedown","touchstart","touchid","touchposition","dragstart","move","moved","eventId","origin_","dragged","event_","ended","dragRestore","eventTarget","origin","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","mousemove","mousewheelreset","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomstarted","zoomed","zoomended","mouseup","relocate","scale0","locations0","started","changed","touchtime","distance0","l0","l1","distance1","scale1","touchmove","touchend","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","view1","__chart__","deltaY","deltaMode","wheelDelta","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","I","EOF","eol","EOL","rows","isArray","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_format_decimalPoint","d3_format_thousandsSeparator","d3_format_grouping","d3_format_currencySymbol","d3_formatPrefixes","formatPrefix","specifier","align","zfill","comma","suffix","integer","d3_format_types","zcomma","negative","lastIndexOf","after","d3_format_group","String","fromCharCode","toPrecision","toExponential","toFixed","d3_format_groupingLength","geo","d3_adderTemp","valueOf","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","Y","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","hull","vertices","sp","plen","stack","poly","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","delaunay","quadtree","nx","ny","insertChild","nPoint","bottom","xs","ys","x1_","y1_","x2_","y2_","compat","root","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dn","theta","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","gravity","weight","dimension","neighbors","candidates","recurse","childs","revalue","partition","pie","d3_layout_pieSortByValue","arcs","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","firstWalk","apportion","midpoint","separation","secondWalk","vip","vop","vom","sip","sop","sim","som","deep","nodeSize","pack","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","df","d3_svg_arcMax","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","innerTickSize","tickPadding","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time","d3_time_daySymbols","getDate","getUTCDate","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_formatDateTime","d3_time_formatDate","d3_time_formatTime","d3_time_days","d3_time_dayAbbreviations","d3_time_months","d3_time_monthAbbreviations","day","years","days","dayOfYear","week","sunday","weeks","weekOfYear","sundayOfYear","-","mondayOfYear","%","am","pm","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","months","d3_time_scaleLocalMethods","d3_time_scaleLocalFormats","d3_time_scaleLocalFormat","d3_time_scaleUTCMethods","d3_time_scaleUTCFormats","d3_time_scaleUTCFormat","json","responseXML","230","topojson","topology","simplify","clockwise","prune","stitch","231","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","meshArcs","geomsByArc","geometryType","geoms","mergeArcs","objects","register","polygonsByArc","exterior","cartesianRingArea","components","component","sgn","featureOrCollection","absolute","transformAbsolute","indexesByArc","ij","ik","presimplify","triangleArea","triangle","heap","relative","transformRelative","minAreaHeap","maxArea","cartesianTriangleArea","compareArea","up","down","removed","noop","mesh","232","systems","topologize","delta","geomify","prequantize","postquantize","computeId","transformProperties","options","Q0","Q1","propertyTransform","minimumArea","stitchPoles","verbose","system","oversize","console","warn","formatDistance","233","types","typeDefaults","collection","lineString","multiLineString","multiPoint","multiPolygon","typeObjects","typeGeometries","234","normalizePoint","y0e","y1e","stitchPolygons","np","x0e","x1e","pointk","xk","yk","fragmentBefore","fragment","startFragment","endFragment","235","236","ringArea","absoluteArea","237","km","radians","π_4","haversinDistance","haversin","238","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","hashmap","extract","cut","dedup","indexGeometry","indexGeometryType","indexArcs","indexByArc","indexMultiArcs","239","hash","equal","keyType","keyEmpty","valueType","mask","matchKey","keystore","collisions","valstore","free","maybeSet","missingValue","240","extractGeometry","extractGeometryType","extractLine","1","extractRing","rings","extractMultiRing","241","rotateArray","junctions","lineMid","ringMid","ringFixed","242","hashset","hashPoint","equalPoint","sequence","previousIndex","currentIndex","nextIndex","visitedByIndex","leftIndex","leftByIndex","rightIndex","rightByIndex","junctionCount","junctionByIndex","indexByPoint","hashIndex","equalIndex","Int32Array","Int8Array","junctionByPoint","243","store","244","ArrayBuffer","floats","Float64Array","uints","Uint32Array","245","pointA","pointB","246","dedupLine","startPoint","endPoint","startArcs","endArcs","arcsByEnd","startArc","equalLine","endArc","reverseEqualLine","dedupRing","equalRing","reverseEqualRing","findMinimumOffset","minimum","minimumPoint","arcCount","247","248","geomifyObject","geomifyObjectType","geomifyGeometry","geomifyFeature","geomifyGeometryType","249","quantizeGeometry","quantizeGeometryType","250","quantizePoint","quantizeLine","pj","251","every","252","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","253","idObject","idObjectType","idFeature","254","transformObject","transformObjectType","transformFeature","properties0","properties1","key0","255","retainProportion","areas","256","clockwiseGeometry","clockwisePolygon","clockwisePolygonSystem","clockwiseTopology","257","preserveNone","filterPolygon","filterExteriorRing","filterInteriorRing","preserveRing","forceClockwise","preserveAttached","MIN_VALUE","uniqueRingByArc","ringIndex","checkAttachment","uniqueRing","258","pruneGeometry","pruneGeometryType","pruneArcs","newIndex","oldIndex","oldReverse","newIndexByOldIndex","newArcCount","newArcs","oldArcs","pruneMultiArcs","oldArcCount","259","propertiesById","260","scalePoint","height","tx","lt","multipoint","261","val","datumValue","optionsValue","optionsValues","fnContext","geography","addContainer","offsetWidth","offsetHeight","padding-bottom","setProjection","projectionConfig","addStyleBlock","drawSubunits","fillData","colorCodeData","geoConfig","subunits","addLayer","geoData","hideAntarctica","fillColor","fillKey","borderWidth","borderColor","handleGeographyConfig","moveToFront","popupOnHover","$this","previousAttributes","stroke","stroke-width","fill-opacity","highlightFillColor","highlightBorderColor","highlightBorderWidth","highlightFillOpacity","updatePopup","addLegend","layer","label","legendTitle","defaultFillName","labels","addGraticule","handleArcs","defaultOptions","arcConfig","strokeColor","strokeWidth","originXY","latLngToXY","latitude","longitude","destXY","destination","midXY","sharpness","arcSharpness","getTotalLength","WebkitTransition","strokeDasharray","strokeDashoffset","animationSpeed","handleLabels","labelStartCoodinates","xOffset","yOffset","smallStateIndex","yStart","fontSize","labelColor","lineWidth","fontFamily","handleBubbles","datumHasCoords","bubbles","latLng","centered","fillOpacity","exitDelay","prop","Datamap","bubblesConfig","addPlugin","disableDefaultStyles","draw","dataType","done","dataUrl","popupTemplate","animate","newsize","clientWidth","oldsize","tmpData","Datamaps","updateChoropleth","hoverover","pathAndProjection","results","customTopo","dataJson","worldTopo","world","usaTopo","usa","lat","lng","className","subunit","color","subunitData","pluginFn","createNewLayer","require","jQuery","fn","datamaps","datamap","262","defaultView","d3_ascending","d3_numeric","d3_transposeLength","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","namespace","d3_nsXhtml","createNS","d3_selectionRemove","d3_behavior_dragTouchId","d3_cross2d","d3_color","d3_xhrHasResponse","d3_timer","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","fullSuffix","unit","d3_locale_timeFormat","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","sdλ","adλ","polygonStarted","d3_geom_hullUpper","hs","d3_geom_hullOrder","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","bm","bi","d3_interpolate_numberA","d3_interpolate_numberB","d3_interpolateTransformPop","d3_interpolateTranslate","d3_interpolateRotate","d3_interpolateSkew","d3_interpolateScale","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","wm","wp","rangeRoundPoints","d3_zero","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_selection_interruptNS","activeId","d3_transitionNamespace","schedule","cancelId","cancel","tweens","numbers","variance","deviation","d3_bisect","matches","position1","dragId","position0","dragOffset","dragSubject","dragName","correspondingElement","τε","zoomTo","center0","zooming","location0","targets","zoomName","rebeccapurple","numberFormat","timeFormat","d3_locale_enUS","flippedPoints","upper","lower","skipLeft","skipRight","dw","theta2","chargeDistance2","d3_layout_forceChargeDistance2","chargeDistance","root0","root1","wrapTree","sizeNode","node1","queue","siblings","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","tickSpacing","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","263","global","factory","feature$1","ring$$","ki","264"],"mappings":"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,YACAU,KAAA,aAEAkjC,GAAA,MACA2qB,OACA,uBAGA3rD,KAAA,UACA5C,YACAU,KAAA,WAEAkjC,GAAA,MACA2qB,OACA,uBAGA3rD,KAAA,eACA5C,YACAU,KAAA,WAEAkjC,GAAA,MACA2qB,QAEA,QAGA,SAIA3rD,KAAA,UACA5C,YACAU,KAAA,aAEAkjC,GAAA,MACA2qB,QACA,aAGA3rD,KAAA,UACA5C,YACAU,KAAA,SAEAkjC,GAAA,MACA2qB,OACA,kBAGA3rD,KAAA,UACA5C,YACAU,KAAA,gBAEAkjC,GAAA,MACA2qB,QACA,mCACA,QAGA3rD,KAAA,UACA5C,YACAU,KAAA,UAEAkjC,GAAA,MACA2qB,QACA,wCAGA3rD,KAAA,UACA5C,YACAU,KAAA,YAEAkjC,GAAA,MACA2qB,QACA,yBAKAA,QAEA,YACA,SACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,SAGA,YACA,QACA,WAGA,YACA,OACA,QACA,QACA,OACA,QACA,MACA,OACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,SAGA,YACA,UAGA,aACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UAGA,YACA,SACA,QACA,SACA,QACA,OACA,SACA,OACA,OACA,UAGA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,UACA,QACA,SACA,UACA,QACA,SACA,QACA,UACA,WAGA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,SAGA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,UAGA,aACA,SAGA,YACA,QACA,OACA,WAGA,aACA,UACA,SACA,SACA,SAGA,aACA,QACA,QACA,WAGA,YACA,SACA,QACA,SACA,WAGA,aACA,MACA,QACA,SACA,OACA,OACA,QACA,SAGA,aACA,OACA,QACA,QACA,QAGA,YACA,QACA,OACA,UAGA,YACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,UAGA,YACA,UAGA,YACA,UAGA,aACA,QACA,QACA,QACA,SACA,SACA,SACA,UAGA,aACA,SACA,SACA,SACA,SAGA,aACA,QACA,OACA,UAGA,YACA,SACA,SACA,SACA,UACA,UACA,SACA,UAGA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SAGA,YACA,QACA,UACA,SACA,UACA,UACA,UACA,WAGA,aACA,SACA,QACA,SACA,SACA,UAGA,aACA,QACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,OACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,SAGA,aACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,SACA,SAGA,YACA,QACA,SACA,SACA,QACA,QACA,UAGA,YACA,SAGA,YACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,UAGA,aACA,UAGA,aACA,QACA,QACA,SACA,QACA,SAGA,aACA,SACA,QACA,QACA,SAGA,YACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,WAGA,WACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,UAGA,WACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WAGA,WACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,WAGA,WACA,UACA,QACA,QACA,QACA,QACA,WAGA,WACA,QACA,OACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,UAGA,WACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,UAGA,aACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,QACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,UACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,MACA,QACA,MACA,OACA,SACA,QACA,MACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,OACA,SACA,SACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,UACA,UACA,WAGA,YACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,SAGA,YACA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,OACA,QACA,SACA,QACA,QACA,OACA,UAGA,YACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,SACA,MACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,QACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,OACA,SACA,QACA,UACA,UACA,UACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,OACA,UACA,UACA,QACA,QACA,SACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,OACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,OACA,MACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,MACA,SACA,QACA,QACA,OACA,UACA,SACA,UACA,OACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,MACA,SACA,QACA,SACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,UAGA,aACA,SACA,OACA,SACA,UAGA,aACA,SACA,SACA,UACA,SAGA,aACA,SACA,QACA,UACA,SACA,SAGA,aACA,QACA,QACA,QACA,SAGA,YACA,MACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,UAGA,YACA,SACA,QACA,OACA,SACA,OACA,WAGA,aACA,OACA,UAGA,aACA,QACA,SACA,SAGA,YACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,aACA,QACA,QACA,SACA,QACA,SACA,WAGA,YACA,OACA,SACA,QACA,OACA,QACA,QAGA,YACA,OACA,SACA,QACA,OACA,UAGA,aACA,QACA,SAGA,YACA,QACA,OACA,UAGA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UAGA,YACA,QACA,QACA,SACA,WAGA,aACA,UAGA,aACA,QACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,SAGA,YACA,UAGA,aACA,UAGA,aACA,OACA,SACA,QACA,QACA,SACA,OACA,SAGA,YACA,OACA,OACA,OACA,SAGA,YACA,QACA,OACA,WAGA,aACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,UACA,SACA,QACA,UAGA,aACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SAGA,aACA,QACA,QACA,SACA,QACA,UACA,UAGA,aACA,SAGA,YACA,QACA,QACA,QACA,SACA,QACA,UAGA,YACA,SACA,OACA,UAGA,aACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,SACA,OACA,SAGA,aACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,OACA,UACA,UACA,SACA,QACA,SACA,OACA,MACA,WAGA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,UAGA,aACA,UACA,SACA,UAGA,aACA,QACA,WAGA,YACA,SACA,SACA,SACA,UACA,SAGA,aACA,QACA,UAGA,YACA,OACA,MACA,OACA,SACA,SACA,OACA,SAGA,aACA,QACA,QACA,QACA,OACA,OACA,SACA,UAGA,aACA,UACA,OACA,OACA,QACA,UAGA,aACA,SACA,MACA,QACA,QACA,MACA,WAGA,YACA,QACA,QACA,UACA,SACA,SAGA,aACA,QACA,SACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,WAGA,YACA,OACA,QACA,OACA,SACA,SAGA,YACA,QACA,UAGA,YACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UAGA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,UAGA,aACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,MACA,MACA,OACA,QACA,QAGA,YACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,UAGA,aACA,MACA,OACA,SAGA,aACA,SACA,SACA,QACA,QACA,SACA,QACA,UAGA,YACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,UAGA,YACA,QACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,SACA,QACA,UACA,UACA,SACA,WAGA,YACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,QACA,QACA,SAGA,aACA,UACA,OACA,QACA,UACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,QACA,QACA,MACA,UAGA,YACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QAGA,YACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,SAGA,YACA,OACA,SACA,QACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,OACA,QACA,QAGA,YACA,QACA,QACA,OACA,OACA,QACA,OACA,WAGA,YACA,SACA,OACA,OACA,QACA,OACA,QACA,OACA,UAGA,YACA,MACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,UACA,WAGA,aACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,QACA,UAGA,aACA,SACA,SACA,QACA,SACA,UAGA,YACA,UACA,SACA,SACA,QACA,SACA,SACA,SAGA,YACA,QACA,QACA,SACA,QACA,WAGA,aACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,QAGA,YACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,MACA,UAGA,YACA,SAGA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,WAGA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,QACA,QACA,QACA,UAGA,YACA,QACA,SACA,SACA,QACA,QACA,WAGA,YACA,WAGA,YACA,SACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UAGA,aACA,QACA,SACA,UACA,WAGA,aACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,UAGA,YACA,QACA,QACA,UACA,SACA,SACA,OACA,QACA,WAGA,aACA,SACA,SACA,QACA,OACA,SACA,SACA,UAGA,aACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,SACA,SACA,WAGA,aACA,SACA,QACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,WAGA,YACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,OACA,OACA,UAGA,aACA,UACA,QACA,OACA,MACA,QACA,QACA,UAGA,aACA,UACA,QACA,OACA,QACA,OACA,UAGA,YACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,OACA,UAGA,aACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,WAGA,aACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,WAGA,aACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,OACA,QACA,MACA,MACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAGA,aACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SAGA,YACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,UACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,QACA,OACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,UAGA,aACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,QACA,UACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,WAGA,aaACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,UACA,UACA,WAGA,aACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,UAGA,aACA,UACA,QACA,QACA,QACA,QACA,SACA,WAGA,YACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,QACA,QAGA,YACA,SACA,QACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UAGA,YACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UAGA,aACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,QACA,SAGA,aACA,SACA,QACA,OACA,QACA,UACA,SAGA,aACA,UACA,QACA,QACA,OACA,UACA,UAGA,aACA,UACA,OACA,MACA,QACA,QACA,WAGA,aaACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UAGA,aACA,SACA,QACA,OACA,SACA,OACA,QACA,SAGA,YACA,QACA,OACA,WAGA,aACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,UAGA,aACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SAGA,YACA,QACA,SAGA,aACA,UACA,QACA,OACA,QACA,QACA,QACA,SACA,UACA,UAGA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WAGA,aACA,UACA,UACA,SACA,SACA,OACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,QACA,WAGA,aACA,QACA,SACA,QACA,SAGA,aACA,QACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,UAGA,aACA,OACA,QACA,SACA,UACA,SACA,UACA,UACA,UAGA,aACA,QACA,WAGA,aACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,UAGA,aACA,SACA,QACA,UAGA,aACA,OACA,QACA,SACA,QACA,SAGA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SAGA,aACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,OACA,UAGA,YACA,SAGA,YACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,UAGA,aACA,SACA,SACA,SACA,UACA,UACA,UACA,QAGA,YACA,OACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,SAGA,YACA,MACA,QACA,OACA,MACA,QACA,QACA,OACA,OACA,QAGA,YACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,SAGA,YACA,SACA,UACA,QACA,UACA,UAGA,aACA,OACA,SACA,QACA,UAGA,aACA,SAGA,YACA,QACA,SACA,SACA,QACA,MACA,SAGA,YACA,OACA,QACA,MACA,QACA,OACA,SACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,UAGA,YACA,OACA,QAGA,YACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,SACA,SAGA,aACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,UAGA,aACA,SACA,SACA,QACA,UAGA,YACA,SACA,QACA,QACA,SACA,WAGA,aACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,QAGA,aACA,SAGA,YACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,SAGA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,WAGA,aACA,UAGA,YACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,OACA,SAGA,aACA,SACA,SACA,QACA,QACA,QACA,QACA,UAGA,aACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,UAGA,YACA,OACA,OACA,QACA,OACA,QAGA,YACA,QACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,UAGA,aACA,UACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,OACA,QACA,OACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,UAGA,aACA,SACA,MACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,SACA,SAGA,aACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,MACA,SAGA,YACA,MACA,SACA,MACA,OACA,QACA,OACA,SAGA,YACA,QACA,SACA,WAGA,aACA,QACA,QACA,QACA,OACA,SACA,SACA,UAGA,YACA,QACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,QACA,OACA,QAGA,YACA,MACA,OACA,QACA,SACA,SACA,UAGA,aACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QAGA,YACA,QACA,UACA,QACA,OACA,SAGA,aACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,SAGA,YACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,WAGA,aACA,OACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,UAGA,YACA,QACA,UACA,QACA,QACA,QACA,SACA,WAGA,YACA,SACA,QACA,SACA,SACA,QACA,WAGA,YACA,OACA,SACA,SACA,UAGA,YACA,QACA,SAGA,aACA,OACA,OACA,OACA,QACA,SAGA,YACA,OACA,OACA,QACA,SACA,QACA,SAGA,YACA,QACA,SAGA,YACA,SACA,SACA,SACA,WAGA,aACA,WAGA,aACA,QACA,QACA,OACA,QACA,OACA,OACA,UAGA,YACA,QACA,SAGA,aACA,UACA,SACA,OACA,QACA,UAGA,aACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,UAGA,YACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SAGA,YACA,QACA,OACA,OACA,QACA,SAGA,aACA,WACA,WACA,WAGA,aACA,QACA,QACA,SACA,SACA,QACA,UACA,WAGA,aACA,YAGA,YACA,OACA,QAGA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,SAGA,aACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,YAGA,YACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,WAGA,YACA,SACA,QACA,UACA,QACA,QACA,OACA,MACA,OACA,SACA,OACA,QACA,UAGA,YACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,OACA,QACA,SAGA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,UAGA,aACA,SACA,SACA,UAGA,YACA,QACA,SACA,OACA,QACA,OACA,UAGA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,UAGA,YACA,YAGA,aACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,UAGA,aACA,OACA,QACA,OACA,OACA,QACA,UAGA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,WAGA,YACA,QACA,QACA,QACA,SACA,OACA,SACA,OACA,UAGA,YACA,SACA,SACA,QACA,SACA,SAGA,YACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WAGA,YACA,QACA,SACA,SACA,OACA,QACA,OACA,SACA,SAGA,YACA,SACA,SACA,SACA,WAGA,aACA,QACA,SACA,QACA,WAGA,aACA,QACA,SACA,SACA,SACA,SACA,SAGA,aACA,WACA,SACA,UACA,SACA,UAGA,aACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UAGA,aACA,SACA,SACA,QACA,SACA,OACA,OACA,OACA,SAGA,YACA,SAGA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,WAGA,aACA,SACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UAGA,aACA,QACA,QACA,SACA,UAGA,YACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,UACA,WAGA,YACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SAGA,SACA,YACA,UACA,OACA,QACA,OACA,YAGA,SACA,UAGA,SACA,OACA,SACA,SAGA,YACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,UACA,UAGA,aACA,SACA,SACA,OACA,OACA,QACA,UAGA,YACA,OACA,QAGA,aACA,QACA,SACA,SACA,QACA,SACA,UAGA,aACA,UACA,SACA,UACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,OACA,QACA,UACA,OACA,SACA,QACA,OACA,UAGA,YACA,OACA,SAGA,YACA,QACA,UAGA,aACA,OACA,UAGA,YACA,OACA,SACA,SACA,UAGA,aACA,SACA,SACA,QACA,OACA,OACA,OACA,SAGA,YACA,OACA,QACA,SAGA,aACA,SACA,QACA,QACA,SAGA,YACA,OACA,UACA,WAGA,aACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,QACA,QACA,SACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,SAGA,YACA,QACA,QACA,SACA,QACA,UAGA,YACA,MACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,WAGA,aACA,SACA,UAGA,aACA,UACA,UACA,UACA,UAGA,YACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,UAGA,aACA,OACA,SACA,OACA,OACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,OACA,QACA,QACA,QACA,SAGA,YACA,QACA,OACA,OACA,MACA,OACA,OACA,MACA,SAGA,YACA,QACA,SACA,MACA,MACA,QACA,QAGA,YACA,QACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,QACA,MACA,QACA,QACA,UAGA,YACA,SAGA,YACA,OACA,OACA,MACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,UACA,QACA,QACA,SAGA,aACA,SACA,QACA,OACA,OACA,QACA,SAGA,YACA,QACA,OACA,MACA,UAGA,aACA,MACA,UAGA,YACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SAGA,aaACA,SACA,QACA,SACA,UAGA,YACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SAGA,YACA,SACA,MACA,SAGA,aACA,UACA,UACA,QACA,SACA,UAGA,aACA,OACA,QACA,QACA,SACA,SAGA,YACA,SACA,SACA,QACA,QACA,SACA,WAGA,aACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,WAGA,aACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,UAGA,aACA,QACA,QAGA,YACA,QACA,OACA,OACA,SACA,OACA,QACA,QACA,QAGA,YACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,UAGA,aACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,SACA,MACA,SACA,UACA,QACA,QACA,QACA,SACA,OACA,OACA,SACA,OACA,SACA,SAGA,YACA,QACA,SACA,WAGA,aACA,UAGA,aACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,OACA,OACA,QAGA,YACA,QACA,MACA,OACA,QACA,OACA,OACA,OACA,UAGA,YACA,OACA,SACA,SACA,SAGA,aACA,SACA,SACA,QACA,UACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,UAGA,YACA,SACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,QAGA,YACA,SACA,UAGA,aACA,UACA,UACA,UACA,WAGA,aACA,QACA,WAGA,aACA,QACA,QAGA,aACA,SACA,QACA,QACA,SACA,UACA,UAGA,YACA,QACA,UAGA,aACA,UACA,UACA,MACA,OACA,QACA,UAGA,YACA,SACA,OACA,SACA,UACA,SACA,OACA,QACA,OACA,SAGA,aACA,SACA,UACA,OACA,OACA,QACA,SACA,OACA,UAGA,YACA,QACA,OACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,UAGA,aACA,UACA,OACA,OACA,OACA,SACA,UAGA,aACA,UACA,SACA,OACA,OACA,UAGA,YACA,UACA,SACA,QACA,SACA,OACA,OACA,OACA,WAGA,YACA,SACA,WAGA,aACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,WAGA,aACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,UAGA,aACA,SACA,QACA,QACA,UACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,UAGA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,WAGA,aACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,UAGA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,UAGA,aACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,OACA,SAGA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,WAGA,aACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,OACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,OACA,UAGA,YACA,SACA,UACA,UACA,OACA,SACA,QACA,QACA,UAGA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,UAGA,YACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,WAGA,aACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,WAGA,aACA,QACA,QACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,UAGA,aACA,QACA,QACA,OACA,UAGA,YACA,QACA,SACA,SACA,SACA,QACA,SAGA,aACA,SAGA,aACA,QACA,WAGA,aACA,QACA,UACA,SACA,UAGA,aACA,UAGA,YACA,QACA,SACA,OACA,QACA,UAGA,YACA,OACA,QACA,SACA,UAGA,aACA,QACA,UACA,UACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,UAGA,aACA,UAGA,aACA,QACA,QACA,QACA,QACA,QACA,SAGA,YACA,SACA,WAGA,YACA,QACA,MACA,OACA,OACA,OACA,QAGA,YACA,MACA,OACA,QAGA,YACA,SACA,OACA,QAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,SAGA,YACA,UACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,UAGA,aACA,QACA,UAGA,aACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,OACA,SAGA,YACA,SACA,UAGA,aACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,UAGA,aACA,QAGA,YACA,OACA,SAGA,YACA,SACA,UACA,SACA,UACA,SACA,QACA,OACA,QACA,QACA,QACA,WAGA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,UACA,WACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,SACA,SACA,UAGA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,WAGA,aACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,WAGA,aACA,SACA,SACA,SACA,UACA,WAGA,aACA,OACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,UACA,WAGA,aACA,OACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,WAGA,aACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UAGA,aACA,UACA,SACA,SACA,SACA,SACA,SACA,WAGA,aACA,SACA,QACA,WACA,QAGA,YACA,OACA,OACA,QACA,SACA,SACA,QACA,UAGA,YACA,QACA,UAGA,aACA,SACA,SACA,WAGA,aACA,SACA,SACA,QACA,OACA,SACA,UAGA,YACA,QACA,SACA,SACA,UACA,QACA,SACA,QAGA,aACA,OACA,QACA,QACA,UAGA,YACA,SACA,QACA,WAGA,YACA,SACA,SACA,SACA,UACA,SACA,WAGA,aACA,QACA,SACA,UAGA,YACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,QACA,SACA,UAGA,YACA,MACA,QACA,QACA,OACA,OACA,SAGA,YACA,SAGA,YACA,MACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SAGA,aACA,QACA,SACA,SACA,QAGA,YACA,SACA,QACA,UAGA,aACA,SACA,QACA,SAGA,YACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,UAGA,YACA,OACA,UAGA,YACA,SACA,SACA,OACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,QACA,QACA,QAGA,YACA,QACA,SACA,UACA,UAGA,aACA,OACA,SACA,SACA,SACA,UAGA,YACA,OACA,OACA,QACA,UAGA,aACA,UACA,SACA,UAGA,YACA,QACA,QACA,OACA,QACA,OACA,QACA,SAGA,YACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,OACA,OACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,UAGA,YACA,UACA,OACA,UAGA,aACA,WACA,WACA,WAGA,aACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WAGA,YACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,WAGA,aACA,OACA,QACA,SACA,UAGA,aACA,SAGA,YACA,QACA,QACA,OACA,QACA,QACA,WAGA,aACA,QACA,SAGA,YACA,OACA,QACA,QACA,SACA,OACA,SAGA,YACA,SACA,QACA,UAGA,aACA,MACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,UACA,UACA,SACA,UACA,SACA,UAGA,YACA,OACA,QACA,QACA,OACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,UAGA,YACA,MACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,SACA,SAGA,aACA,OACA,QACA,QACA,SACA,QACA,QACA,QAGA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,WAGA,aACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,SAGA,aACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,UACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UAGA,YACA,OACA,QACA,QACA,SACA,SACA,OACA,OACA,OACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SAGA,YACA,MACA,SAGA,YACA,QACA,OACA,MACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,UACA,SACA,SAGA,YACA,UACA,UACA,SACA,SACA,SACA,UACA,UAGA,YACA,QACA,QACA,SACA,QACA,SAGA,aACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAGA,aACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,QACA,UACA,UACA,WAGA,aACA,OACA,QACA,UAGA,YACA,QACA,OACA,OACA,UACA,SAGA,YACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,QACA,SACA,SAGA,YACA,OACA,SACA,MACA,OACA,QACA,QACA,QACA,UAGA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,QACA,UAGA,aACA,SAGA,aACA,QACA,SAGA,aACA,OACA,QACA,QACA,UAGA,YACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,SAGA,aACA,OACA,UAGA,YACA,SACA,MACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,OACA,SAGA,aACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,WAGA,aACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,UAGA,YACA,OACA,UACA,OACA,OACA,QACA,QACA,QACA,SAGA,aACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,UAGA,YACA,SACA,QACA,SACA,UAGA,YACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SAGA,YACA,OACA,SACA,QACA,OACA,SAGA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,UAGA,YACA,QACA,QACA,OACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,WAGA,aACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SAGA,YACA,QACA,QACA,SACA,SAGA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,WAGA,YACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,UAGA,YACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,SACA,QACA,SACA,UAGA,aACA,QACA,SACA,OACA,UACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGA,aACA,UACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,SAGA,aACA,SACA,SACA,QACA,SACA,QACA,MACA,OACA,QAGA,aACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SAGA,YACA,QACA,QACA,QACA,UAGA,aACA,UACA,UAGA,aACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,SACA,UACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,WAGA,aACA,SACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,WAGA,aACA,UACA,QACA,SACA,QACA,QACA,SACA,WAGA,YACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,WAGA,YACA,UACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,WAGA,YACA,QACA,QACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,UAGA,YACA,SACA,OACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,UAGA,aACA,QACA,UAGA,YACA,QACA,UACA,UAGA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,UACA,SACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,QACA,UACA,UAGA,YACA,OACA,QACA,SACA,UAGA,aACA,SACA,QACA,SACA,UACA,SACA,UAGA,aACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,QAGA,YACA,UACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,WAGA,aACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,UACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,UAGA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,UAGA,aACA,UACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,UAGA,aACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WAGA,YACA,SACA,OACA,SACA,UACA,UACA,OACA,QACA,SAGA,YACA,SACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,UAGA,aACA,SACA,SACA,QACA,QACA,WAGA,YACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SAGA,aACA,QACA,SACA,SACA,OACA,MACA,QACA,QACA,SACA,UACA,UAGA,aACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,UAGA,YACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,SAGA,aACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UAGA,YACA,QACA,QACA,QACA,SACA,QACA,UAGA,YACA,QACA,SAGA,YACA,UACA,SACA,SACA,SACA,SACA,QAGA,aACA,SACA,SACA,QACA,UACA,SACA,SACA,QAGA,YACA,QACA,SACA,SACA,QACA,SACA,OACA,MACA,UAGA,YACA,UAGA,aACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,OACA,QACA,WAGA,aACA,SACA,SACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,UAGA,aACA,UACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,SAGA,aACA,OACA,OACA,MACA,QACA,SACA,UAGA,aACA,QACA,SAGA,YACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,SAGA,YACA,SACA,OACA,WAGA,YACA,SACA,UACA,OACA,UAGA,aACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,UAGA,YACA,WACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,UACA,QACA,WAGA,YACA,OACA,UAGA,SACA,SACA,UACA,QACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,WAGA,SACA,UAGA,SACA,YACA,SACA,QACA,YAGA,SACA,MACA,OACA,UACA,QACA,UACA,QACA,SAGA,aACA,SACA,QACA,MACA,QACA,OACA,SACA,UAGA,aACA,UACA,QACA,QACA,OACA,QACA,WAGA,aACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,YAGA,aaACA,UACA,UACA,SACA,UACA,QACA,WAGA,aaAGA,aACA,UACA,QACA,OACA,QACA,UACA,UAGA,aACA,SACA,SACA,SACA,UACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,UACA,UAGA,aACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,UACA,UAGA,YACA,UACA,SACA,SAGA,YACA,OACA,UAGA,YACA,SAGA,aACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,OACA,OACA,SAGA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,UAGA,YACA,UAGA,aACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,WAGA,aACA,MACA,QACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,UACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,SAGA,aACA,QAGA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,UAGA,YACA,SACA,QACA,QACA,SACA,SACA,WAGA,YACA,SAGA,YACA,UAGA,aACA,UACA,QACA,UACA,SACA,WAGA,aACA,UAGA,aACA,SACA,QACA,QACA,QACA,SAGA,aACA,SAGA,YACA,SACA,QACA,QACA,SACA,SAGA,aACA,SACA,QACA,MACA,OACA,QACA,QACA,UAGA,aACA,SACA,SACA,OACA,MACA,SACA,WAGA,YACA,SACA,SACA,SACA,QACA,MACA,SACA,SACA,UAGA,aACA,QACA,SACA,QACA,OACA,SACA,WAGA,aACA,OACA,SACA,SACA,QACA,SAGA,aACA,SACA,QACA,QACA,SACA,QACA,SAGA,YACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,SAGA,YACA,OACA,QACA,QACA,SACA,UACA,WAGA,YACA,MACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UAGA,YACA,SACA,OACA,OACA,WAGA,YACA,UACA,UAGA,aACA,SACA,UAGA,YACA,QAGA,aACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,UAGA,aACA,SACA,SACA,QACA,OACA,OACA,OACA,MACA,WAGA,aACA,OACA,SAGA,YACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,QACA,SAGA,aACA,WAGA,aACA,SACA,QACA,QACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,WAGA,aACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,SAGA,YACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,QACA,SAGA,aACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SAGA,YACA,QACA,OACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,UAGA,YACA,OACA,QACA,OACA,MACA,SACA,UACA,UACA,WAGA,YACA,OACA,QACA,SACA,SACA,MACA,QACA,SAGA,YACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,UAGA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,UAGA,YACA,QACA,UACA,SACA,SACA,UACA,UACA,OACA,SAGA,aACA,UACA,UACA,SACA,OACA,QACA,QACA,UACA,UAGA,aACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,WAGA,aACA,SACA,SACA,SACA,UAGA,YACA,OACA,QACA,SAGA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,UACA,WAGA,aACA,UACA,UACA,SACA,SACA,SACA,SACA,UAGA,YACA,SACA,MACA,QACA,OACA,MACA,QACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,QACA,UACA,SAGA,YACA,QACA,QACA,MACA,MACA,MACA,OACA,QACA,SAGA,YACA,QACA,OACA,MACA,UAGA,YACA,QACA,OACA,OACA,QACA,MACA,MACA,OACA,UAGA,YACA,QACA,OACA,MACA,MACA,OACA,UAGA,YACA,SACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,SACA,UACA,QACA,OACA,OACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,UACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,UAGA,aACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,QACA,QACA,SAGA,YACA,UACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGA,YACA,SACA,SACA,QACA,QACA,QACA,UAGA,WACA,SACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,MACA,SAGA,aaACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,OACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,QACA,SACA,QACA,OACA,WAGA,aACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA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","file":"bulbs-datamap.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(228);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _topojson = __webpack_require__(230);\n\t\n\tvar _topojson2 = _interopRequireDefault(_topojson);\n\t\n\tvar _datamaps = __webpack_require__(261);\n\t\n\tvar _datamaps2 = _interopRequireDefault(_datamaps);\n\t\n\tvar _register = __webpack_require__(2);\n\t\n\t__webpack_require__(264);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /* global Datamap */\n\t\n\t\n\tvar BulbsDatamap = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsDatamap, _BulbsHTMLElement);\n\t\n\t  function BulbsDatamap() {\n\t    _classCallCheck(this, BulbsDatamap);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsDatamap.prototype.createdCallback = function createdCallback() {\n\t    this.innerHTML = '<div class=\"bulbs-datamap\"></div>';\n\t    var mapContainer = this.firstChild;\n\t    var that = this;\n\t\n\t    this.map = new _datamaps2.default({\n\t      element: mapContainer,\n\t      scope: 'usa',\n\t      responsive: true,\n\t      fills: {\n\t        defaultFill: ''\n\t      },\n\t      geographyConfig: {\n\t        highlightOnHover: false\n\t      }\n\t    });\n\t\n\t    window.addEventListener('resize', this.resizeMap.bind(this));\n\t\n\t    d3.select(mapContainer).selectAll('svg .datamaps-subunit').on('click', function (stateObj) {\n\t      that.stateClicked(this, stateObj, mapContainer);\n\t    });\n\t  };\n\t\n\t  BulbsDatamap.prototype.stateClicked = function stateClicked(path, stateObj, mapContainer) {\n\t    d3.select(mapContainer).selectAll('svg .datamaps-subunit').classed('selected', false);\n\t    d3.select(path).classed('selected', true);\n\t\n\t    var event = new CustomEvent('bulbs-datamap:selected', { 'detail': stateObj });\n\t    mapContainer.dispatchEvent(event);\n\t  };\n\t\n\t  BulbsDatamap.prototype.resizeMap = function resizeMap() {\n\t    this.map.resize();\n\t  };\n\t\n\t  return BulbsDatamap;\n\t}(_register.BulbsHTMLElement);\n\t\n\t(0, _register.registerElement)('bulbs-datamap', BulbsDatamap);\n\t\n\texports.default = BulbsDatamap;\n\n/***/ },\n\n/***/ 228:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(229);\n\tmodule.exports = d3;\n\t(function () { delete this.d3; })(); // unset global\n\n\n/***/ },\n\n/***/ 229:\n/***/ function(module, exports) {\n\n\td3 = function() {\n\t  var d3 = {\n\t    version: \"3.3.13\"\n\t  };\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n\t  try {\n\t    d3_array(d3_documentElement.childNodes)[0].nodeType;\n\t  } catch (e) {\n\t    d3_array = function(list) {\n\t      var i = list.length, array = new Array(i);\n\t      while (i--) array[i] = list[i];\n\t      return array;\n\t    };\n\t  }\n\t  try {\n\t    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n\t  } catch (error) {\n\t    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t    d3_element_prototype.setAttribute = function(name, value) {\n\t      d3_element_setAttribute.call(this, name, value + \"\");\n\t    };\n\t    d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t    };\n\t    d3_style_prototype.setProperty = function(name, value, priority) {\n\t      d3_style_setProperty.call(this, name, value + \"\", priority);\n\t    };\n\t  }\n\t  d3.ascending = function(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  };\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  function d3_number(x) {\n\t    return x != null && !isNaN(x);\n\t  }\n\t  d3.mean = function(array, f) {\n\t    var n = array.length, a, m = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n\t    } else {\n\t      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n\t    }\n\t    return j ? m : undefined;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    if (arguments.length > 1) array = array.map(f);\n\t    array = array.filter(d3_number);\n\t    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n\t  };\n\t  d3.bisector = function(f) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  };\n\t  var d3_bisector = d3.bisector(function(d) {\n\t    return d;\n\t  });\n\t  d3.bisectLeft = d3_bisector.left;\n\t  d3.bisect = d3.bisectRight = d3_bisector.right;\n\t  d3.shuffle = function(array) {\n\t    var m = array.length, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m], array[m] = array[i], array[i] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    try {\n\t      for (var key in properties) {\n\t        Object.defineProperty(ctor.prototype, key, {\n\t          value: properties[key],\n\t          enumerable: false\n\t        });\n\t      }\n\t    } catch (e) {\n\t      ctor.prototype = properties;\n\t    }\n\t  }\n\t  d3.map = function(object) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) object.forEach(function(key, value) {\n\t      map.set(key, value);\n\t    }); else for (var key in object) map.set(key, object[key]);\n\t    return map;\n\t  };\n\t  function d3_Map() {}\n\t  d3_class(d3_Map, {\n\t    has: function(key) {\n\t      return d3_map_prefix + key in this;\n\t    },\n\t    get: function(key) {\n\t      return this[d3_map_prefix + key];\n\t    },\n\t    set: function(key, value) {\n\t      return this[d3_map_prefix + key] = value;\n\t    },\n\t    remove: function(key) {\n\t      key = d3_map_prefix + key;\n\t      return key in this && delete this[key];\n\t    },\n\t    keys: function() {\n\t      var keys = [];\n\t      this.forEach(function(key) {\n\t        keys.push(key);\n\t      });\n\t      return keys;\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(key, value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      this.forEach(function(key, value) {\n\t        entries.push({\n\t          key: key,\n\t          value: value\n\t        });\n\t      });\n\t      return entries;\n\t    },\n\t    forEach: function(f) {\n\t      for (var key in this) {\n\t        if (key.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, key.substring(1), this[key]);\n\t        }\n\t      }\n\t    }\n\t  });\n\t  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {}\n\t  d3_class(d3_Set, {\n\t    has: function(value) {\n\t      return d3_map_prefix + value in this;\n\t    },\n\t    add: function(value) {\n\t      this[d3_map_prefix + value] = true;\n\t      return value;\n\t    },\n\t    remove: function(value) {\n\t      value = d3_map_prefix + value;\n\t      return value in this && delete this[value];\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      this.forEach(function(value) {\n\t        values.push(value);\n\t      });\n\t      return values;\n\t    },\n\t    forEach: function(f) {\n\t      for (var value in this) {\n\t        if (value.charCodeAt(0) === d3_map_prefixCode) {\n\t          f.call(this, value.substring(1));\n\t        }\n\t      }\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.substring(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.substring(i + 1);\n\t      type = type.substring(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n\t    return d3_selectMatcher.call(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = function(s, n) {\n\t      return Sizzle.uniqueSort(Sizzle(s, n));\n\t    };\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3_selectionRoot;\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.substring(0, i);\n\t        name = name.substring(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return name.trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    } : function() {\n\t      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n\t    };\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(function() {\n\t      var parent = this.parentNode;\n\t      if (parent) parent.removeChild(this);\n\t    });\n\t  };\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          keyValue = key.call(node = group[i], node.__data__, i);\n\t          if (nodeByKeyValue.has(keyValue)) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues.push(keyValue);\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          keyValue = key.call(groupData, nodeData = groupData[i], i);\n\t          if (node = nodeByKeyValue.get(keyValue)) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          } else if (!dataByKeyValue.has(keyValue)) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t          dataByKeyValue.set(keyValue, nodeData);\n\t          nodeByKeyValue.remove(keyValue);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValues[i])) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3.ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    this.each(function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3_selectionPrototype.transition = function() {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function() {\n\t    return this.each(d3_selection_interrupt);\n\t  };\n\t  function d3_selection_interrupt() {\n\t    var lock = this.__transition__;\n\t    if (lock) ++lock.active;\n\t  }\n\t  d3.select = function(node) {\n\t    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  var d3_selectionRoot = d3.select(d3_documentElement);\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.substring(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  d3_selection_onFilters.forEach(function(k) {\n\t    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t  });\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\t  function d3_event_dragSuppress() {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        function off() {\n\t          w.on(click, null);\n\t        }\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n\t        svg = d3.select(\"body\").append(\"svg\").style({\n\t          position: \"absolute\",\n\t          top: 0,\n\t          left: 0,\n\t          margin: 0,\n\t          padding: 0,\n\t          border: \"none\"\n\t        }, \"important\");\n\t        var ctm = svg[0][0].getScreenCTM();\n\t        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t        svg.remove();\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function touchid() {\n\t      return d3.event.changedTouches[0].identifier;\n\t    }\n\t    function touchposition(parent, id) {\n\t      return d3.touches(parent).filter(function(p) {\n\t        return p.identifier === id;\n\t      })[0];\n\t    }\n\t    function dragstart(id, position, move, end) {\n\t      return function() {\n\t        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n\t        if (origin) {\n\t          offset = origin.apply(target, arguments);\n\t          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n\t        } else {\n\t          offset = [ 0, 0 ];\n\t        }\n\t        event_({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n\t          dragged |= dx | dy;\n\t          origin_ = p;\n\t          event_({\n\t            type: \"drag\",\n\t            x: p[0] + offset[0],\n\t            y: p[1] + offset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n\t          dragRestore(dragged && d3.event.target === eventTarget);\n\t          event_({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(event_);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(event_);\n\t            };\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(event_);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(event_);\n\t          zoomed(event_);\n\t          zoomended(event_);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(event) {\n\t      event({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(event) {\n\t      rescale();\n\t      event({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(event) {\n\t      event({\n\t        type: \"zoomend\"\n\t      });\n\t    }\n\t    function mousedowned() {\n\t      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      zoomstarted(event_);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(target), l);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === eventTarget);\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(target);\n\t      started();\n\t      zoomstarted(event_);\n\t      function relocate() {\n\t        var touches = d3.touches(target);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0], l = locations0[p.identifier];\n\t            scaleTo(view.k * 2);\n\t            translateTo(p, l);\n\t            d3_eventPreventDefault();\n\t            zoomed(event_);\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(target), p0, l0, p1, l1;\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(event_);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        w.on(touchmove, null).on(touchend, null);\n\t        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(event_);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var event_ = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      zoomstarted(event_);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(event_);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      var point = center || d3.mouse(this);\n\t      if (!translate0) translate0 = location(point);\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(point, translate0);\n\t      zoomed(event_);\n\t    }\n\t    function mousewheelreset() {\n\t      translate0 = null;\n\t    }\n\t    function dblclicked() {\n\t      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n\t      zoomstarted(event_);\n\t      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n\t      translateTo(p, l);\n\t      zoomed(event_);\n\t      zoomended(event_);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n\t  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return d3.event.wheelDelta;\n\t  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.detail;\n\t  }, \"MozMousePixelScroll\");\n\t  function d3_Color() {}\n\t  d3_Color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = function(h, s, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n\t  };\n\t  function d3_hsl(h, s, l) {\n\t    return new d3_Hsl(h, s, l);\n\t  }\n\t  function d3_Hsl(h, s, l) {\n\t    this.h = h;\n\t    this.s = s;\n\t    this.l = l;\n\t  }\n\t  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = function(h, c, l) {\n\t    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n\t  };\n\t  function d3_hcl(h, c, l) {\n\t    return new d3_Hcl(h, c, l);\n\t  }\n\t  function d3_Hcl(h, c, l) {\n\t    this.h = h;\n\t    this.c = c;\n\t    this.l = l;\n\t  }\n\t  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = function(l, a, b) {\n\t    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n\t  };\n\t  function d3_lab(l, a, b) {\n\t    return new d3_Lab(l, a, b);\n\t  }\n\t  function d3_Lab(l, a, b) {\n\t    this.l = l;\n\t    this.a = a;\n\t    this.b = b;\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = function(r, g, b) {\n\t    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n\t  };\n\t  function d3_rgbNumber(value) {\n\t    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  function d3_rgb(r, g, b) {\n\t    return new d3_Rgb(r, g, b);\n\t  }\n\t  function d3_Rgb(r, g, b) {\n\t    this.r = r;\n\t    this.g = g;\n\t    this.b = b;\n\t  }\n\t  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, name;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n\t    if (format != null && format.charAt(0) === \"#\") {\n\t      if (format.length === 4) {\n\t        r = format.charAt(1);\n\t        r += r;\n\t        g = format.charAt(2);\n\t        g += g;\n\t        b = format.charAt(3);\n\t        b += b;\n\t      } else if (format.length === 7) {\n\t        r = format.substring(1, 3);\n\t        g = format.substring(3, 5);\n\t        b = format.substring(5, 7);\n\t      }\n\t      r = parseInt(r, 16);\n\t      g = parseInt(g, 16);\n\t      b = parseInt(b, 16);\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.substring(j, I - k);\n\t        }\n\t        return text.substring(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && !(a = f(a, n++))) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  d3.format = function(specifier) {\n\t    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n\t    if (precision) precision = +precision.substring(1);\n\t    if (zfill || fill === \"0\" && align === \"=\") {\n\t      zfill = fill = \"0\";\n\t      align = \"=\";\n\t      if (comma) width -= Math.floor((width - 1) / 4);\n\t    }\n\t    switch (type) {\n\t     case \"n\":\n\t      comma = true;\n\t      type = \"g\";\n\t      break;\n\t\n\t     case \"%\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"f\";\n\t      break;\n\t\n\t     case \"p\":\n\t      scale = 100;\n\t      suffix = \"%\";\n\t      type = \"r\";\n\t      break;\n\t\n\t     case \"b\":\n\t     case \"o\":\n\t     case \"x\":\n\t     case \"X\":\n\t      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\t\n\t     case \"c\":\n\t     case \"d\":\n\t      integer = true;\n\t      precision = 0;\n\t      break;\n\t\n\t     case \"s\":\n\t      scale = -1;\n\t      type = \"r\";\n\t      break;\n\t    }\n\t    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n\t    if (type == \"r\" && !precision) type = \"g\";\n\t    if (precision != null) {\n\t      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t    }\n\t    type = d3_format_types.get(type) || d3_format_typeDefault;\n\t    var zcomma = zfill && comma;\n\t    return function(value) {\n\t      if (integer && value % 1) return \"\";\n\t      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n\t      if (scale < 0) {\n\t        var prefix = d3.formatPrefix(value, precision);\n\t        value = prefix.scale(value);\n\t        suffix = prefix.symbol;\n\t      } else {\n\t        value *= scale;\n\t      }\n\t      value = type(value, precision);\n\t      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n\t      if (!zfill && comma) before = d3_format_group(before);\n\t      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t      if (zcomma) before = d3_format_group(padding + before);\n\t      negative += symbol;\n\t      value = before + after;\n\t      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n\t    };\n\t  };\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_format_group = d3_identity;\n\t  if (d3_format_grouping) {\n\t    var d3_format_groupingLength = d3_format_grouping.length;\n\t    d3_format_group = function(value) {\n\t      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n\t      while (i > 0 && g > 0) {\n\t        t.push(value.substring(i -= g, i + g));\n\t        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n\t      }\n\t      return t.reverse().join(d3_format_thousandsSeparator);\n\t    };\n\t  }\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t          listener.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          listener.polygonEnd();\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          listener.lineStart();\n\t          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t          listener.lineEnd();\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n\t        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function isLeft(a, b, c) {\n\t        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return projection.rotate([ 0, 0 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n\t      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n\t      vertices = []; i < n; ++i) {\n\t        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n\t      }\n\t      for (i = 1; i < n; ++i) {\n\t        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        if (i === h) continue;\n\t        y1 = vertices[i][1] - vertices[h][1];\n\t        x1 = vertices[i][0] - vertices[h][0];\n\t        points.push({\n\t          angle: Math.atan2(y1, x1),\n\t          index: i\n\t        });\n\t      }\n\t      points.sort(function(a, b) {\n\t        return a.angle - b.angle;\n\t      });\n\t      a = points[0].angle;\n\t      v = points[0].index;\n\t      u = 0;\n\t      for (i = 1; i < plen; ++i) {\n\t        j = points[i].index;\n\t        if (a == points[i].angle) {\n\t          x1 = vertices[v][0] - vertices[h][0];\n\t          y1 = vertices[v][1] - vertices[h][1];\n\t          x2 = vertices[j][0] - vertices[h][0];\n\t          y2 = vertices[j][1] - vertices[h][1];\n\t          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n\t            points[i].index = -1;\n\t            continue;\n\t          } else {\n\t            points[u].index = -1;\n\t          }\n\t        }\n\t        a = points[i].angle;\n\t        u = i;\n\t        v = j;\n\t      }\n\t      stack.push(h);\n\t      for (i = 0, j = 0; i < 2; ++j) {\n\t        if (points[j].index > -1) {\n\t          stack.push(points[j].index);\n\t          i++;\n\t        }\n\t      }\n\t      sp = stack.length;\n\t      for (;j < plen; ++j) {\n\t        if (points[j].index < 0) continue;\n\t        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n\t          --sp;\n\t        }\n\t        stack[sp++] = points[j].index;\n\t      }\n\t      var poly = [];\n\t      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n\t      return poly;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullCCW(i1, i2, i3, v) {\n\t    var t, a, b, c, d, e, f;\n\t    t = v[i1];\n\t    a = t[0];\n\t    b = t[1];\n\t    t = v[i2];\n\t    c = t[0];\n\t    d = t[1];\n\t    t = v[i3];\n\t    e = t[0];\n\t    f = t[1];\n\t    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = sx; else x2 = sx;\n\t        if (bottom) y1 = sy; else y2 = sy;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    b -= a = +a;\n\t    return function(t) {\n\t      return a + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n\t    a = a + \"\", b = b + \"\";\n\t    d3_interpolate_number.lastIndex = 0;\n\t    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n\t      if (m.index) s.push(b.substring(s0, s1 = m.index));\n\t      q.push({\n\t        i: s.length,\n\t        x: m[0]\n\t      });\n\t      s.push(null);\n\t      s0 = d3_interpolate_number.lastIndex;\n\t    }\n\t    if (s0 < b.length) s.push(b.substring(s0));\n\t    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n\t      o = q[i];\n\t      if (o.x == m[0]) {\n\t        if (o.i) {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i - 1] += o.x;\n\t            s.splice(o.i, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          } else {\n\t            s[o.i - 1] += o.x + s[o.i + 1];\n\t            s.splice(o.i, 2);\n\t            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n\t          }\n\t        } else {\n\t          if (s[o.i + 1] == null) {\n\t            s[o.i] = o.x;\n\t          } else {\n\t            s[o.i] = o.x + s[o.i + 1];\n\t            s.splice(o.i + 1, 1);\n\t            for (j = i + 1; j < n; ++j) q[j].i--;\n\t          }\n\t        }\n\t        q.splice(i, 1);\n\t        n--;\n\t        i--;\n\t      } else {\n\t        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n\t      }\n\t    }\n\t    while (i < n) {\n\t      o = q.pop();\n\t      if (s[o.i + 1] == null) {\n\t        s[o.i] = o.x;\n\t      } else {\n\t        s[o.i] = o.x + s[o.i + 1];\n\t        s.splice(o.i + 1, 1);\n\t      }\n\t      n--;\n\t    }\n\t    if (s.length === 1) {\n\t      return s[0] == null ? (o = q[0].x, function(t) {\n\t        return o(t) + \"\";\n\t      }) : function() {\n\t        return b;\n\t      };\n\t    }\n\t    return function(t) {\n\t      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return (x - a) * b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = b - (a = +a) ? 1 / (b - a) : 0;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) * b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n\t          if ((x2 - x1) * dn < theta) {\n\t            var k = quad.charge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t            return true;\n\t          }\n\t          if (quad.point && isFinite(dn)) {\n\t            var k = quad.pointCharge * dn * dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return theta;\n\t      theta = +x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n\t        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function recurse(node, depth, nodes) {\n\t      var childs = children.call(hierarchy, node, depth);\n\t      node.depth = depth;\n\t      nodes.push(node);\n\t      if (childs && (n = childs.length)) {\n\t        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n\t        while (++i < n) {\n\t          d = c[i] = recurse(childs[i], j, nodes);\n\t          d.parent = node;\n\t          v += d.value;\n\t        }\n\t        if (sort) c.sort(sort);\n\t        if (value) node.value = v;\n\t      } else {\n\t        delete node.children;\n\t        if (value) {\n\t          node.value = +value.call(hierarchy, node, depth) || 0;\n\t        }\n\t      }\n\t      return node;\n\t    }\n\t    function revalue(node, depth) {\n\t      var children = node.children, v = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, j = depth + 1;\n\t        while (++i < n) v += revalue(children[i], j);\n\t      } else if (value) {\n\t        v = +value.call(hierarchy, node, depth) || 0;\n\t      }\n\t      if (value) node.value = v;\n\t      return v;\n\t    }\n\t    function hierarchy(d) {\n\t      var nodes = [];\n\t      recurse(d, 0, nodes);\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      revalue(root, 0);\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n\t    function pie(data) {\n\t      var values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      });\n\t      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n\t      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n\t      var index = d3.range(data.length);\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      var arcs = [];\n\t      index.forEach(function(i) {\n\t        var d;\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: d = values[i],\n\t          startAngle: a,\n\t          endAngle: a += d * k\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return pie;\n\t    };\n\t    pie.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(x) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = x;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(x) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = x;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var n = series.length, m = series[0].length, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n\t      function firstWalk(node, previousSibling) {\n\t        var children = node.children, layout = node._tree;\n\t        if (children && (n = children.length)) {\n\t          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n\t          while (++i < n) {\n\t            child = children[i];\n\t            firstWalk(child, previousChild);\n\t            ancestor = apportion(child, previousChild, ancestor);\n\t            previousChild = child;\n\t          }\n\t          d3_layout_treeShift(node);\n\t          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t            layout.mod = layout.prelim - midpoint;\n\t          } else {\n\t            layout.prelim = midpoint;\n\t          }\n\t        } else {\n\t          if (previousSibling) {\n\t            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n\t          }\n\t        }\n\t      }\n\t      function secondWalk(node, x) {\n\t        node.x = node._tree.prelim + x;\n\t        var children = node.children;\n\t        if (children && (n = children.length)) {\n\t          var i = -1, n;\n\t          x += node._tree.mod;\n\t          while (++i < n) {\n\t            secondWalk(children[i], x);\n\t          }\n\t        }\n\t      }\n\t      function apportion(node, previousSibling, ancestor) {\n\t        if (previousSibling) {\n\t          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n\t          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t            vom = d3_layout_treeLeft(vom);\n\t            vop = d3_layout_treeRight(vop);\n\t            vop._tree.ancestor = node;\n\t            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n\t            if (shift > 0) {\n\t              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n\t              sip += shift;\n\t              sop += shift;\n\t            }\n\t            sim += vim._tree.mod;\n\t            sip += vip._tree.mod;\n\t            som += vom._tree.mod;\n\t            sop += vop._tree.mod;\n\t          }\n\t          if (vim && !d3_layout_treeRight(vop)) {\n\t            vop._tree.thread = vim;\n\t            vop._tree.mod += sim - sop;\n\t          }\n\t          if (vip && !d3_layout_treeLeft(vom)) {\n\t            vom._tree.thread = vip;\n\t            vom._tree.mod += sip - som;\n\t            ancestor = node;\n\t          }\n\t        }\n\t        return ancestor;\n\t      }\n\t      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n\t        node._tree = {\n\t          ancestor: node,\n\t          prelim: 0,\n\t          mod: 0,\n\t          change: 0,\n\t          shift: 0,\n\t          number: previousSibling ? previousSibling._tree.number + 1 : 0\n\t        };\n\t      });\n\t      firstWalk(root);\n\t      secondWalk(root, -root._tree.prelim);\n\t      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x *= size[0];\n\t        node.y = node.depth * size[1];\n\t        delete node._tree;\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = node.depth / y1 * size[1];\n\t        delete node._tree;\n\t      });\n\t      return nodes;\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? children[0] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n\t  }\n\t  function d3_layout_treeSearch(node, compare) {\n\t    var children = node.children;\n\t    if (children && (n = children.length)) {\n\t      var child, n, i = -1;\n\t      while (++i < n) {\n\t        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n\t          node = child;\n\t        }\n\t      }\n\t    }\n\t    return node;\n\t  }\n\t  function d3_layout_treeRightmost(a, b) {\n\t    return a.x - b.x;\n\t  }\n\t  function d3_layout_treeLeftmost(a, b) {\n\t    return b.x - a.x;\n\t  }\n\t  function d3_layout_treeDeepest(a, b) {\n\t    return a.depth - b.depth;\n\t  }\n\t  function d3_layout_treeVisitAfter(node, callback) {\n\t    function visit(node, previousSibling) {\n\t      var children = node.children;\n\t      if (children && (n = children.length)) {\n\t        var child, previousChild = null, i = -1, n;\n\t        while (++i < n) {\n\t          child = children[i];\n\t          visit(child, previousChild);\n\t          previousChild = child;\n\t        }\n\t      }\n\t      callback(node, previousSibling);\n\t    }\n\t    visit(node, null);\n\t  }\n\t  function d3_layout_treeShift(node) {\n\t    var shift = 0, change = 0, children = node.children, i = children.length, child;\n\t    while (--i >= 0) {\n\t      child = children[i]._tree;\n\t      child.prelim += shift;\n\t      child.mod += shift;\n\t      shift += child.shift + (change += child.change);\n\t    }\n\t  }\n\t  function d3_layout_treeMove(ancestor, node, shift) {\n\t    ancestor = ancestor._tree;\n\t    node = node._tree;\n\t    var change = shift / (node.number - ancestor.number);\n\t    ancestor.change += change;\n\t    node.change -= change;\n\t    node.shift += shift;\n\t    node.prelim += shift;\n\t    node.mod += shift;\n\t  }\n\t  function d3_layout_treeAncestor(vim, node, ancestor) {\n\t    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_treeVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_treeVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_treeVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n\t      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n\t    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n\t      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n\t      range = steps(start + Math.round(error / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.filter(function(d) {\n\t        return !isNaN(d);\n\t      }).sort(d3.ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function arc() {\n\t      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n\t      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n\t      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] + d3_svg_arcOffset;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  function d3_transition(groups, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection) {\n\t    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node.__transition__[id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node.__transition__[id].tween.remove(name);\n\t    } : function(node) {\n\t      node.__transition__[id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node.__transition__[id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id;\n\t    if (arguments.length < 1) return this.node().__transition__[id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node.__transition__[id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node.__transition__[id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node.__transition__[id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      d3_transitionInheritId = id;\n\t      d3_selection_each(this, function(node, i, j) {\n\t        d3_transitionInherit = node.__transition__[id];\n\t        type.call(node, node.__data__, i, j);\n\t      });\n\t      d3_transitionInherit = inherit;\n\t      d3_transitionInheritId = inheritId;\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node.__transition__[id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = Object.create(node.__transition__[id0]);\n\t          transition.delay += transition.duration;\n\t          d3_transitionNode(node, i, id1, transition);\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, id1);\n\t  };\n\t  function d3_transitionNode(node, i, id, inherit) {\n\t    var lock = node.__transition__ || (node.__transition__ = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        ease: inherit.ease,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration\n\t      };\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, d, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, d, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return stop();\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, d, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node.__transition__;\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n\t        switch (orient) {\n\t         case \"bottom\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", innerTickSize);\n\t            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n\t            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"top\":\n\t          {\n\t            tickTransform = d3_svg_axisX;\n\t            lineEnter.attr(\"y2\", -innerTickSize);\n\t            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n\t            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n\t            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"left\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", -innerTickSize);\n\t            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n\t            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n\t            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n\t            break;\n\t          }\n\t\n\t         case \"right\":\n\t          {\n\t            tickTransform = d3_svg_axisY;\n\t            lineEnter.attr(\"x2\", innerTickSize);\n\t            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n\t            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n\t            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n\t            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n\t            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n\t            break;\n\t          }\n\t        }\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1);\n\t        }\n\t        tickEnter.call(tickTransform, scale0);\n\t        tickUpdate.call(tickTransform, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(\" + x(d) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y) {\n\t    selection.attr(\"transform\", function(d) {\n\t      return \"translate(0,\" + y(d) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n\t  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  d3_time_daySymbols.forEach(function(day, i) {\n\t    day = day.toLowerCase();\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  d3_time.format = d3_time_format;\n\t  function d3_time_format(template) {\n\t    var n = template.length;\n\t    function format(date) {\n\t      var string = [], i = -1, j = 0, c, p, f;\n\t      while (++i < n) {\n\t        if (template.charCodeAt(i) === 37) {\n\t          string.push(template.substring(j, i));\n\t          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t      string.push(template.substring(j, i));\n\t      return string.join(\"\");\n\t    }\n\t    format.parse = function(string) {\n\t      var d = {\n\t        y: 1900,\n\t        m: 0,\n\t        d: 1,\n\t        H: 0,\n\t        M: 0,\n\t        S: 0,\n\t        L: 0,\n\t        Z: null\n\t      }, i = d3_time_parse(d, template, string, 0);\n\t      if (i != string.length) return null;\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t        date.setFullYear(d.y, 0, 1);\n\t        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t      } else date.setFullYear(d.y, d.m, d.d);\n\t      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n\t      return localZ ? date._ : date;\n\t    };\n\t    format.toString = function() {\n\t      return template;\n\t    };\n\t    return format;\n\t  }\n\t  function d3_time_parse(date, template, string, j) {\n\t    var c, p, t, i = 0, n = template.length, m = string.length;\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = template.charCodeAt(i++);\n\t      if (c === 37) {\n\t        t = template.charAt(i++);\n\t        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t        if (!p || (j = p(date, string, j)) < 0) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  };\n\t  var d3_time_formats = {\n\t    a: function(d) {\n\t      return d3_time_dayAbbreviations[d.getDay()];\n\t    },\n\t    A: function(d) {\n\t      return d3_time_days[d.getDay()];\n\t    },\n\t    b: function(d) {\n\t      return d3_time_monthAbbreviations[d.getMonth()];\n\t    },\n\t    B: function(d) {\n\t      return d3_time_months[d.getMonth()];\n\t    },\n\t    c: d3_time_format(d3_time_formatDateTime),\n\t    d: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    e: function(d, p) {\n\t      return d3_time_formatPad(d.getDate(), p, 2);\n\t    },\n\t    H: function(d, p) {\n\t      return d3_time_formatPad(d.getHours(), p, 2);\n\t    },\n\t    I: function(d, p) {\n\t      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t    },\n\t    j: function(d, p) {\n\t      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t    },\n\t    L: function(d, p) {\n\t      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t    },\n\t    m: function(d, p) {\n\t      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t    },\n\t    M: function(d, p) {\n\t      return d3_time_formatPad(d.getMinutes(), p, 2);\n\t    },\n\t    p: function(d) {\n\t      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n\t    },\n\t    S: function(d, p) {\n\t      return d3_time_formatPad(d.getSeconds(), p, 2);\n\t    },\n\t    U: function(d, p) {\n\t      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t    },\n\t    w: function(d) {\n\t      return d.getDay();\n\t    },\n\t    W: function(d, p) {\n\t      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t    },\n\t    x: d3_time_format(d3_time_formatDate),\n\t    X: d3_time_format(d3_time_formatTime),\n\t    y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t    },\n\t    Y: function(d, p) {\n\t      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t    },\n\t    Z: d3_time_zone,\n\t    \"%\": function() {\n\t      return \"%\";\n\t    }\n\t  };\n\t  var d3_time_parsers = {\n\t    a: d3_time_parseWeekdayAbbrev,\n\t    A: d3_time_parseWeekday,\n\t    b: d3_time_parseMonthAbbrev,\n\t    B: d3_time_parseMonth,\n\t    c: d3_time_parseLocaleFull,\n\t    d: d3_time_parseDay,\n\t    e: d3_time_parseDay,\n\t    H: d3_time_parseHour24,\n\t    I: d3_time_parseHour24,\n\t    j: d3_time_parseDayOfYear,\n\t    L: d3_time_parseMilliseconds,\n\t    m: d3_time_parseMonthNumber,\n\t    M: d3_time_parseMinutes,\n\t    p: d3_time_parseAmPm,\n\t    S: d3_time_parseSeconds,\n\t    U: d3_time_parseWeekNumberSunday,\n\t    w: d3_time_parseWeekdayNumber,\n\t    W: d3_time_parseWeekNumberMonday,\n\t    x: d3_time_parseLocaleDate,\n\t    X: d3_time_parseLocaleTime,\n\t    y: d3_time_parseYear,\n\t    Y: d3_time_parseFullYear,\n\t    Z: d3_time_parseZone,\n\t    \"%\": d3_time_parseLiteralPercent\n\t  };\n\t  function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t    d3_time_dayAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekday(date, string, i) {\n\t    d3_time_dayRe.lastIndex = 0;\n\t    var n = d3_time_dayRe.exec(string.substring(i));\n\t    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonthAbbrev(date, string, i) {\n\t    d3_time_monthAbbrevRe.lastIndex = 0;\n\t    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMonth(date, string, i) {\n\t    d3_time_monthRe.lastIndex = 0;\n\t    var n = d3_time_monthRe.exec(string.substring(i));\n\t    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseLocaleFull(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleDate(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t  }\n\t  function d3_time_parseLocaleTime(date, string, i) {\n\t    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  var d3_time_numberRe = /^\\s*\\d+/;\n\t  function d3_time_parseAmPm(date, string, i) {\n\t    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n\t    return n == null ? -1 : (date.p = n, i);\n\t  }\n\t  var d3_time_amPmLookup = d3.map({\n\t    am: 0,\n\t    pm: 1\n\t  });\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  d3_time_format.utc = d3_time_formatUtc;\n\t  function d3_time_formatUtc(template) {\n\t    var local = d3_time_format(template);\n\t    function format(date) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date();\n\t        utc._ = date;\n\t        return local(utc);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    format.parse = function(string) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var date = local.parse(string);\n\t        return date && date._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t    format.toString = local.toString;\n\t    return format;\n\t  }\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  function d3_time_scaleFormat(formats) {\n\t    return function(date) {\n\t      var i = formats.length - 1, f = formats[i];\n\t      while (!f[1](date)) f = formats[--i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n\t    return d.getMonth();\n\t  } ], [ d3_time_format(\"%b %d\"), function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%a %d\"), function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ d3_time_format(\"%I %p\"), function(d) {\n\t    return d.getHours();\n\t  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n\t    return d.getMinutes();\n\t  } ], [ d3_time_format(\":%S\"), function(d) {\n\t    return d.getSeconds();\n\t  } ], [ d3_time_format(\".%L\"), function(d) {\n\t    return d.getMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ] ];\n\t  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n\t  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  return d3;\n\t}();\n\n/***/ },\n\n/***/ 230:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar topojson = module.exports = __webpack_require__(231);\n\ttopojson.topology = __webpack_require__(232);\n\ttopojson.simplify = __webpack_require__(255);\n\ttopojson.clockwise = __webpack_require__(256);\n\ttopojson.filter = __webpack_require__(257);\n\ttopojson.prune = __webpack_require__(258);\n\ttopojson.bind = __webpack_require__(259);\n\ttopojson.stitch = __webpack_require__(234);\n\ttopojson.scale = __webpack_require__(260);\n\n\n/***/ },\n\n/***/ 231:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var topojson = {\n\t    version: \"1.6.9\",\n\t    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n\t    meshArcs: meshArcs,\n\t    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n\t    mergeArcs: mergeArcs,\n\t    feature: featureOrCollection,\n\t    neighbors: neighbors,\n\t    presimplify: presimplify\n\t  };\n\t\n\t  function stitchArcs(topology, arcs) {\n\t    var stitchedArcs = {},\n\t        fragmentByStart = {},\n\t        fragmentByEnd = {},\n\t        fragments = [],\n\t        emptyIndex = -1;\n\t\n\t    // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t    arcs.forEach(function(i, j) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t      }\n\t    });\n\t\n\t    arcs.forEach(function(i) {\n\t      var e = ends(i),\n\t          start = e[0],\n\t          end = e[1],\n\t          f, g;\n\t\n\t      if (f = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[f.end];\n\t        f.push(i);\n\t        f.end = end;\n\t        if (g = fragmentByStart[end]) {\n\t          delete fragmentByStart[g.start];\n\t          var fg = g === f ? f : f.concat(g);\n\t          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else if (f = fragmentByStart[end]) {\n\t        delete fragmentByStart[f.start];\n\t        f.unshift(i);\n\t        f.start = start;\n\t        if (g = fragmentByEnd[start]) {\n\t          delete fragmentByEnd[g.end];\n\t          var gf = g === f ? f : g.concat(f);\n\t          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t        } else {\n\t          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t        }\n\t      } else {\n\t        f = [i];\n\t        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t      }\n\t    });\n\t\n\t    function ends(i) {\n\t      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t      else p1 = arc[arc.length - 1];\n\t      return i < 0 ? [p1, p0] : [p0, p1];\n\t    }\n\t\n\t    function flush(fragmentByEnd, fragmentByStart) {\n\t      for (var k in fragmentByEnd) {\n\t        var f = fragmentByEnd[k];\n\t        delete fragmentByStart[f.start];\n\t        delete f.start;\n\t        delete f.end;\n\t        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t        fragments.push(f);\n\t      }\n\t    }\n\t\n\t    flush(fragmentByEnd, fragmentByStart);\n\t    flush(fragmentByStart, fragmentByEnd);\n\t    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t    return fragments;\n\t  }\n\t\n\t  function meshArcs(topology, o, filter) {\n\t    var arcs = [];\n\t\n\t    if (arguments.length > 1) {\n\t      var geomsByArc = [],\n\t          geom;\n\t\n\t      function arc(i) {\n\t        var j = i < 0 ? ~i : i;\n\t        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t      }\n\t\n\t      function line(arcs) {\n\t        arcs.forEach(arc);\n\t      }\n\t\n\t      function polygon(arcs) {\n\t        arcs.forEach(line);\n\t      }\n\t\n\t      function geometry(o) {\n\t        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t      }\n\t\n\t      var geometryType = {\n\t        LineString: line,\n\t        MultiLineString: polygon,\n\t        Polygon: polygon,\n\t        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t      };\n\t\n\t      geometry(o);\n\t\n\t      geomsByArc.forEach(arguments.length < 3\n\t          ? function(geoms) { arcs.push(geoms[0].i); }\n\t          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t    } else {\n\t      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t    }\n\t\n\t    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t  }\n\t\n\t  function mergeArcs(topology, objects) {\n\t    var polygonsByArc = {},\n\t        polygons = [],\n\t        components = [];\n\t\n\t    objects.forEach(function(o) {\n\t      if (o.type === \"Polygon\") register(o.arcs);\n\t      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t    });\n\t\n\t    function register(polygon) {\n\t      polygon.forEach(function(ring) {\n\t        ring.forEach(function(arc) {\n\t          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t        });\n\t      });\n\t      polygons.push(polygon);\n\t    }\n\t\n\t    function exterior(ring) {\n\t      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n\t    }\n\t\n\t    polygons.forEach(function(polygon) {\n\t      if (!polygon._) {\n\t        var component = [],\n\t            neighbors = [polygon];\n\t        polygon._ = 1;\n\t        components.push(component);\n\t        while (polygon = neighbors.pop()) {\n\t          component.push(polygon);\n\t          polygon.forEach(function(ring) {\n\t            ring.forEach(function(arc) {\n\t              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t                if (!polygon._) {\n\t                  polygon._ = 1;\n\t                  neighbors.push(polygon);\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t      }\n\t    });\n\t\n\t    polygons.forEach(function(polygon) {\n\t      delete polygon._;\n\t    });\n\t\n\t    return {\n\t      type: \"MultiPolygon\",\n\t      arcs: components.map(function(polygons) {\n\t        var arcs = [];\n\t\n\t        // Extract the exterior (unique) arcs.\n\t        polygons.forEach(function(polygon) {\n\t          polygon.forEach(function(ring) {\n\t            ring.forEach(function(arc) {\n\t              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t                arcs.push(arc);\n\t              }\n\t            });\n\t          });\n\t        });\n\t\n\t        // Stitch the arcs into one or more rings.\n\t        arcs = stitchArcs(topology, arcs);\n\t\n\t        // If more than one ring is returned,\n\t        // at most one of these rings can be the exterior;\n\t        // this exterior ring has the same winding order\n\t        // as any exterior ring in the original polygons.\n\t        if ((n = arcs.length) > 1) {\n\t          var sgn = exterior(polygons[0][0]);\n\t          for (var i = 0, t; i < n; ++i) {\n\t            if (sgn === exterior(arcs[i])) {\n\t              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        return arcs;\n\t      })\n\t    };\n\t  }\n\t\n\t  function featureOrCollection(topology, o) {\n\t    return o.type === \"GeometryCollection\" ? {\n\t      type: \"FeatureCollection\",\n\t      features: o.geometries.map(function(o) { return feature(topology, o); })\n\t    } : feature(topology, o);\n\t  }\n\t\n\t  function feature(topology, o) {\n\t    var f = {\n\t      type: \"Feature\",\n\t      id: o.id,\n\t      properties: o.properties || {},\n\t      geometry: object(topology, o)\n\t    };\n\t    if (o.id == null) delete f.id;\n\t    return f;\n\t  }\n\t\n\t  function object(topology, o) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        arcs = topology.arcs;\n\t\n\t    function arc(i, points) {\n\t      if (points.length) points.pop();\n\t      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t        points.push(p = a[k].slice());\n\t        absolute(p, k);\n\t      }\n\t      if (i < 0) reverse(points, n);\n\t    }\n\t\n\t    function point(p) {\n\t      p = p.slice();\n\t      absolute(p, 0);\n\t      return p;\n\t    }\n\t\n\t    function line(arcs) {\n\t      var points = [];\n\t      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t      if (points.length < 2) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function ring(arcs) {\n\t      var points = line(arcs);\n\t      while (points.length < 4) points.push(points[0].slice());\n\t      return points;\n\t    }\n\t\n\t    function polygon(arcs) {\n\t      return arcs.map(ring);\n\t    }\n\t\n\t    function geometry(o) {\n\t      var t = o.type;\n\t      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t          : null;\n\t    }\n\t\n\t    var geometryType = {\n\t      Point: function(o) { return point(o.coordinates); },\n\t      MultiPoint: function(o) { return o.coordinates.map(point); },\n\t      LineString: function(o) { return line(o.arcs); },\n\t      MultiLineString: function(o) { return o.arcs.map(line); },\n\t      Polygon: function(o) { return polygon(o.arcs); },\n\t      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t    };\n\t\n\t    return geometry(o);\n\t  }\n\t\n\t  function reverse(array, n) {\n\t    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t  }\n\t\n\t  function bisect(a, x) {\n\t    var lo = 0, hi = a.length;\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (a[mid] < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  function neighbors(objects) {\n\t    var indexesByArc = {}, // arc index -> array of object indexes\n\t        neighbors = objects.map(function() { return []; });\n\t\n\t    function line(arcs, i) {\n\t      arcs.forEach(function(a) {\n\t        if (a < 0) a = ~a;\n\t        var o = indexesByArc[a];\n\t        if (o) o.push(i);\n\t        else indexesByArc[a] = [i];\n\t      });\n\t    }\n\t\n\t    function polygon(arcs, i) {\n\t      arcs.forEach(function(arc) { line(arc, i); });\n\t    }\n\t\n\t    function geometry(o, i) {\n\t      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t    }\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t    };\n\t\n\t    objects.forEach(geometry);\n\t\n\t    for (var i in indexesByArc) {\n\t      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t        for (var k = j + 1; k < m; ++k) {\n\t          var ij = indexes[j], ik = indexes[k], n;\n\t          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t        }\n\t      }\n\t    }\n\t\n\t    return neighbors;\n\t  }\n\t\n\t  function presimplify(topology, triangleArea) {\n\t    var absolute = transformAbsolute(topology.transform),\n\t        relative = transformRelative(topology.transform),\n\t        heap = minAreaHeap(),\n\t        maxArea = 0,\n\t        triangle;\n\t\n\t    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      var triangles = [];\n\t\n\t      arc.forEach(absolute);\n\t\n\t      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n\t        triangle = arc.slice(i - 1, i + 2);\n\t        triangle[1][2] = triangleArea(triangle);\n\t        triangles.push(triangle);\n\t        heap.push(triangle);\n\t      }\n\t\n\t      // Always keep the arc endpoints!\n\t      arc[0][2] = arc[n][2] = Infinity;\n\t\n\t      for (var i = 0, n = triangles.length; i < n; ++i) {\n\t        triangle = triangles[i];\n\t        triangle.previous = triangles[i - 1];\n\t        triangle.next = triangles[i + 1];\n\t      }\n\t    });\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the area of the current point is less than that of the previous point\n\t      // to be eliminated, use the latter's area instead. This ensures that the\n\t      // current point cannot be eliminated without eliminating previously-\n\t      // eliminated points.\n\t      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t      else maxArea = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    topology.arcs.forEach(function(arc) {\n\t      arc.forEach(relative);\n\t    });\n\t\n\t    function update(triangle) {\n\t      heap.remove(triangle);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    return topology;\n\t  };\n\t\n\t  function cartesianRingArea(ring) {\n\t    var i = -1,\n\t        n = ring.length,\n\t        a,\n\t        b = ring[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = ring[i];\n\t      area += a[0] * b[1] - a[1] * b[0];\n\t    }\n\t\n\t    return area * .5;\n\t  }\n\t\n\t  function cartesianTriangleArea(triangle) {\n\t    var a = triangle[0], b = triangle[1], c = triangle[2];\n\t    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t  }\n\t\n\t  function compareArea(a, b) {\n\t    return a[1][2] - b[1][2];\n\t  }\n\t\n\t  function minAreaHeap() {\n\t    var heap = {},\n\t        array = [],\n\t        size = 0;\n\t\n\t    heap.push = function(object) {\n\t      up(array[object._ = size] = object, size++);\n\t      return size;\n\t    };\n\t\n\t    heap.pop = function() {\n\t      if (size <= 0) return;\n\t      var removed = array[0], object;\n\t      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t      return removed;\n\t    };\n\t\n\t    heap.remove = function(removed) {\n\t      var i = removed._, object;\n\t      if (array[i] !== removed) return; // invalid request\n\t      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t      return i;\n\t    };\n\t\n\t    function up(object, i) {\n\t      while (i > 0) {\n\t        var j = ((i + 1) >> 1) - 1,\n\t            parent = array[j];\n\t        if (compareArea(object, parent) >= 0) break;\n\t        array[parent._ = i] = parent;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    function down(object, i) {\n\t      while (true) {\n\t        var r = (i + 1) << 1,\n\t            l = r - 1,\n\t            j = i,\n\t            child = array[j];\n\t        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t        if (j === i) break;\n\t        array[child._ = i] = child;\n\t        array[object._ = i = j] = object;\n\t      }\n\t    }\n\t\n\t    return heap;\n\t  }\n\t\n\t  function transformAbsolute(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      point[0] = (x0 += point[0]) * kx + dx;\n\t      point[1] = (y0 += point[1]) * ky + dy;\n\t    };\n\t  }\n\t\n\t  function transformRelative(transform) {\n\t    if (!transform) return noop;\n\t    var x0,\n\t        y0,\n\t        kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t    return function(point, i) {\n\t      if (!i) x0 = y0 = 0;\n\t      var x1 = (point[0] - dx) / kx | 0,\n\t          y1 = (point[1] - dy) / ky | 0;\n\t      point[0] = x1 - x0;\n\t      point[1] = y1 - y0;\n\t      x0 = x1;\n\t      y0 = y1;\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (topojson), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n\t  else this.topojson = topojson;\n\t}();\n\n\n/***/ },\n\n/***/ 232:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar type = __webpack_require__(233),\n\t    stitch = __webpack_require__(234),\n\t    systems = __webpack_require__(235),\n\t    topologize = __webpack_require__(238),\n\t    delta = __webpack_require__(247),\n\t    geomify = __webpack_require__(248),\n\t    prequantize = __webpack_require__(249),\n\t    postquantize = __webpack_require__(251),\n\t    bounds = __webpack_require__(252),\n\t    computeId = __webpack_require__(253),\n\t    transformProperties = __webpack_require__(254);\n\t\n\tvar ε = 1e-6;\n\t\n\tmodule.exports = function(objects, options) {\n\t  var Q0 = 1e4, // precision of pre-quantization\n\t      Q1 = 1e4, // precision of post-quantization (must be divisor of Q0)\n\t      id = function(d) { return d.id; }, // function to compute object id\n\t      propertyTransform = function() {}, // function to transform properties\n\t      transform,\n\t      minimumArea = 0,\n\t      stitchPoles = true,\n\t      verbose = false,\n\t      system = null;\n\t\n\t  if (options)\n\t    \"verbose\" in options && (verbose = !!options[\"verbose\"]),\n\t    \"stitch-poles\" in options && (stitchPoles = !!options[\"stitch-poles\"]),\n\t    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]),\n\t    \"minimum-area\" in options && (minimumArea = +options[\"minimum-area\"]),\n\t    \"quantization\" in options && (Q0 = Q1 = +options[\"quantization\"]),\n\t    \"pre-quantization\" in options && (Q0 = +options[\"pre-quantization\"]),\n\t    \"post-quantization\" in options && (Q1 = +options[\"post-quantization\"]),\n\t    \"id\" in options && (id = options[\"id\"]),\n\t    \"property-transform\" in options && (propertyTransform = options[\"property-transform\"]);\n\t\n\t  if (Q0 / Q1 % 1) throw new Error(\"post-quantization is not a divisor of pre-quantization\");\n\t  if (Q0 && !Q1) throw new Error(\"post-quantization is required when input is already quantized\");\n\t\n\t  // Compute the new feature id and transform properties.\n\t  computeId(objects, id);\n\t  transformProperties(objects, propertyTransform);\n\t\n\t  // Convert to geometry objects.\n\t  geomify(objects);\n\t\n\t  // Compute initial bounding box.\n\t  var bbox = bounds(objects);\n\t\n\t  // For automatic coordinate system determination, consider the bounding box.\n\t  var oversize = bbox[0] < -180 - ε\n\t      || bbox[1] < -90 - ε\n\t      || bbox[2] > 180 + ε\n\t      || bbox[3] > 90 + ε;\n\t  if (!system) {\n\t    system = systems[oversize ? \"cartesian\" : \"spherical\"];\n\t    if (options) options[\"coordinate-system\"] = system.name;\n\t  }\n\t\n\t  if (system === systems.spherical) {\n\t    if (oversize) throw new Error(\"spherical coordinates outside of [±180°, ±90°]\");\n\t\n\t    // When near the spherical coordinate limits, clamp to nice round values.\n\t    // This avoids quantized coordinates that are slightly outside the limits.\n\t    if (bbox[0] < -180 + ε) bbox[0] = -180;\n\t    if (bbox[1] < -90 + ε) bbox[1] = -90;\n\t    if (bbox[2] > 180 - ε) bbox[2] = 180;\n\t    if (bbox[3] > 90 - ε) bbox[3] = 90;\n\t  }\n\t\n\t  if (verbose) {\n\t    console.warn(\"bounds: \" + bbox.join(\" \") + \" (\" + system.name + \")\");\n\t  }\n\t\n\t  // Pre-topology quantization.\n\t  if (Q0) {\n\t    transform = prequantize(objects, bbox, Q0, Q1);\n\t    if (verbose) {\n\t      console.warn(\"pre-quantization: \" + transform.scale.map(function(k) { return system.formatDistance(k); }).join(\" \"));\n\t    }\n\t  }\n\t\n\t  // Remove any antimeridian cuts and restitch.\n\t  if (system === systems.spherical && stitchPoles) {\n\t    stitch(objects, transform);\n\t  }\n\t\n\t  // Compute the topology.\n\t  var topology = topologize(objects);\n\t  if (Q0) topology.transform = transform;\n\t  topology.bbox = bbox;\n\t  if (verbose) {\n\t    console.warn(\"topology: \" + topology.arcs.length + \" arcs, \" + topology.arcs.reduce(function(p, v) { return p + v.length; }, 0) + \" points\");\n\t  }\n\t\n\t  // Post-topology quantization.\n\t  if (Q1 && Q1 !== Q0) {\n\t    postquantize(topology, Q0, Q1);\n\t    transform = topology.transform;\n\t    if (verbose) {\n\t      console.warn(\"post-quantization: \" + transform.scale.map(function(k) { return system.formatDistance(k); }).join(\" \"));\n\t    }\n\t  }\n\t\n\t  // Convert to delta-encoding.\n\t  if (Q1) {\n\t    delta(topology);\n\t  }\n\t\n\t  return topology;\n\t};\n\n\n/***/ },\n\n/***/ 233:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(types) {\n\t  for (var type in typeDefaults) {\n\t    if (!(type in types)) {\n\t      types[type] = typeDefaults[type];\n\t    }\n\t  }\n\t  types.defaults = typeDefaults;\n\t  return types;\n\t};\n\t\n\tvar typeDefaults = {\n\t\n\t  Feature: function(feature) {\n\t    if (feature.geometry) this.geometry(feature.geometry);\n\t  },\n\t\n\t  FeatureCollection: function(collection) {\n\t    var features = collection.features, i = -1, n = features.length;\n\t    while (++i < n) this.Feature(features[i]);\n\t  },\n\t\n\t  GeometryCollection: function(collection) {\n\t    var geometries = collection.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) this.geometry(geometries[i]);\n\t  },\n\t\n\t  LineString: function(lineString) {\n\t    this.line(lineString.coordinates);\n\t  },\n\t\n\t  MultiLineString: function(multiLineString) {\n\t    var coordinates = multiLineString.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) this.line(coordinates[i]);\n\t  },\n\t\n\t  MultiPoint: function(multiPoint) {\n\t    var coordinates = multiPoint.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) this.point(coordinates[i]);\n\t  },\n\t\n\t  MultiPolygon: function(multiPolygon) {\n\t    var coordinates = multiPolygon.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) this.polygon(coordinates[i]);\n\t  },\n\t\n\t  Point: function(point) {\n\t    this.point(point.coordinates);\n\t  },\n\t\n\t  Polygon: function(polygon) {\n\t    this.polygon(polygon.coordinates);\n\t  },\n\t\n\t  object: function(object) {\n\t    return object == null ? null\n\t        : typeObjects.hasOwnProperty(object.type) ? this[object.type](object)\n\t        : this.geometry(object);\n\t  },\n\t\n\t  geometry: function(geometry) {\n\t    return geometry == null ? null\n\t        : typeGeometries.hasOwnProperty(geometry.type) ? this[geometry.type](geometry)\n\t        : null;\n\t  },\n\t\n\t  point: function() {},\n\t\n\t  line: function(coordinates) {\n\t    var i = -1, n = coordinates.length;\n\t    while (++i < n) this.point(coordinates[i]);\n\t  },\n\t\n\t  polygon: function(coordinates) {\n\t    var i = -1, n = coordinates.length;\n\t    while (++i < n) this.line(coordinates[i]);\n\t  }\n\t};\n\t\n\tvar typeGeometries = {\n\t  LineString: 1,\n\t  MultiLineString: 1,\n\t  MultiPoint: 1,\n\t  MultiPolygon: 1,\n\t  Point: 1,\n\t  Polygon: 1,\n\t  GeometryCollection: 1\n\t};\n\t\n\tvar typeObjects = {\n\t  Feature: 1,\n\t  FeatureCollection: 1\n\t};\n\n\n/***/ },\n\n/***/ 234:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar type = __webpack_require__(233);\n\t\n\tmodule.exports = function(objects, transform) {\n\t  var ε = 1e-2,\n\t      x0 = -180, x0e = x0 + ε,\n\t      x1 = 180, x1e = x1 - ε,\n\t      y0 = -90, y0e = y0 + ε,\n\t      y1 = 90, y1e = y1 - ε;\n\t\n\t  if (transform) {\n\t    var kx = transform.scale[0],\n\t        ky = transform.scale[1],\n\t        dx = transform.translate[0],\n\t        dy = transform.translate[1];\n\t\n\t    x0 = Math.round((x0 - dx) / kx);\n\t    x1 = Math.round((x1 - dx) / kx);\n\t    y0 = Math.round((y0 - dy) / ky);\n\t    y1 = Math.round((y1 - dy) / ky);\n\t    x0e = Math.round((x0e - dx) / kx);\n\t    x1e = Math.round((x1e - dx) / kx);\n\t    y0e = Math.round((y0e - dy) / ky);\n\t    y1e = Math.round((y1e - dy) / ky);\n\t  }\n\t\n\t  function normalizePoint(y) {\n\t    return y <= y0e ? [0, y0] // south pole\n\t        : y >= y1e ? [0, y1] // north pole\n\t        : [x0, y]; // antimeridian\n\t  }\n\t\n\t  function stitchPolygons(polygons) {\n\t    var fragments = [];\n\t\n\t    for (var p = 0, np = polygons.length; p < np; ++p) {\n\t      var polygon = polygons[p];\n\t\n\t      // For each ring, detect where it crosses the antimeridian or pole.\n\t      for (var j = 0, m = polygon.length; j < m; ++j) {\n\t        var ring = polygon[j];\n\t        ring.polygon = polygon;\n\t\n\t        // By default, assume that this ring doesn’t need any stitching.\n\t        fragments.push(ring);\n\t\n\t        for (var i = 0, n = ring.length; i < n; ++i) {\n\t          var point = ring[i],\n\t              x = point[0],\n\t              y = point[1];\n\t\n\t          // If this is an antimeridian or polar point…\n\t          if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n\t\n\t            // Advance through any antimeridian or polar points…\n\t            for (var k = i + 1; k < n; ++k) {\n\t              var pointk = ring[k],\n\t                  xk = pointk[0],\n\t                  yk = pointk[1];\n\t              if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n\t            }\n\t\n\t            // If this was just a single antimeridian or polar point,\n\t            // we don’t need to cut this ring into a fragment;\n\t            // we can just leave it as-is.\n\t            if (k === i + 1) continue;\n\t\n\t            // Otherwise, if this is not the first point in the ring,\n\t            // cut the current fragment so that it ends at the current point.\n\t            // The current point is also normalized for later joining.\n\t            if (i) {\n\t              var fragmentBefore = ring.slice(0, i + 1);\n\t              fragmentBefore.polygon = polygon;\n\t              fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n\t              fragments[fragments.length - 1] = fragmentBefore;\n\t            }\n\t\n\t            // If the ring started with an antimeridian fragment,\n\t            // we can ignore that fragment entirely.\n\t            else {\n\t              fragments.pop();\n\t            }\n\t\n\t            // If the remainder of the ring is an antimeridian fragment,\n\t            // move on to the next ring.\n\t            if (k >= n) break;\n\t\n\t            // Otherwise, add the remaining ring fragment and continue.\n\t            fragments.push(ring = ring.slice(k - 1));\n\t            ring[0] = normalizePoint(ring[0][1]);\n\t            ring.polygon = polygon;\n\t            i = -1;\n\t            n = ring.length;\n\t          }\n\t        }\n\t      }\n\t      polygon.length = 0;\n\t    }\n\t\n\t    // Now stitch the fragments back together into rings.\n\t    // To connect the fragments start-to-end, create a simple index by end.\n\t    var fragmentByStart = {},\n\t        fragmentByEnd = {};\n\t\n\t    // For each fragment…\n\t    for (var i = 0, n = fragments.length; i < n; ++i) {\n\t      var fragment = fragments[i],\n\t          start = fragment[0],\n\t          end = fragment[fragment.length - 1];\n\t\n\t      // If this fragment is closed, add it as a standalone ring.\n\t      if (start[0] === end[0] && start[1] === end[1]) {\n\t        fragment.polygon.push(fragment);\n\t        fragments[i] = null;\n\t        continue;\n\t      }\n\t\n\t      fragment.index = i;\n\t      fragmentByStart[start] = fragmentByEnd[end] = fragment;\n\t    }\n\t\n\t    // For each open fragment…\n\t    for (var i = 0; i < n; ++i) {\n\t      var fragment = fragments[i];\n\t      if (fragment) {\n\t\n\t        var start = fragment[0],\n\t            end = fragment[fragment.length - 1],\n\t            startFragment = fragmentByEnd[start],\n\t            endFragment = fragmentByStart[end];\n\t\n\t        delete fragmentByStart[start];\n\t        delete fragmentByEnd[end];\n\t\n\t        // If this fragment is closed, add it as a standalone ring.\n\t        if (start[0] === end[0] && start[1] === end[1]) {\n\t          fragment.polygon.push(fragment);\n\t          continue;\n\t        }\n\t\n\t        if (startFragment) {\n\t          delete fragmentByEnd[start];\n\t          delete fragmentByStart[startFragment[0]];\n\t          startFragment.pop(); // drop the shared coordinate\n\t          fragments[startFragment.index] = null;\n\t          fragment = startFragment.concat(fragment);\n\t          fragment.polygon = startFragment.polygon;\n\t\n\t          if (startFragment === endFragment) {\n\t            // Connect both ends to this single fragment to create a ring.\n\t            fragment.polygon.push(fragment);\n\t          } else {\n\t            fragment.index = n++;\n\t            fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n\t          }\n\t        } else if (endFragment) {\n\t          delete fragmentByStart[end];\n\t          delete fragmentByEnd[endFragment[endFragment.length - 1]];\n\t          fragment.pop(); // drop the shared coordinate\n\t          fragment = fragment.concat(endFragment);\n\t          fragment.polygon = endFragment.polygon;\n\t          fragment.index = n++;\n\t          fragments[endFragment.index] = null;\n\t          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n\t        } else {\n\t          fragment.push(fragment[0]); // close ring\n\t          fragment.polygon.push(fragment);\n\t        }\n\t      }\n\t    }\n\t    // TODO remove empty polygons.\n\t  }\n\t\n\t  var stitch = type({\n\t    Polygon: function(polygon) { stitchPolygons([polygon.coordinates]); },\n\t    MultiPolygon: function(multiPolygon) { stitchPolygons(multiPolygon.coordinates); }\n\t  });\n\t\n\t  for (var key in objects) {\n\t    stitch.object(objects[key]);\n\t  }\n\t};\n\n\n/***/ },\n\n/***/ 235:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  cartesian: __webpack_require__(236),\n\t  spherical: __webpack_require__(237)\n\t};\n\n\n/***/ },\n\n/***/ 236:\n/***/ function(module, exports) {\n\n\texports.name = \"cartesian\";\n\texports.formatDistance = formatDistance;\n\texports.ringArea = ringArea;\n\texports.absoluteArea = Math.abs;\n\texports.triangleArea = triangleArea;\n\texports.distance = distance;\n\t\n\tfunction formatDistance(d) {\n\t  return d.toString();\n\t}\n\t\n\tfunction ringArea(ring) {\n\t  var i = -1,\n\t      n = ring.length,\n\t      a,\n\t      b = ring[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = ring[i];\n\t    area += a[0] * b[1] - a[1] * b[0];\n\t  }\n\t\n\t  return area * .5;\n\t}\n\t\n\tfunction triangleArea(triangle) {\n\t  return Math.abs(\n\t    (triangle[0][0] - triangle[2][0]) * (triangle[1][1] - triangle[0][1])\n\t    - (triangle[0][0] - triangle[1][0]) * (triangle[2][1] - triangle[0][1])\n\t  );\n\t}\n\t\n\tfunction distance(x0, y0, x1, y1) {\n\t  var dx = x0 - x1, dy = y0 - y1;\n\t  return Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\n/***/ },\n\n/***/ 237:\n/***/ function(module, exports) {\n\n\tvar π = Math.PI,\n\t    π_4 = π / 4,\n\t    radians = π / 180;\n\t\n\texports.name = \"spherical\";\n\texports.formatDistance = formatDistance;\n\texports.ringArea = ringArea;\n\texports.absoluteArea = absoluteArea;\n\texports.triangleArea = triangleArea;\n\texports.distance = haversinDistance; // XXX why two implementations?\n\t\n\tfunction formatDistance(k) {\n\t  var km = k * radians * 6371;\n\t  return (km > 1 ? km.toFixed(3) + \"km\" : (km * 1000).toPrecision(3) + \"m\") + \" (\" + k.toPrecision(3) + \"°)\";\n\t}\n\t\n\tfunction ringArea(ring) {\n\t  if (!ring.length) return 0;\n\t  var area = 0,\n\t      p = ring[0],\n\t      λ = p[0] * radians,\n\t      φ = p[1] * radians / 2 + π_4,\n\t      λ0 = λ,\n\t      cosφ0 = Math.cos(φ),\n\t      sinφ0 = Math.sin(φ);\n\t\n\t  for (var i = 1, n = ring.length; i < n; ++i) {\n\t    p = ring[i], λ = p[0] * radians, φ = p[1] * radians / 2 + π_4;\n\t\n\t    // Spherical excess E for a spherical triangle with vertices: south pole,\n\t    // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t    var dλ = λ - λ0,\n\t        cosφ = Math.cos(φ),\n\t        sinφ = Math.sin(φ),\n\t        k = sinφ0 * sinφ,\n\t        u = cosφ0 * cosφ + k * Math.cos(dλ),\n\t        v = k * Math.sin(dλ);\n\t    area += Math.atan2(v, u);\n\t\n\t    // Advance the previous point.\n\t    λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t  }\n\t\n\t  return 2 * (area > π ? area - 2 * π : area < -π ? area + 2 * π : area);\n\t}\n\t\n\tfunction absoluteArea(a) {\n\t  return a < 0 ? a + 4 * π : a;\n\t}\n\t\n\tfunction triangleArea(t) {\n\t  var a = distance(t[0], t[1]),\n\t      b = distance(t[1], t[2]),\n\t      c = distance(t[2], t[0]),\n\t      s = (a + b + c) / 2;\n\t  return 4 * Math.atan(Math.sqrt(Math.max(0, Math.tan(s / 2) * Math.tan((s - a) / 2) * Math.tan((s - b) / 2) * Math.tan((s - c) / 2))));\n\t}\n\t\n\tfunction distance(a, b) {\n\t  var Δλ = (b[0] - a[0]) * radians,\n\t      sinΔλ = Math.sin(Δλ),\n\t      cosΔλ = Math.cos(Δλ),\n\t      sinφ0 = Math.sin(a[1] * radians),\n\t      cosφ0 = Math.cos(a[1] * radians),\n\t      sinφ1 = Math.sin(b[1] * radians),\n\t      cosφ1 = Math.cos(b[1] * radians),\n\t      _;\n\t  return Math.atan2(Math.sqrt((_ = cosφ1 * sinΔλ) * _ + (_ = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * _), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t}\n\t\n\tfunction haversinDistance(x0, y0, x1, y1) {\n\t  x0 *= radians, y0 *= radians, x1 *= radians, y1 *= radians;\n\t  return 2 * Math.asin(Math.sqrt(haversin(y1 - y0) + Math.cos(y0) * Math.cos(y1) * haversin(x1 - x0)));\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = Math.sin(x / 2)) * x;\n\t}\n\n\n/***/ },\n\n/***/ 238:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hashmap = __webpack_require__(239),\n\t    extract = __webpack_require__(240),\n\t    cut = __webpack_require__(241),\n\t    dedup = __webpack_require__(246);\n\t\n\t// Constructs the TopoJSON Topology for the specified hash of geometries.\n\t// Each object in the specified hash must be a GeoJSON object,\n\t// meaning FeatureCollection, a Feature or a geometry object.\n\tmodule.exports = function(objects) {\n\t  var topology = dedup(cut(extract(objects))),\n\t      coordinates = topology.coordinates,\n\t      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\t\n\t  objects = topology.objects; // for garbage collection\n\t\n\t  topology.arcs = topology.arcs.map(function(arc, i) {\n\t    indexByArc.set(arc, i);\n\t    return coordinates.slice(arc[0], arc[1] + 1);\n\t  });\n\t\n\t  delete topology.coordinates;\n\t  coordinates = null;\n\t\n\t  function indexGeometry(geometry) {\n\t    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var indexGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n\t    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n\t  };\n\t\n\t  function indexArcs(arc) {\n\t    var indexes = [];\n\t    do {\n\t      var index = indexByArc.get(arc);\n\t      indexes.push(arc[0] < arc[1] ? index : ~index);\n\t    } while (arc = arc.next);\n\t    return indexes;\n\t  }\n\t\n\t  function indexMultiArcs(arcs) {\n\t    return arcs.map(indexArcs);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    indexGeometry(objects[key]);\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction hashArc(arc) {\n\t  var i = arc[0], j = arc[1], t;\n\t  if (j < i) t = i, i = j, j = t;\n\t  return i + 31 * j;\n\t}\n\t\n\tfunction equalArc(arcA, arcB) {\n\t  var ia = arcA[0], ja = arcA[1],\n\t      ib = arcB[0], jb = arcB[1], t;\n\t  if (ja < ia) t = ia, ia = ja, ja = t;\n\t  if (jb < ib) t = ib, ib = jb, jb = t;\n\t  return ia === ib && ja === jb;\n\t}\n\n\n/***/ },\n\n/***/ 239:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(size, hash, equal, keyType, keyEmpty, valueType) {\n\t  if (arguments.length === 3) {\n\t    keyType = valueType = Array;\n\t    keyEmpty = null;\n\t  }\n\t\n\t  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      valstore = new valueType(size),\n\t      mask = size - 1,\n\t      free = size;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    keystore[i] = keyEmpty;\n\t  }\n\t\n\t  function set(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index] = value;\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    --free;\n\t    return value;\n\t  }\n\t\n\t  function maybeSet(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    --free;\n\t    return value;\n\t  }\n\t\n\t  function get(key, missingValue) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) break;\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    return missingValue;\n\t  }\n\t\n\t  function keys() {\n\t    var keys = [];\n\t    for (var i = 0, n = keystore.length; i < n; ++i) {\n\t      var matchKey = keystore[i];\n\t      if (matchKey != keyEmpty) keys.push(matchKey);\n\t    }\n\t    return keys;\n\t  }\n\t\n\t  return {\n\t    set: set,\n\t    maybeSet: maybeSet, // set if unset\n\t    get: get,\n\t    keys: keys\n\t  };\n\t};\n\n\n/***/ },\n\n/***/ 240:\n/***/ function(module, exports) {\n\n\t// Extracts the lines and rings from the specified hash of geometry objects.\n\t//\n\t// Returns an object with three properties:\n\t//\n\t// * coordinates - shared buffer of [x, y] coordinates\n\t// * lines - lines extracted from the hash, of the form [start, end]\n\t// * rings - rings extracted from the hash, of the form [start, end]\n\t//\n\t// For each ring or line, start and end represent inclusive indexes into the\n\t// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n\t// coordinates[end].\n\t//\n\t// For each line or polygon geometry in the input hash, including nested\n\t// geometries as in geometry collections, the `coordinates` array is replaced\n\t// with an equivalent `arcs` array that, for each line (for line string\n\t// geometries) or ring (for polygon geometries), points to one of the above\n\t// lines or rings.\n\tmodule.exports = function(objects) {\n\t  var index = -1,\n\t      lines = [],\n\t      rings = [],\n\t      coordinates = [];\n\t\n\t  function extractGeometry(geometry) {\n\t    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var extractGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n\t    LineString: function(o) { o.arcs = extractLine(o.coordinates); delete o.coordinates; },\n\t    MultiLineString: function(o) { o.arcs = o.coordinates.map(extractLine); delete o.coordinates; },\n\t    Polygon: function(o) { o.arcs = o.coordinates.map(extractRing); delete o.coordinates; },\n\t    MultiPolygon: function(o) { o.arcs = o.coordinates.map(extractMultiRing); delete o.coordinates; }\n\t  };\n\t\n\t  function extractLine(line) {\n\t    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    lines.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractRing(ring) {\n\t    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    rings.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractMultiRing(rings) {\n\t    return rings.map(extractRing);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    extractGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    coordinates: coordinates,\n\t    lines: lines,\n\t    rings: rings,\n\t    objects: objects\n\t  };\n\t};\n\n\n/***/ },\n\n/***/ 241:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar join = __webpack_require__(242);\n\t\n\t// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n\t// point sequences are identified. The topology can then be subsequently deduped\n\t// to remove exact duplicate arcs.\n\tmodule.exports = function(topology) {\n\t  var junctions = join(topology),\n\t      coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings;\n\t\n\t  for (var i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineMid = line[0],\n\t        lineEnd = line[1];\n\t    while (++lineMid < lineEnd) {\n\t      if (junctions.has(coordinates[lineMid])) {\n\t        var next = {0: lineMid, 1: line[1]};\n\t        line[1] = lineMid;\n\t        line = line.next = next;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (var i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0],\n\t        ringMid = ringStart,\n\t        ringEnd = ring[1],\n\t        ringFixed = junctions.has(coordinates[ringStart]);\n\t    while (++ringMid < ringEnd) {\n\t      if (junctions.has(coordinates[ringMid])) {\n\t        if (ringFixed) {\n\t          var next = {0: ringMid, 1: ring[1]};\n\t          ring[1] = ringMid;\n\t          ring = ring.next = next;\n\t        } else { // For the first junction, we can rotate rather than cut.\n\t          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n\t          coordinates[ringEnd] = coordinates[ringStart];\n\t          ringFixed = true;\n\t          ringMid = ringStart; // restart; we may have skipped junctions\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction rotateArray(array, start, end, offset) {\n\t  reverse(array, start, end);\n\t  reverse(array, start, start + offset);\n\t  reverse(array, start + offset, end);\n\t}\n\t\n\tfunction reverse(array, start, end) {\n\t  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n\t    t = array[start], array[start] = array[end], array[end] = t;\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 242:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hashset = __webpack_require__(243),\n\t    hashmap = __webpack_require__(239),\n\t    hashPoint = __webpack_require__(244),\n\t    equalPoint = __webpack_require__(245);\n\t\n\t// Given an extracted (pre-)topology, identifies all of the junctions. These are\n\t// the points at which arcs (lines or rings) will need to be cut so that each\n\t// arc is represented uniquely.\n\t//\n\t// A junction is a point where at least one arc deviates from another arc going\n\t// through the same point. For example, consider the point B. If there is a arc\n\t// through ABC and another arc through CBA, then B is not a junction because in\n\t// both cases the adjacent point pairs are {A,C}. However, if there is an\n\t// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n\t//\n\t// For a closed ring ABCA, the first point A’s adjacent points are the second\n\t// and last point {B,C}. For a line, the first and last point are always\n\t// considered junctions, even if the line is closed; this ensures that a closed\n\t// line is never rotated.\n\tmodule.exports = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      indexes = index(),\n\t      visitedByIndex = new Int32Array(coordinates.length),\n\t      leftByIndex = new Int32Array(coordinates.length),\n\t      rightByIndex = new Int32Array(coordinates.length),\n\t      junctionByIndex = new Int8Array(coordinates.length),\n\t      junctionCount = 0; // upper bound on number of junctions\n\t\n\t  for (var i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n\t  }\n\t\n\t  for (var i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineStart = line[0],\n\t        lineEnd = line[1],\n\t        previousIndex,\n\t        currentIndex = indexes[lineStart],\n\t        nextIndex = indexes[++lineStart];\n\t    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n\t    while (++lineStart <= lineEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n\t    }\n\t    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n\t  }\n\t\n\t  for (var i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = -1;\n\t  }\n\t\n\t  for (var i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0] + 1,\n\t        ringEnd = ring[1],\n\t        previousIndex = indexes[ringEnd - 1],\n\t        currentIndex = indexes[ringStart - 1],\n\t        nextIndex = indexes[ringStart];\n\t    sequence(i, previousIndex, currentIndex, nextIndex);\n\t    while (++ringStart <= ringEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n\t    }\n\t  }\n\t\n\t  function sequence(i, previousIndex, currentIndex, nextIndex) {\n\t    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n\t    visitedByIndex[currentIndex] = i;\n\t    var leftIndex = leftByIndex[currentIndex];\n\t    if (leftIndex >= 0) {\n\t      var rightIndex = rightByIndex[currentIndex];\n\t      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n\t        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n\t        ++junctionCount, junctionByIndex[currentIndex] = 1;\n\t      }\n\t    } else {\n\t      leftByIndex[currentIndex] = previousIndex;\n\t      rightByIndex[currentIndex] = nextIndex;\n\t    }\n\t  }\n\t\n\t  function index() {\n\t    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n\t        indexes = new Int32Array(coordinates.length);\n\t\n\t    for (var i = 0, n = coordinates.length; i < n; ++i) {\n\t      indexes[i] = indexByPoint.maybeSet(i, i);\n\t    }\n\t\n\t    return indexes;\n\t  }\n\t\n\t  function hashIndex(i) {\n\t    return hashPoint(coordinates[i]);\n\t  }\n\t\n\t  function equalIndex(i, j) {\n\t    return equalPoint(coordinates[i], coordinates[j]);\n\t  }\n\t\n\t  visitedByIndex = leftByIndex = rightByIndex = null;\n\t\n\t  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint);\n\t\n\t  // Convert back to a standard hashset by point for caller convenience.\n\t  for (var i = 0, n = coordinates.length, j; i < n; ++i) {\n\t    if (junctionByIndex[j = indexes[i]]) {\n\t      junctionByPoint.add(coordinates[j]);\n\t    }\n\t  }\n\t\n\t  return junctionByPoint;\n\t};\n\n\n/***/ },\n\n/***/ 243:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(size, hash, equal, type, empty) {\n\t  if (arguments.length === 3) {\n\t    type = Array;\n\t    empty = null;\n\t  }\n\t\n\t  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      mask = size - 1,\n\t      free = size;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    store[i] = empty;\n\t  }\n\t\n\t  function add(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) throw new Error(\"full hashset\");\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    store[index] = value;\n\t    --free;\n\t    return true;\n\t  }\n\t\n\t  function has(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) break;\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function values() {\n\t    var values = [];\n\t    for (var i = 0, n = store.length; i < n; ++i) {\n\t      var match = store[i];\n\t      if (match != empty) values.push(match);\n\t    }\n\t    return values;\n\t  }\n\t\n\t  return {\n\t    add: add,\n\t    has: has,\n\t    values: values\n\t  };\n\t};\n\n\n/***/ },\n\n/***/ 244:\n/***/ function(module, exports) {\n\n\t// TODO if quantized, use simpler Int32 hashing?\n\t\n\tvar buffer = new ArrayBuffer(16),\n\t    floats = new Float64Array(buffer),\n\t    uints = new Uint32Array(buffer);\n\t\n\tmodule.exports = function(point) {\n\t  floats[0] = point[0];\n\t  floats[1] = point[1];\n\t  var hash = uints[0] ^ uints[1];\n\t  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n\t  return hash & 0x7fffffff;\n\t};\n\n\n/***/ },\n\n/***/ 245:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(pointA, pointB) {\n\t  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n\t};\n\n\n/***/ },\n\n/***/ 246:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar join = __webpack_require__(242),\n\t    hashmap = __webpack_require__(239),\n\t    hashPoint = __webpack_require__(244),\n\t    equalPoint = __webpack_require__(245);\n\t\n\t// Given a cut topology, combines duplicate arcs.\n\tmodule.exports = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      arcCount = lines.length + rings.length;\n\t\n\t  delete topology.lines;\n\t  delete topology.rings;\n\t\n\t  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n\t  for (var i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i]; while (line = line.next) ++arcCount;\n\t  }\n\t  for (var i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i]; while (ring = ring.next) ++arcCount;\n\t  }\n\t\n\t  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n\t      arcs = topology.arcs = [];\n\t\n\t  for (var i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i];\n\t    do {\n\t      dedupLine(line);\n\t    } while (line = line.next);\n\t  }\n\t\n\t  for (var i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i];\n\t    if (ring.next) { // arc is no longer closed\n\t      do {\n\t        dedupLine(ring);\n\t      } while (ring = ring.next);\n\t    } else {\n\t      dedupRing(ring);\n\t    }\n\t  }\n\t\n\t  function dedupLine(arc) {\n\t    var startPoint,\n\t        endPoint,\n\t        startArcs,\n\t        endArcs;\n\t\n\t    // Does this arc match an existing arc in order?\n\t    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n\t      for (var i = 0, n = startArcs.length; i < n; ++i) {\n\t        var startArc = startArcs[i];\n\t        if (equalLine(startArc, arc)) {\n\t          arc[0] = startArc[0];\n\t          arc[1] = startArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Does this arc match an existing arc in reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n\t      for (var i = 0, n = endArcs.length; i < n; ++i) {\n\t        var endArc = endArcs[i];\n\t        if (reverseEqualLine(endArc, arc)) {\n\t          arc[1] = endArc[0];\n\t          arc[0] = endArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function dedupRing(arc) {\n\t    var endPoint,\n\t        endArcs;\n\t\n\t    // Does this arc match an existing line in order, or reverse order?\n\t    // Rings are closed, so their start point and end point is the same.\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n\t      for (var i = 0, n = endArcs.length; i < n; ++i) {\n\t        var endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Otherwise, does this arc match an existing ring in order, or reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n\t      for (var i = 0, n = endArcs.length; i < n; ++i) {\n\t        var endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function equalLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n\t    return true;\n\t  }\n\t\n\t  function equalRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = n - findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // Rings are rotated to a consistent, but arbitrary, start point.\n\t  // This is necessary to detect when a ring and a rotated copy are dupes.\n\t  function findMinimumOffset(arc) {\n\t    var start = arc[0],\n\t        end = arc[1],\n\t        mid = start,\n\t        minimum = mid,\n\t        minimumPoint = coordinates[mid];\n\t    while (++mid < end) {\n\t      var point = coordinates[mid];\n\t      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n\t        minimum = mid;\n\t        minimumPoint = point;\n\t      }\n\t    }\n\t    return minimum - start;\n\t  }\n\t\n\t  return topology;\n\t};\n\n\n/***/ },\n\n/***/ 247:\n/***/ function(module, exports) {\n\n\t// Given a TopoJSON topology in absolute (quantized) coordinates,\n\t// converts to fixed-point delta encoding.\n\t// This is a destructive operation that modifies the given topology!\n\tmodule.exports = function(topology) {\n\t  var arcs = topology.arcs,\n\t      i = -1,\n\t      n = arcs.length;\n\t\n\t  while (++i < n) {\n\t    var arc = arcs[i],\n\t        j = 0,\n\t        m = arc.length,\n\t        point = arc[0],\n\t        x0 = point[0],\n\t        y0 = point[1],\n\t        x1,\n\t        y1;\n\t    while (++j < m) {\n\t      point = arc[j];\n\t      x1 = point[0];\n\t      y1 = point[1];\n\t      arc[j] = [x1 - x0, y1 - y0];\n\t      x0 = x1;\n\t      y0 = y1;\n\t    }\n\t  }\n\t\n\t  return topology;\n\t};\n\n\n/***/ },\n\n/***/ 248:\n/***/ function(module, exports) {\n\n\t// Given a hash of GeoJSON objects, replaces Features with geometry objects.\n\t// This is a destructive operation that modifies the input objects!\n\tmodule.exports = function(objects) {\n\t\n\t  function geomifyObject(object) {\n\t    return (object && geomifyObjectType.hasOwnProperty(object.type)\n\t        ? geomifyObjectType[object.type]\n\t        : geomifyGeometry)(object);\n\t  }\n\t\n\t  function geomifyFeature(feature) {\n\t    var geometry = feature.geometry;\n\t    if (geometry == null) {\n\t      feature.type = null;\n\t    } else {\n\t      geomifyGeometry(geometry);\n\t      feature.type = geometry.type;\n\t      if (geometry.geometries) feature.geometries = geometry.geometries;\n\t      else if (geometry.coordinates) feature.coordinates = geometry.coordinates;\n\t    }\n\t    delete feature.geometry;\n\t    return feature;\n\t  }\n\t\n\t  function geomifyGeometry(geometry) {\n\t    if (!geometry) return {type: null};\n\t    if (geomifyGeometryType.hasOwnProperty(geometry.type)) geomifyGeometryType[geometry.type](geometry);\n\t    return geometry;\n\t  }\n\t\n\t  var geomifyObjectType = {\n\t    Feature: geomifyFeature,\n\t    FeatureCollection: function(collection) {\n\t      collection.type = \"GeometryCollection\";\n\t      collection.geometries = collection.features;\n\t      collection.features.forEach(geomifyFeature);\n\t      delete collection.features;\n\t      return collection;\n\t    }\n\t  };\n\t\n\t  var geomifyGeometryType = {\n\t    GeometryCollection: function(o) {\n\t      var geometries = o.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) geometries[i] = geomifyGeometry(geometries[i]);\n\t    },\n\t    MultiPoint: function(o) {\n\t      if (!o.coordinates.length) {\n\t        o.type = null;\n\t        delete o.coordinates;\n\t      } else if (o.coordinates.length < 2) {\n\t        o.type = \"Point\";\n\t        o.coordinates = o.coordinates[0];\n\t      }\n\t    },\n\t    LineString: function(o) {\n\t      if (!o.coordinates.length) {\n\t        o.type = null;\n\t        delete o.coordinates;\n\t      }\n\t    },\n\t    MultiLineString: function(o) {\n\t      for (var lines = o.coordinates, i = 0, N = 0, n = lines.length; i < n; ++i) {\n\t        var line = lines[i];\n\t        if (line.length) lines[N++] = line;\n\t      }\n\t      if (!N) {\n\t        o.type = null;\n\t        delete o.coordinates;\n\t      } else if (N < 2) {\n\t        o.type = \"LineString\";\n\t        o.coordinates = lines[0];\n\t      } else {\n\t        o.coordinates.length = N;\n\t      }\n\t    },\n\t    Polygon: function(o) {\n\t      for (var rings = o.coordinates, i = 0, N = 0, n = rings.length; i < n; ++i) {\n\t        var ring = rings[i];\n\t        if (ring.length) rings[N++] = ring;\n\t      }\n\t      if (!N) {\n\t        o.type = null;\n\t        delete o.coordinates;\n\t      } else {\n\t        o.coordinates.length = N;\n\t      }\n\t    },\n\t    MultiPolygon: function(o) {\n\t      for (var polygons = o.coordinates, j = 0, M = 0, m = polygons.length; j < m; ++j) {\n\t        for (var rings = polygons[j], i = 0, N = 0, n = rings.length; i < n; ++i) {\n\t          var ring = rings[i];\n\t          if (ring.length) rings[N++] = ring;\n\t        }\n\t        if (N) {\n\t          rings.length = N;\n\t          polygons[M++] = rings;\n\t        }\n\t      }\n\t      if (!M) {\n\t        o.type = null;\n\t        delete o.coordinates;\n\t      } else if (M < 2) {\n\t        o.type = \"Polygon\";\n\t        o.coordinates = polygons[0];\n\t      } else {\n\t        polygons.length = M;\n\t      }\n\t    }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    objects[key] = geomifyObject(objects[key]);\n\t  }\n\t\n\t  return objects;\n\t};\n\n\n/***/ },\n\n/***/ 249:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar quantize = __webpack_require__(250);\n\t\n\tmodule.exports = function(objects, bbox, Q0, Q1) {\n\t  if (arguments.length < 4) Q1 = Q0;\n\t\n\t  var x0 = isFinite(bbox[0]) ? bbox[0] : 0,\n\t      y0 = isFinite(bbox[1]) ? bbox[1] : 0,\n\t      x1 = isFinite(bbox[2]) ? bbox[2] : 0,\n\t      y1 = isFinite(bbox[3]) ? bbox[3] : 0,\n\t      kx = x1 - x0 ? (Q1 - 1) / (x1 - x0) * Q0 / Q1 : 1,\n\t      ky = y1 - y0 ? (Q1 - 1) / (y1 - y0) * Q0 / Q1 : 1,\n\t      q = quantize(-x0, -y0, kx, ky);\n\t\n\t  function quantizeGeometry(geometry) {\n\t    if (geometry && quantizeGeometryType.hasOwnProperty(geometry.type)) quantizeGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var quantizeGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n\t    Point: function(o) { q.point(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates.forEach(q.point); },\n\t    LineString: function(o) {\n\t      var line = o.coordinates;\n\t      q.line(line);\n\t      if (line.length < 2) line[1] = line[0]; // must have 2+\n\t    },\n\t    MultiLineString: function(o) {\n\t      for (var lines = o.coordinates, i = 0, n = lines.length; i < n; ++i) {\n\t        var line = lines[i];\n\t        q.line(line);\n\t        if (line.length < 2) line[1] = line[0]; // must have 2+\n\t      }\n\t    },\n\t    Polygon: function(o) {\n\t      for (var rings = o.coordinates, i = 0, n = rings.length; i < n; ++i) {\n\t        var ring = rings[i];\n\t        q.line(ring);\n\t        while (ring.length < 4) ring.push(ring[0]); // must have 4+\n\t      }\n\t    },\n\t    MultiPolygon: function(o) {\n\t      for (var polygons = o.coordinates, i = 0, n = polygons.length; i < n; ++i) {\n\t        for (var rings = polygons[i], j = 0, m = rings.length; j < m; ++j) {\n\t          var ring = rings[j];\n\t          q.line(ring);\n\t          while (ring.length < 4) ring.push(ring[0]); // must have 4+\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    quantizeGeometry(objects[key]);\n\t  }\n\t\n\t  return q.transform;\n\t};\n\n\n/***/ },\n\n/***/ 250:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(dx, dy, kx, ky) {\n\t\n\t  function quantizePoint(coordinates) {\n\t    coordinates[0] = Math.round((coordinates[0] + dx) * kx);\n\t    coordinates[1] = Math.round((coordinates[1] + dy) * ky);\n\t    return coordinates;\n\t  }\n\t\n\t  function quantizeLine(coordinates) {\n\t    var i = 0,\n\t        j = 1,\n\t        n = coordinates.length,\n\t        pi = quantizePoint(coordinates[0]),\n\t        pj,\n\t        px = pi[0],\n\t        py = pi[1],\n\t        x,\n\t        y;\n\t\n\t    while (++i < n) {\n\t      pi = quantizePoint(coordinates[i]);\n\t      x = pi[0];\n\t      y = pi[1];\n\t      if (x !== px || y !== py) { // skip coincident points\n\t        pj = coordinates[j++];\n\t        pj[0] = px = x;\n\t        pj[1] = py = y;\n\t      }\n\t    }\n\t\n\t    coordinates.length = j;\n\t  }\n\t\n\t  return {\n\t    point: quantizePoint,\n\t    line: quantizeLine,\n\t    transform: {\n\t      scale: [1 / kx, 1 / ky],\n\t      translate: [-dx, -dy]\n\t    }\n\t  };\n\t};\n\n\n/***/ },\n\n/***/ 251:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar quantize = __webpack_require__(250);\n\t\n\tmodule.exports = function(topology, Q0, Q1) {\n\t  if (Q0) {\n\t    if (Q1 === Q0 || !topology.bbox.every(isFinite)) return topology;\n\t    var k = Q1 / Q0,\n\t        q = quantize(0, 0, k, k);\n\t\n\t    topology.transform.scale[0] /= k;\n\t    topology.transform.scale[1] /= k;\n\t  } else {\n\t    var bbox = topology.bbox,\n\t        x0 = isFinite(bbox[0]) ? bbox[0] : 0,\n\t        y0 = isFinite(bbox[1]) ? bbox[1] : 0,\n\t        x1 = isFinite(bbox[2]) ? bbox[2] : 0,\n\t        y1 = isFinite(bbox[3]) ? bbox[3] : 0,\n\t        kx = x1 - x0 ? (Q1 - 1) / (x1 - x0) : 1,\n\t        ky = y1 - y0 ? (Q1 - 1) / (y1 - y0) : 1,\n\t        q = quantize(-x0, -y0, kx, ky);\n\t\n\t    topology.transform = q.transform;\n\t  }\n\t\n\t  function quantizeGeometry(geometry) {\n\t    if (geometry && quantizeGeometryType.hasOwnProperty(geometry.type)) quantizeGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var quantizeGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n\t    Point: function(o) { q.point(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates.forEach(q.point); }\n\t  };\n\t\n\t  for (var key in topology.objects) {\n\t    quantizeGeometry(topology.objects[key]);\n\t  }\n\t\n\t  // XXX shared points are bad mmkay\n\t  topology.arcs = topology.arcs.map(function(arc) {\n\t    q.line(arc = arc.map(function(point) { return point.slice(); }));\n\t    if (arc.length < 2) arc.push(arc[0]); // arcs must have at least two points\n\t    return arc;\n\t  });\n\t\n\t  return topology;\n\t};\n\n\n/***/ },\n\n/***/ 252:\n/***/ function(module, exports) {\n\n\t\n\t// Computes the bounding box of the specified hash of GeoJSON objects.\n\tmodule.exports = function(objects) {\n\t  var x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  function boundGeometry(geometry) {\n\t    if (geometry && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var boundGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n\t    Point: function(o) { boundPoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n\t    LineString: function(o) { boundLine(o.coordinates); },\n\t    MultiLineString: function(o) { o.coordinates.forEach(boundLine); },\n\t    Polygon: function(o) { o.coordinates.forEach(boundLine); },\n\t    MultiPolygon: function(o) { o.coordinates.forEach(boundMultiLine); }\n\t  };\n\t\n\t  function boundPoint(coordinates) {\n\t    var x = coordinates[0],\n\t        y = coordinates[1];\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  function boundLine(coordinates) {\n\t    coordinates.forEach(boundPoint);\n\t  }\n\t\n\t  function boundMultiLine(coordinates) {\n\t    coordinates.forEach(boundLine);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    boundGeometry(objects[key]);\n\t  }\n\t\n\t  return [x0, y0, x1, y1];\n\t};\n\n\n/***/ },\n\n/***/ 253:\n/***/ function(module, exports) {\n\n\t// Given a hash of GeoJSON objects and an id function, invokes the id function\n\t// to compute a new id for each object that is a feature. The function is passed\n\t// the feature and is expected to return the new feature id, or null if the\n\t// feature should not have an id.\n\tmodule.exports = function(objects, id) {\n\t  if (arguments.length < 2) id = function(d) { return d.id; };\n\t\n\t  function idObject(object) {\n\t    if (object && idObjectType.hasOwnProperty(object.type)) idObjectType[object.type](object);\n\t  }\n\t\n\t  function idFeature(feature) {\n\t    var i = id(feature);\n\t    if (i == null) delete feature.id;\n\t    else feature.id = i;\n\t  }\n\t\n\t  var idObjectType = {\n\t    Feature: idFeature,\n\t    FeatureCollection: function(collection) { collection.features.forEach(idFeature); }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    idObject(objects[key]);\n\t  }\n\t\n\t  return objects;\n\t};\n\n\n/***/ },\n\n/***/ 254:\n/***/ function(module, exports) {\n\n\t// Given a hash of GeoJSON objects, transforms any properties on features using\n\t// the specified transform function. The function is invoked for each existing\n\t// property on the current feature, being passed the new properties hash, the\n\t// property name, and the property value. The function is then expected to\n\t// assign a new value to the given property hash if the feature is to be\n\t// retained and return true. Or, to skip the property, do nothing and return\n\t// false. If no properties are propagated to the new properties hash, the\n\t// properties hash will be deleted from the current feature.\n\tmodule.exports = function(objects, propertyTransform) {\n\t  if (arguments.length < 2) propertyTransform = function() {};\n\t\n\t  function transformObject(object) {\n\t    if (object && transformObjectType.hasOwnProperty(object.type)) transformObjectType[object.type](object);\n\t  }\n\t\n\t  function transformFeature(feature) {\n\t    if (feature.properties) {\n\t      var properties0 = feature.properties,\n\t          properties1 = {},\n\t          empty = true;\n\t\n\t      for (var key0 in properties0) {\n\t        if (propertyTransform(properties1, key0, properties0[key0])) {\n\t          empty = false;\n\t        }\n\t      }\n\t\n\t      if (empty) delete feature.properties;\n\t      else feature.properties = properties1;\n\t    }\n\t  }\n\t\n\t  var transformObjectType = {\n\t    Feature: transformFeature,\n\t    FeatureCollection: function(collection) { collection.features.forEach(transformFeature); }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    transformObject(objects[key]);\n\t  }\n\t\n\t  return objects;\n\t};\n\n\n/***/ },\n\n/***/ 255:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar topojson = __webpack_require__(230),\n\t    systems = __webpack_require__(235);\n\t\n\tmodule.exports = function(topology, options) {\n\t  var minimumArea = 0,\n\t      retainProportion,\n\t      verbose = false,\n\t      system = null,\n\t      N = topology.arcs.reduce(function(p, v) { return p + v.length; }, 0),\n\t      M = 0;\n\t\n\t  if (options)\n\t    \"minimum-area\" in options && (minimumArea = +options[\"minimum-area\"]),\n\t    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]),\n\t    \"retain-proportion\" in options && (retainProportion = +options[\"retain-proportion\"]),\n\t    \"verbose\" in options && (verbose = !!options[\"verbose\"]);\n\t\n\t  topojson.presimplify(topology, system.triangleArea);\n\t\n\t  if (retainProportion) {\n\t    var areas = [];\n\t    topology.arcs.forEach(function(arc) {\n\t      arc.forEach(function(point) {\n\t        if (isFinite(point[2])) areas.push(point[2]); // ignore endpoints\n\t      });\n\t    });\n\t    options[\"minimum-area\"] = minimumArea = N ? areas.sort(function(a, b) { return b - a; })[Math.ceil((N - 1) * retainProportion)] : 0;\n\t    if (verbose) console.warn(\"simplification: effective minimum area \" + minimumArea.toPrecision(3));\n\t  }\n\t\n\t  topology.arcs.forEach(topology.transform ? function(arc) {\n\t    var dx = 0,\n\t        dy = 0, // accumulate removed points\n\t        i = -1,\n\t        j = -1,\n\t        n = arc.length,\n\t        source,\n\t        target;\n\t\n\t    while (++i < n) {\n\t      source = arc[i];\n\t      if (source[2] >= minimumArea) {\n\t        target = arc[++j];\n\t        target[0] = source[0] + dx;\n\t        target[1] = source[1] + dy;\n\t        dx = dy = 0;\n\t      } else {\n\t        dx += source[0];\n\t        dy += source[1];\n\t      }\n\t    }\n\t\n\t    arc.length = ++j;\n\t  } : function(arc) {\n\t    var i = -1,\n\t        j = -1,\n\t        n = arc.length,\n\t        point;\n\t\n\t    while (++i < n) {\n\t      point = arc[i];\n\t      if (point[2] >= minimumArea) {\n\t        arc[++j] = point;\n\t      }\n\t    }\n\t\n\t    arc.length = ++j;\n\t  });\n\t\n\t  // Remove computed area (z) for each point, and remove coincident points.\n\t  // This is done as a separate pass because some coordinates may be shared\n\t  // between arcs (such as the last point and first point of a cut line).\n\t  // If the entire arc is empty, retain at least two points (per spec).\n\t  topology.arcs.forEach(topology.transform ? function(arc) {\n\t    var i = 0,\n\t        j = 0,\n\t        n = arc.length,\n\t        p = arc[0];\n\t    p.length = 2;\n\t    while (++i < n) {\n\t      p = arc[i];\n\t      p.length = 2;\n\t      if (p[0] || p[1]) arc[++j] = p;\n\t    }\n\t    M += arc.length = (j || 1) + 1;\n\t  } : function(arc) {\n\t    var i = 0,\n\t        j = 0,\n\t        n = arc.length,\n\t        p = arc[0],\n\t        x0 = p[0],\n\t        y0 = p[1],\n\t        x1,\n\t        y1;\n\t    p.length = 2;\n\t    while (++i < n) {\n\t      p = arc[i], x1 = p[0], y1 = p[1];\n\t      p.length = 2;\n\t      if (x0 !== x1 || y0 !== y1) arc[++j] = p, x0 = x1, y0 = y1;\n\t    }\n\t    M += arc.length = (j || 1) + 1;\n\t  });\n\t\n\t  if (verbose) console.warn(\"simplification: retained \" + M + \" / \" + N + \" points (\" + Math.round((M / N) * 100) + \"%)\");\n\t\n\t  return topology;\n\t};\n\n\n/***/ },\n\n/***/ 256:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar type = __webpack_require__(233),\n\t    systems = __webpack_require__(235),\n\t    topojson = __webpack_require__(230);\n\t\n\tmodule.exports = function(object, options) {\n\t  if (object.type === \"Topology\") clockwiseTopology(object, options);\n\t  else clockwiseGeometry(object, options);\n\t};\n\t\n\tfunction clockwiseGeometry(object, options) {\n\t  var system = null;\n\t\n\t  if (options)\n\t    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]);\n\t\n\t  var clockwisePolygon = clockwisePolygonSystem(system.ringArea, reverse);\n\t\n\t  type({\n\t    LineString: noop,\n\t    MultiLineString: noop,\n\t    Point: noop,\n\t    MultiPoint: noop,\n\t    Polygon: function(polygon) { clockwisePolygon(polygon.coordinates); },\n\t    MultiPolygon: function(multiPolygon) { multiPolygon.coordinates.forEach(clockwisePolygon); }\n\t  }).object(object);\n\t\n\t  function reverse(array) { array.reverse(); }\n\t}\n\t\n\tfunction clockwiseTopology(topology, options) {\n\t  var system = null;\n\t\n\t  if (options)\n\t    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]);\n\t\n\t  var clockwisePolygon = clockwisePolygonSystem(ringArea, reverse);\n\t\n\t  var clockwise = type({\n\t    LineString: noop,\n\t    MultiLineString: noop,\n\t    Point: noop,\n\t    MultiPoint: noop,\n\t    Polygon: function(polygon) { clockwisePolygon(polygon.arcs); },\n\t    MultiPolygon: function(multiPolygon) { multiPolygon.arcs.forEach(clockwisePolygon); }\n\t  });\n\t\n\t  for (var key in topology.objects) {\n\t    clockwise.object(topology.objects[key]);\n\t  }\n\t\n\t  function ringArea(ring) {\n\t    return system.ringArea(topojson.feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0]);\n\t  }\n\t\n\t  // TODO It might be slightly more compact to reverse the arc.\n\t  function reverse(ring) {\n\t    var i = -1, n = ring.length;\n\t    ring.reverse();\n\t    while (++i < n) ring[i] = ~ring[i];\n\t  }\n\t};\n\t\n\tfunction clockwisePolygonSystem(ringArea, reverse) {\n\t  return function(rings) {\n\t    if (!(n = rings.length)) return;\n\t    var n,\n\t        areas = new Array(n),\n\t        max = -Infinity,\n\t        best,\n\t        area,\n\t        t;\n\t    // Find the largest absolute ring area; this should be the exterior ring.\n\t    for (var i = 0; i < n; ++i) {\n\t      var area = Math.abs(areas[i] = ringArea(rings[i]));\n\t      if (area > max) max = area, best = i;\n\t    }\n\t    // Ensure the largest ring appears first.\n\t    if (best) {\n\t      t = rings[best], rings[best] = rings[0], rings[0] = t;\n\t      t = areas[best], areas[best] = areas[0], areas[0] = t;\n\t    }\n\t    if (areas[0] < 0) reverse(rings[0]);\n\t    for (var i = 1; i < n; ++i) {\n\t      if (areas[i] > 0) reverse(rings[i]);\n\t    }\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n\n/***/ 257:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar type = __webpack_require__(233),\n\t    prune = __webpack_require__(258),\n\t    clockwise = __webpack_require__(256),\n\t    systems = __webpack_require__(235),\n\t    topojson = __webpack_require__(230);\n\t\n\tmodule.exports = function(topology, options) {\n\t  var system = null,\n\t      forceClockwise = true, // force exterior rings to be clockwise?\n\t      preserveAttached = true, // e.g., remove islands but not small counties\n\t      preserveRing = preserveNone,\n\t      minimumArea;\n\t\n\t  if (options)\n\t    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]),\n\t    \"minimum-area\" in options && (minimumArea = +options[\"minimum-area\"]),\n\t    \"preserve-attached\" in options && (preserveAttached = !!options[\"preserve-attached\"]),\n\t    \"force-clockwise\" in options && (forceClockwise = !!options[\"force-clockwise\"]);\n\t\n\t  if (forceClockwise) clockwise(topology, options); // deprecated; for backwards-compatibility\n\t\n\t  if (!(minimumArea > 0)) minimumArea = Number.MIN_VALUE;\n\t\n\t  if (preserveAttached) {\n\t    var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n\t        ringIndex = 0;\n\t\n\t    var checkAttachment = type({\n\t      LineString: noop,\n\t      MultiLineString: noop,\n\t      Point: noop,\n\t      MultiPoint: noop,\n\t      MultiPolygon: function(multiPolygon) {\n\t        var arcs = multiPolygon.arcs, i = -1, n = arcs.length;\n\t        while (++i < n) this.polygon(arcs[i]);\n\t      },\n\t      Polygon: function(polygon) {\n\t        this.polygon(polygon.arcs);\n\t      },\n\t      polygon: function(arcs) {\n\t        for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n\t          for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n\t            var arc = ring[j];\n\t            if (arc < 0) arc = ~arc;\n\t            var uniqueRing = uniqueRingByArc[arc];\n\t            if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n\t            else uniqueRingByArc[arc] = ringIndex;\n\t          }\n\t        }\n\t      }\n\t    });\n\t\n\t    preserveRing = function(ring) {\n\t      for (var j = 0, m = ring.length; j < m; ++j) {\n\t        var arc = ring[j];\n\t        if (uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    for (var key in topology.objects) {\n\t      checkAttachment.object(topology.objects[key]);\n\t    }\n\t  }\n\t\n\t  var filter = type({\n\t    LineString: noop, // TODO remove empty lines\n\t    MultiLineString: noop,\n\t    Point: noop,\n\t    MultiPoint: noop,\n\t    Polygon: function(polygon) {\n\t      polygon.arcs = filterPolygon(polygon.arcs);\n\t      if (!polygon.arcs || !polygon.arcs.length) {\n\t        polygon.type = null;\n\t        delete polygon.arcs;\n\t      }\n\t    },\n\t    MultiPolygon: function(multiPolygon) {\n\t      multiPolygon.arcs = multiPolygon.arcs\n\t          .map(filterPolygon)\n\t          .filter(function(polygon) { return polygon && polygon.length; });\n\t      if (!multiPolygon.arcs.length) {\n\t        multiPolygon.type = null;\n\t        delete multiPolygon.arcs;\n\t      }\n\t    },\n\t    GeometryCollection: function(collection) {\n\t      this.defaults.GeometryCollection.call(this, collection);\n\t      collection.geometries = collection.geometries.filter(function(geometry) { return geometry.type != null; });\n\t      if (!collection.geometries.length) {\n\t        collection.type = null;\n\t        delete collection.geometries;\n\t      }\n\t    }\n\t  });\n\t\n\t  for (var key in topology.objects) {\n\t    filter.object(topology.objects[key]);\n\t  }\n\t\n\t  prune(topology, options);\n\t\n\t  function filterPolygon(arcs) {\n\t    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n\t        ? [arcs.shift()].concat(arcs.filter(filterInteriorRing))\n\t        : null;\n\t  }\n\t\n\t  function filterExteriorRing(ring) {\n\t    return preserveRing(ring) || system.absoluteArea(ringArea(ring)) >= minimumArea;\n\t  }\n\t\n\t  function filterInteriorRing(ring) {\n\t    return preserveRing(ring) || system.absoluteArea(-ringArea(ring)) >= minimumArea;\n\t  }\n\t\n\t  function ringArea(ring) {\n\t    return system.ringArea(topojson.feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0]);\n\t  }\n\t};\n\t\n\tfunction noop() {}\n\t\n\tfunction preserveNone() {\n\t  return false;\n\t}\n\n\n/***/ },\n\n/***/ 258:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(topology, options) {\n\t  var verbose = false,\n\t      objects = topology.objects,\n\t      oldArcs = topology.arcs,\n\t      oldArcCount = oldArcs.length,\n\t      newArcs = topology.arcs = [],\n\t      newArcCount = 0,\n\t      newIndexByOldIndex = new Array(oldArcs.length);\n\t\n\t  if (options)\n\t    \"verbose\" in options && (verbose = !!options[\"verbose\"]);\n\t\n\t  function pruneGeometry(geometry) {\n\t    if (geometry && pruneGeometryType.hasOwnProperty(geometry.type)) pruneGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var pruneGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(pruneGeometry); },\n\t    LineString: function(o) { pruneArcs(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs.forEach(pruneArcs); },\n\t    Polygon: function(o) { o.arcs.forEach(pruneArcs); },\n\t    MultiPolygon: function(o) { o.arcs.forEach(pruneMultiArcs); }\n\t  };\n\t\n\t  function pruneArcs(arcs) {\n\t    for (var i = 0, n = arcs.length; i < n; ++i) {\n\t      var oldIndex = arcs[i],\n\t          oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true),\n\t          newIndex;\n\t\n\t      // If this is the first instance of this arc,\n\t      // record it under its new index.\n\t      if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n\t        newIndexByOldIndex[oldIndex] = newIndex = newArcCount++;\n\t        newArcs[newIndex] = oldArcs[oldIndex];\n\t      }\n\t\n\t      arcs[i] = oldReverse ? ~newIndex : newIndex;\n\t    }\n\t  }\n\t\n\t  function pruneMultiArcs(arcs) {\n\t    arcs.forEach(pruneArcs);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    pruneGeometry(objects[key]);\n\t  }\n\t\n\t  if (verbose) console.warn(\"prune: retained \" + newArcCount + \" / \" + oldArcCount + \" arcs (\" + Math.round(newArcCount / oldArcCount * 100) + \"%)\");\n\t\n\t  return topology;\n\t};\n\t\n\tfunction noop() {}\n\n\n/***/ },\n\n/***/ 259:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar type = __webpack_require__(233),\n\t    topojson = __webpack_require__(230);\n\t\n\tmodule.exports = function(topology, propertiesById) {\n\t  var bind = type({\n\t    geometry: function(geometry) {\n\t      var properties0 = geometry.properties,\n\t          properties1 = propertiesById[geometry.id];\n\t      if (properties1) {\n\t        if (properties0) for (var k in properties1) properties0[k] = properties1[k];\n\t        else for (var k in properties1) { geometry.properties = properties1; break; }\n\t      }\n\t      this.defaults.geometry.call(this, geometry);\n\t    },\n\t    LineString: noop,\n\t    MultiLineString: noop,\n\t    Point: noop,\n\t    MultiPoint: noop,\n\t    Polygon: noop,\n\t    MultiPolygon: noop\n\t  });\n\t\n\t  for (var key in topology.objects) {\n\t    bind.object(topology.objects[key]);\n\t  }\n\t};\n\t\n\tfunction noop() {}\n\n\n/***/ },\n\n/***/ 260:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar type = __webpack_require__(233);\n\t\n\tmodule.exports = function(topology, options) {\n\t  var width,\n\t      height,\n\t      margin = 0,\n\t      invert = true;\n\t\n\t  if (options)\n\t    \"width\" in options && (width = +options[\"width\"]),\n\t    \"height\" in options && (height = +options[\"height\"]),\n\t    \"margin\" in options && (margin = +options[\"margin\"]),\n\t    \"invert\" in options && (invert = !!options[\"invert\"]);\n\t\n\t  var bx = topology.bbox,\n\t      dx = bx[2] - bx[0],\n\t      dy = bx[3] - bx[1],\n\t      cx = (bx[2] + bx[0]) / 2,\n\t      cy = (bx[3] + bx[1]) / 2,\n\t      kx;\n\t\n\t  width = Math.max(0, width - margin * 2);\n\t  height = Math.max(0, height - margin * 2);\n\t\n\t  if (width && height) {\n\t    kx = Math.min(width / dx, height / dy);\n\t  } else if (width) {\n\t    kx = width / dx;\n\t    height = kx * dy;\n\t  } else {\n\t    kx = height / dy;\n\t    width = kx * dx;\n\t  }\n\t\n\t  var ky = invert ? -kx : kx,\n\t      lt = scalePoint([bx[0], bx[1]]),\n\t      rb = scalePoint([bx[2], bx[3]]),\n\t      tx;\n\t\n\t  topology.bbox = invert\n\t      ? [lt[0], rb[1], rb[0], lt[1]]\n\t      : [lt[0], lt[1], rb[0], rb[1]];\n\t\n\t  function scalePoint(point) {\n\t    return [\n\t      point[0] * kx + (width / 2 - cx * kx) + margin,\n\t      point[1] * ky + (height / 2 - cy * ky) + margin\n\t    ];\n\t  }\n\t\n\t  if (tx = topology.transform) {\n\t    tx.scale[0] *= kx;\n\t    tx.scale[1] *= ky;\n\t    tx.translate[0] = width / 2 + margin - (cx - tx.translate[0]) * kx;\n\t    tx.translate[1] = height / 2 + margin - (cy - tx.translate[1]) * ky;\n\t  } else {\n\t    var scale = type({\n\t      LineString: noop,\n\t      MultiLineString: noop,\n\t      Point: function(point) { point.coordinates = scalePoint(point.coordinates); },\n\t      MultiPoint: function(multipoint) { multipoint.coordinates = multipoint.coordinates.map(scalePoint); },\n\t      Polygon: noop,\n\t      MultiPolygon: noop\n\t    });\n\t\n\t    for (var key in topology.objects) {\n\t      scale.object(topology.objects[key]);\n\t    }\n\t\n\t    topology.arcs = topology.arcs.map(function(arc) {\n\t      return arc.map(scalePoint);\n\t    });\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction noop() {}\n\n\n/***/ },\n\n/***/ 261:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var svg;\n\t\n\t  //save off default references\n\t  var d3 = window.d3, topojson = window.topojson;\n\t  \n\t  var defaultOptions = {\n\t    scope: 'world',\n\t    responsive: false,\n\t    setProjection: setProjection,\n\t    projection: 'equirectangular',\n\t    dataType: 'json',\n\t    data: {},\n\t    done: function() {},\n\t    fills: {\n\t      defaultFill: '#ABDDA4'\n\t    },\n\t    geographyConfig: {\n\t        dataUrl: null,\n\t        hideAntarctica: true,\n\t        borderWidth: 1,\n\t        borderColor: '#FDFDFD',\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n\t        },\n\t        popupOnHover: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2\n\t    },\n\t    projectionConfig: {\n\t      rotation: [97, 0]\n\t    },\n\t    bubblesConfig: {\n\t        borderWidth: 2,\n\t        borderColor: '#FFFFFF',\n\t        popupOnHover: true,\n\t        radius: null,\n\t        popupTemplate: function(geography, data) {\n\t          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n\t        },\n\t        fillOpacity: 0.75,\n\t        animate: true,\n\t        highlightOnHover: true,\n\t        highlightFillColor: '#FC8D59',\n\t        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n\t        highlightBorderWidth: 2,\n\t        highlightFillOpacity: 0.85,\n\t        exitDelay: 100\n\t    },\n\t    arcConfig: {\n\t      strokeColor: '#DD1C77',\n\t      strokeWidth: 1,\n\t      arcSharpness: 1,\n\t      animationSpeed: 600\n\t    }\n\t  };\n\t\n\t  /*\n\t    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n\t  */\n\t  function val( datumValue, optionsValue, context ) {\n\t    if ( typeof context === 'undefined' ) {\n\t      context = optionsValue;\n\t      optionsValues = undefined;\n\t    }\n\t    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\t\n\t    if (typeof value === 'undefined') {\n\t      return  null;\n\t    }\n\t\n\t    if ( typeof value === 'function' ) {\n\t      var fnContext = [context];\n\t      if ( context.geography ) {\n\t        fnContext = [context.geography, context.data];\n\t      }\n\t      return value.apply(null, fnContext);\n\t    }\n\t    else {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  function addContainer( element, height, width ) {\n\t    this.svg = d3.select( element ).append('svg')\n\t      .attr('width', width || element.offsetWidth)\n\t      .attr('data-width', width || element.offsetWidth)\n\t      .attr('class', 'datamap')\n\t      .attr('height', height || element.offsetHeight)\n\t      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\t\n\t    if (this.options.responsive) {\n\t      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n\t      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n\t      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\t    \n\t    }\n\t\n\t    return this.svg;\n\t  }\n\t\n\t  // setProjection takes the svg element and options\n\t  function setProjection( element, options ) {\n\t    var width = options.width || element.offsetWidth;\n\t    var height = options.height || element.offsetHeight;\n\t    var projection, path;\n\t    var svg = this.svg;\n\t    \n\t    if ( options && typeof options.scope === 'undefined') {\n\t      options.scope = 'world';\n\t    }\n\t\n\t    if ( options.scope === 'usa' ) {\n\t      projection = d3.geo.albersUsa()\n\t        .scale(width)\n\t        .translate([width / 2, height / 2]);\n\t    }\n\t    else if ( options.scope === 'world' ) {\n\t      projection = d3.geo[options.projection]()\n\t        .scale((width + 1) / 2 / Math.PI)\n\t        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n\t    }\n\t\n\t    if ( options.projection === 'orthographic' ) {\n\t\n\t      svg.append(\"defs\").append(\"path\")\n\t        .datum({type: \"Sphere\"})\n\t        .attr(\"id\", \"sphere\")\n\t        .attr(\"d\", path);\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"stroke\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t\n\t      svg.append(\"use\")\n\t          .attr(\"class\", \"fill\")\n\t          .attr(\"xlink:href\", \"#sphere\");\n\t      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n\t    }\n\t\n\t    path = d3.geo.path()\n\t      .projection( projection );\n\t\n\t    return {path: path, projection: projection};\n\t  }\n\t\n\t  function addStyleBlock() {\n\t    if ( d3.select('.datamaps-style-block').empty() ) {\n\t      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n\t      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n\t    }\n\t  }\n\t\n\t  function drawSubunits( data ) {\n\t    var fillData = this.options.fills,\n\t        colorCodeData = this.options.data || {},\n\t        geoConfig = this.options.geographyConfig;\n\t\n\t\n\t    var subunits = this.svg.select('g.datamaps-subunits');\n\t    if ( subunits.empty() ) {\n\t      subunits = this.addLayer('datamaps-subunits', null, true);\n\t    }\n\t\n\t    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n\t    if ( geoConfig.hideAntarctica ) {\n\t      geoData = geoData.filter(function(feature) {\n\t        return feature.id !== \"ATA\";\n\t      });\n\t    }\n\t\n\t    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\t\n\t    geo.enter()\n\t      .append('path')\n\t      .attr('d', this.path)\n\t      .attr('class', function(d) {\n\t        return 'datamaps-subunit ' + d.id;\n\t      })\n\t      .attr('data-info', function(d) {\n\t        return JSON.stringify( colorCodeData[d.id]);\n\t      })\n\t      .style('fill', function(d) {\n\t        //if fillKey - use that\n\t        //otherwise check 'fill'\n\t        //otherwise check 'defaultFill'\n\t        var fillColor;\n\t\n\t        var datum = colorCodeData[d.id];\n\t        if ( datum && datum.fillKey ) {\n\t          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n\t        }\n\t        \n\t        if ( typeof fillColor === 'undefined' ) {\n\t          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n\t        }\n\t\n\t        return fillColor;\n\t      })\n\t      .style('stroke-width', geoConfig.borderWidth)\n\t      .style('stroke', geoConfig.borderColor);\n\t  }\n\t\n\t  function handleGeographyConfig () {\n\t    var hoverover;\n\t    var svg = this.svg;\n\t    var self = this;\n\t    var options = this.options.geographyConfig;\n\t\n\t    if ( options.highlightOnHover || options.popupOnHover ) {\n\t      svg.selectAll('.datamaps-subunit')\n\t        .on('mouseover', function(d) {\n\t          var $this = d3.select(this);\n\t          var datum = self.options.data[d.id] || {};\n\t          if ( options.highlightOnHover ) {\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t\n\t            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n\t            if ( ! /((MSIE)|(Trident))/.test ) {\n\t             moveToFront.call(this);\n\t            }\n\t          }\n\t\n\t          if ( options.popupOnHover ) {\n\t            self.updatePopup($this, d, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function() {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t          $this.on('mousemove', null);\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        });\n\t    }\n\t    \n\t    function moveToFront() {\n\t      this.parentNode.appendChild(this);\n\t    }\n\t  }\n\t\n\t  //plugin to add a simple map legend\n\t  function addLegend(layer, data, options) {\n\t    data = data || {};\n\t    if ( !this.options.fills ) {\n\t      return;\n\t    }\n\t\n\t    var html = '<dl>';\n\t    var label = '';\n\t    if ( data.legendTitle ) {\n\t      html = '<h2>' + data.legendTitle + '</h2>' + html;\n\t    }\n\t    for ( var fillKey in this.options.fills ) {\n\t\n\t      if ( fillKey === 'defaultFill') {\n\t        if (! data.defaultFillName ) {\n\t          continue;\n\t        }\n\t        label = data.defaultFillName;\n\t      } else {\n\t        if (data.labels && data.labels[fillKey]) {\n\t          label = data.labels[fillKey];\n\t        } else {\n\t          label= fillKey + ': ';\n\t        }\n\t      }\n\t      html += '<dt>' + label + '</dt>';\n\t      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n\t    }\n\t    html += '</dl>';\n\t\n\t    var hoverover = d3.select( this.options.element ).append('div')\n\t      .attr('class', 'datamaps-legend')\n\t      .html(html);\n\t  }\n\t\n\t    function addGraticule ( layer, options ) {\n\t      var graticule = d3.geo.graticule();\n\t      this.svg.insert(\"path\", '.datamaps-subunits')\n\t        .datum(graticule)\n\t        .attr(\"class\", \"datamaps-graticule\")\n\t        .attr(\"d\", this.path); \n\t  }\n\t\n\t  function handleArcs (layer, data, options) {\n\t    var self = this,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - arcs must be an array\";\n\t    }\n\t\n\t    // For some reason arc options were put in an `options` object instead of the parent arc\n\t    // I don't like this, so to match bubbles and other plugins I'm moving it\n\t    // This is to keep backwards compatability\n\t    for ( var i = 0; i < data.length; i++ ) {\n\t      data[i] = defaults(data[i], data[i].options);\n\t      delete data[i].options;\n\t    }\n\t\n\t    if ( typeof options === \"undefined\" ) {\n\t      options = defaultOptions.arcConfig;\n\t    }\n\t\n\t    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\t\n\t    var path = d3.geo.path()\n\t        .projection(self.projection);\n\t\n\t    arcs\n\t      .enter()\n\t        .append('svg:path')\n\t        .attr('class', 'datamaps-arc')\n\t        .style('stroke-linecap', 'round')\n\t        .style('stroke', function(datum) {\n\t          return val(datum.strokeColor, options.strokeColor, datum);\n\t        })\n\t        .style('fill', 'none')\n\t        .style('stroke-width', function(datum) {\n\t            return val(datum.strokeWidth, options.strokeWidth, datum);\n\t        })\n\t        .attr('d', function(datum) {\n\t            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n\t            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n\t            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n\t            if (options.greatArc) {\n\t                  // TODO: Move this to inside `if` clause when setting attr `d`\n\t              var greatArc = d3.geo.greatArc()\n\t                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n\t                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\t\n\t              return path(greatArc(datum))\n\t            }\n\t            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n\t            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n\t        })\n\t        .transition()\n\t          .delay(100)\n\t          .style('fill', function(datum) {\n\t            /*\n\t              Thank you Jake Archibald, this is awesome.\n\t              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n\t            */\n\t            var length = this.getTotalLength();\n\t            this.style.transition = this.style.WebkitTransition = 'none';\n\t            this.style.strokeDasharray = length + ' ' + length;\n\t            this.style.strokeDashoffset = length;\n\t            this.getBoundingClientRect();\n\t            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n\t            this.style.strokeDashoffset = '0';\n\t            return 'none';\n\t          })\n\t\n\t    arcs.exit()\n\t      .transition()\n\t      .style('opacity', 0)\n\t      .remove();\n\t  }\n\t\n\t  function handleLabels ( layer, options ) {\n\t    var self = this;\n\t    options = options || {};\n\t    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n\t    this.svg.selectAll(\".datamaps-subunit\")\n\t      .attr(\"data-foo\", function(d) {\n\t        var center = self.path.centroid(d);\n\t        var xOffset = 7.5, yOffset = 5;\n\t\n\t        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n\t        if ( d.id === \"NY\" ) xOffset = -1;\n\t        if ( d.id === \"MI\" ) yOffset = 18;\n\t        if ( d.id === \"LA\" ) xOffset = 13;\n\t\n\t        var x,y;\n\t\n\t        x = center[0] - xOffset;\n\t        y = center[1] + yOffset;\n\t\n\t        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n\t        if ( smallStateIndex > -1) {\n\t          var yStart = labelStartCoodinates[1];\n\t          x = labelStartCoodinates[0];\n\t          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n\t          layer.append(\"line\")\n\t            .attr(\"x1\", x - 3)\n\t            .attr(\"y1\", y - 5)\n\t            .attr(\"x2\", center[0])\n\t            .attr(\"y2\", center[1])\n\t            .style(\"stroke\", options.labelColor || \"#000\")\n\t            .style(\"stroke-width\", options.lineWidth || 1)\n\t        }\n\t\n\t        layer.append(\"text\")\n\t          .attr(\"x\", x)\n\t          .attr(\"y\", y)\n\t          .style(\"font-size\", (options.fontSize || 10) + 'px')\n\t          .style(\"font-family\", options.fontFamily || \"Verdana\")\n\t          .style(\"fill\", options.labelColor || \"#000\")\n\t          .text( d.id );\n\t        return \"bar\";\n\t      });\n\t  }\n\t\n\t\n\t  function handleBubbles (layer, data, options ) {\n\t    var self = this,\n\t        fillData = this.options.fills,\n\t        svg = this.svg;\n\t\n\t    if ( !data || (data && !data.slice) ) {\n\t      throw \"Datamaps Error - bubbles must be an array\";\n\t    }\n\t\n\t    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\t\n\t    bubbles\n\t      .enter()\n\t        .append('svg:circle')\n\t        .attr('class', 'datamaps-bubble')\n\t        .attr('cx', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[0];\n\t        })\n\t        .attr('cy', function ( datum ) {\n\t          var latLng;\n\t          if ( datumHasCoords(datum) ) {\n\t            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n\t          }\n\t          else if ( datum.centered ) {\n\t            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n\t          }\n\t          if ( latLng ) return latLng[1];;\n\t        })\n\t        .attr('r', 0) //for animation purposes\n\t        .attr('data-info', function(d) {\n\t          return JSON.stringify(d);\n\t        })\n\t        .style('stroke', function ( datum ) {\n\t          return val(datum.borderColor, options.borderColor, datum);\n\t        })\n\t        .style('stroke-width', function ( datum ) {\n\t          return val(datum.borderWidth, options.borderWidth, datum);\n\t        })\n\t        .style('fill-opacity', function ( datum ) {\n\t          return val(datum.fillOpacity, options.fillOpacity, datum);\n\t        })\n\t        .style('fill', function ( datum ) {\n\t          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n\t          return fillColor || fillData.defaultFill;\n\t        })\n\t        .on('mouseover', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //save all previous attributes for mouseout\n\t            var previousAttributes = {\n\t              'fill':  $this.style('fill'),\n\t              'stroke': $this.style('stroke'),\n\t              'stroke-width': $this.style('stroke-width'),\n\t              'fill-opacity': $this.style('fill-opacity')\n\t            };\n\t\n\t            $this\n\t              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n\t              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n\t              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n\t              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n\t              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\t          }\n\t\n\t          if (options.popupOnHover) {\n\t            self.updatePopup($this, datum, options, svg);\n\t          }\n\t        })\n\t        .on('mouseout', function ( datum ) {\n\t          var $this = d3.select(this);\n\t\n\t          if (options.highlightOnHover) {\n\t            //reapply previous attributes\n\t            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n\t            for ( var attr in previousAttributes ) {\n\t              $this.style(attr, previousAttributes[attr]);\n\t            }\n\t          }\n\t\n\t          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n\t        })\n\t        .transition().duration(400)\n\t          .attr('r', function ( datum ) {\n\t            return val(datum.radius, options.radius, datum);\n\t          });\n\t\n\t    bubbles.exit()\n\t      .transition()\n\t        .delay(options.exitDelay)\n\t        .attr(\"r\", 0)\n\t        .remove();\n\t\n\t    function datumHasCoords (datum) {\n\t      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n\t    }\n\t\n\t  }\n\t\n\t  //stolen from underscore.js\n\t  function defaults(obj) {\n\t    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n\t      if (source) {\n\t        for (var prop in source) {\n\t          if (obj[prop] == null) obj[prop] = source[prop];\n\t        }\n\t      }\n\t    });\n\t    return obj;\n\t  }\n\t  /**************************************\n\t             Public Functions\n\t  ***************************************/\n\t\n\t  function Datamap( options ) {\n\t\n\t    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n\t      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n\t   }\n\t    //set options for global use\n\t    this.options = defaults(options, defaultOptions);\n\t    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n\t    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n\t    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n\t    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\t\n\t    //add the SVG container\n\t    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n\t      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n\t    }\n\t\n\t    /* Add core plugins to this instance */\n\t    this.addPlugin('bubbles', handleBubbles);\n\t    this.addPlugin('legend', addLegend);\n\t    this.addPlugin('arc', handleArcs);\n\t    this.addPlugin('labels', handleLabels);\n\t    this.addPlugin('graticule', addGraticule);\n\t\n\t    //append style block with basic hoverover styles\n\t    if ( ! this.options.disableDefaultStyles ) {\n\t      addStyleBlock();\n\t    }\n\t\n\t    return this.draw();\n\t  }\n\t\n\t  // resize map\n\t  Datamap.prototype.resize = function () {\n\t\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    if (options.responsive) {\n\t      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n\t          newsize = options.element.clientWidth,\n\t          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\t\n\t      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n\t    }\n\t  }\n\t\n\t  // actually draw the features(states & countries)\n\t  Datamap.prototype.draw = function() {\n\t    //save off in a closure\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    //set projections and paths based on scope\n\t    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\t\n\t    this.path = pathAndProjection.path;\n\t    this.projection = pathAndProjection.projection;\n\t\n\t    //if custom URL for topojson data, retrieve it and render\n\t    if ( options.geographyConfig.dataUrl ) {\n\t      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n\t        if ( error ) throw new Error(error);\n\t        self.customTopo = results;\n\t        draw( results );\n\t      });\n\t    }\n\t    else {\n\t      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n\t    }\n\t\n\t    return this;\n\t\n\t      function draw (data) {\n\t        // if fetching remote data, draw the map first then call `updateChoropleth`\n\t        if ( self.options.dataUrl ) {\n\t          //allow for csv or json data types\n\t          d3[self.options.dataType](self.options.dataUrl, function(data) {\n\t            //in the case of csv, transform data to object\n\t            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n\t              var tmpData = {};\n\t              for(var i = 0; i < data.length; i++) {\n\t                tmpData[data[i].id] = data[i];\n\t              } \n\t              data = tmpData;\n\t            }\n\t            Datamaps.prototype.updateChoropleth.call(self, data);\n\t          });\n\t        }\n\t        drawSubunits.call(self, data);\n\t        handleGeographyConfig.call(self);\n\t\n\t        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n\t          hoverover = d3.select( self.options.element ).append('div')\n\t            .attr('class', 'datamaps-hoverover')\n\t            .style('z-index', 10001)\n\t            .style('position', 'absolute');\n\t        }\n\t\n\t        //fire off finished callback\n\t        self.options.done(self);\n\t      }\n\t  };\n\t  /**************************************\n\t                TopoJSON\n\t  ***************************************/\n\t  Datamap.prototype.worldTopo = {\n\t    \"type\": \"Topology\",\n\t    \"objects\": {\n\t        \"world\": {\n\t            \"type\": \"GeometryCollection\",\n\t            \"geometries\": [{\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Afghanistan\"\n\t                },\n\t                \"id\": \"AFG\",\n\t                \"arcs\": [\n\t                    [0, 1, 2, 3, 4, 5]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Angola\"\n\t                },\n\t                \"id\": \"AGO\",\n\t                \"arcs\": [\n\t                    [\n\t                        [6, 7, 8, 9]\n\t                    ],\n\t                    [\n\t                        [10, 11, 12]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Albania\"\n\t                },\n\t                \"id\": \"ALB\",\n\t                \"arcs\": [\n\t                    [13, 14, 15, 16, 17]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United Arab Emirates\"\n\t                },\n\t                \"id\": \"ARE\",\n\t                \"arcs\": [\n\t                    [18, 19, 20, 21, 22]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Argentina\"\n\t                },\n\t                \"id\": \"ARG\",\n\t                \"arcs\": [\n\t                    [\n\t                        [23, 24]\n\t                    ],\n\t                    [\n\t                        [25, 26, 27, 28, 29, 30]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Armenia\"\n\t                },\n\t                \"id\": \"ARM\",\n\t                \"arcs\": [\n\t                    [31, 32, 33, 34, 35]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Antarctica\"\n\t                },\n\t                \"id\": \"ATA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [36]\n\t                    ],\n\t                    [\n\t                        [37]\n\t                    ],\n\t                    [\n\t                        [38]\n\t                    ],\n\t                    [\n\t                        [39]\n\t                    ],\n\t                    [\n\t                        [40]\n\t                    ],\n\t                    [\n\t                        [41]\n\t                    ],\n\t                    [\n\t                        [42]\n\t                    ],\n\t                    [\n\t                        [43]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"French Southern and Antarctic Lands\"\n\t                },\n\t                \"id\": \"ATF\",\n\t                \"arcs\": [\n\t                    [44]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Australia\"\n\t                },\n\t                \"id\": \"AUS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [45]\n\t                    ],\n\t                    [\n\t                        [46]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Austria\"\n\t                },\n\t                \"id\": \"AUT\",\n\t                \"arcs\": [\n\t                    [47, 48, 49, 50, 51, 52, 53]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Azerbaijan\"\n\t                },\n\t                \"id\": \"AZE\",\n\t                \"arcs\": [\n\t                    [\n\t                        [54, -35]\n\t                    ],\n\t                    [\n\t                        [55, 56, -33, 57, 58]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Burundi\"\n\t                },\n\t                \"id\": \"BDI\",\n\t                \"arcs\": [\n\t                    [59, 60, 61]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Belgium\"\n\t                },\n\t                \"id\": \"BEL\",\n\t                \"arcs\": [\n\t                    [62, 63, 64, 65, 66]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Benin\"\n\t                },\n\t                \"id\": \"BEN\",\n\t                \"arcs\": [\n\t                    [67, 68, 69, 70, 71]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Burkina Faso\"\n\t                },\n\t                \"id\": \"BFA\",\n\t                \"arcs\": [\n\t                    [72, 73, 74, -70, 75, 76]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bangladesh\"\n\t                },\n\t                \"id\": \"BGD\",\n\t                \"arcs\": [\n\t                    [77, 78, 79]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bulgaria\"\n\t                },\n\t                \"id\": \"BGR\",\n\t                \"arcs\": [\n\t                    [80, 81, 82, 83, 84, 85]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"The Bahamas\"\n\t                },\n\t                \"id\": \"BHS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [86]\n\t                    ],\n\t                    [\n\t                        [87]\n\t                    ],\n\t                    [\n\t                        [88]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bosnia and Herzegovina\"\n\t                },\n\t                \"id\": \"BIH\",\n\t                \"arcs\": [\n\t                    [89, 90, 91]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Belarus\"\n\t                },\n\t                \"id\": \"BLR\",\n\t                \"arcs\": [\n\t                    [92, 93, 94, 95, 96]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Belize\"\n\t                },\n\t                \"id\": \"BLZ\",\n\t                \"arcs\": [\n\t                    [97, 98, 99]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bolivia\"\n\t                },\n\t                \"id\": \"BOL\",\n\t                \"arcs\": [\n\t                    [100, 101, 102, 103, -31]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Brazil\"\n\t                },\n\t                \"id\": \"BRA\",\n\t                \"arcs\": [\n\t                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Brunei\"\n\t                },\n\t                \"id\": \"BRN\",\n\t                \"arcs\": [\n\t                    [113, 114]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Bhutan\"\n\t                },\n\t                \"id\": \"BTN\",\n\t                \"arcs\": [\n\t                    [115, 116]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Botswana\"\n\t                },\n\t                \"id\": \"BWA\",\n\t                \"arcs\": [\n\t                    [117, 118, 119, 120]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Central African Republic\"\n\t                },\n\t                \"id\": \"CAF\",\n\t                \"arcs\": [\n\t                    [121, 122, 123, 124, 125, 126, 127]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Canada\"\n\t                },\n\t                \"id\": \"CAN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [128]\n\t                    ],\n\t                    [\n\t                        [129]\n\t                    ],\n\t                    [\n\t                        [130]\n\t                    ],\n\t                    [\n\t                        [131]\n\t                    ],\n\t                    [\n\t                        [132]\n\t                    ],\n\t                    [\n\t                        [133]\n\t                    ],\n\t                    [\n\t                        [134]\n\t                    ],\n\t                    [\n\t                        [135]\n\t                    ],\n\t                    [\n\t                        [136]\n\t                    ],\n\t                    [\n\t                        [137]\n\t                    ],\n\t                    [\n\t                        [138, 139, 140, 141]\n\t                    ],\n\t                    [\n\t                        [142]\n\t                    ],\n\t                    [\n\t                        [143]\n\t                    ],\n\t                    [\n\t                        [144]\n\t                    ],\n\t                    [\n\t                        [145]\n\t                    ],\n\t                    [\n\t                        [146]\n\t                    ],\n\t                    [\n\t                        [147]\n\t                    ],\n\t                    [\n\t                        [148]\n\t                    ],\n\t                    [\n\t                        [149]\n\t                    ],\n\t                    [\n\t                        [150]\n\t                    ],\n\t                    [\n\t                        [151]\n\t                    ],\n\t                    [\n\t                        [152]\n\t                    ],\n\t                    [\n\t                        [153]\n\t                    ],\n\t                    [\n\t                        [154]\n\t                    ],\n\t                    [\n\t                        [155]\n\t                    ],\n\t                    [\n\t                        [156]\n\t                    ],\n\t                    [\n\t                        [157]\n\t                    ],\n\t                    [\n\t                        [158]\n\t                    ],\n\t                    [\n\t                        [159]\n\t                    ],\n\t                    [\n\t                        [160]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Switzerland\"\n\t                },\n\t                \"id\": \"CHE\",\n\t                \"arcs\": [\n\t                    [-51, 161, 162, 163]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Chile\"\n\t                },\n\t                \"id\": \"CHL\",\n\t                \"arcs\": [\n\t                    [\n\t                        [-24, 164]\n\t                    ],\n\t                    [\n\t                        [-30, 165, 166, -101]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"China\"\n\t                },\n\t                \"id\": \"CHN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [167]\n\t                    ],\n\t                    [\n\t                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ivory Coast\"\n\t                },\n\t                \"id\": \"CIV\",\n\t                \"arcs\": [\n\t                    [184, 185, 186, 187, -73, 188]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cameroon\"\n\t                },\n\t                \"id\": \"CMR\",\n\t                \"arcs\": [\n\t                    [189, 190, 191, 192, 193, 194, -128, 195]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Democratic Republic of the Congo\"\n\t                },\n\t                \"id\": \"COD\",\n\t                \"arcs\": [\n\t                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Republic of the Congo\"\n\t                },\n\t                \"id\": \"COG\",\n\t                \"arcs\": [\n\t                    [-12, 203, 204, -196, -127, -202]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Colombia\"\n\t                },\n\t                \"id\": \"COL\",\n\t                \"arcs\": [\n\t                    [205, 206, 207, 208, 209, -107, 210]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Costa Rica\"\n\t                },\n\t                \"id\": \"CRI\",\n\t                \"arcs\": [\n\t                    [211, 212, 213, 214]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cuba\"\n\t                },\n\t                \"id\": \"CUB\",\n\t                \"arcs\": [\n\t                    [215]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Northern Cyprus\"\n\t                },\n\t                \"id\": \"-99\",\n\t                \"arcs\": [\n\t                    [216, 217]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cyprus\"\n\t                },\n\t                \"id\": \"CYP\",\n\t                \"arcs\": [\n\t                    [218, -218]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Czech Republic\"\n\t                },\n\t                \"id\": \"CZE\",\n\t                \"arcs\": [\n\t                    [-53, 219, 220, 221]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Germany\"\n\t                },\n\t                \"id\": \"DEU\",\n\t                \"arcs\": [\n\t                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Djibouti\"\n\t                },\n\t                \"id\": \"DJI\",\n\t                \"arcs\": [\n\t                    [229, 230, 231, 232]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Denmark\"\n\t                },\n\t                \"id\": \"DNK\",\n\t                \"arcs\": [\n\t                    [\n\t                        [233]\n\t                    ],\n\t                    [\n\t                        [-229, 234]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Dominican Republic\"\n\t                },\n\t                \"id\": \"DOM\",\n\t                \"arcs\": [\n\t                    [235, 236]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Algeria\"\n\t                },\n\t                \"id\": \"DZA\",\n\t                \"arcs\": [\n\t                    [237, 238, 239, 240, 241, 242, 243, 244]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ecuador\"\n\t                },\n\t                \"id\": \"ECU\",\n\t                \"arcs\": [\n\t                    [245, -206, 246]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Egypt\"\n\t                },\n\t                \"id\": \"EGY\",\n\t                \"arcs\": [\n\t                    [247, 248, 249, 250, 251]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Eritrea\"\n\t                },\n\t                \"id\": \"ERI\",\n\t                \"arcs\": [\n\t                    [252, 253, 254, -233]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Spain\"\n\t                },\n\t                \"id\": \"ESP\",\n\t                \"arcs\": [\n\t                    [255, 256, 257, 258]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Estonia\"\n\t                },\n\t                \"id\": \"EST\",\n\t                \"arcs\": [\n\t                    [259, 260, 261]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ethiopia\"\n\t                },\n\t                \"id\": \"ETH\",\n\t                \"arcs\": [\n\t                    [-232, 262, 263, 264, 265, 266, 267, -253]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Finland\"\n\t                },\n\t                \"id\": \"FIN\",\n\t                \"arcs\": [\n\t                    [268, 269, 270, 271]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Fiji\"\n\t                },\n\t                \"id\": \"FJI\",\n\t                \"arcs\": [\n\t                    [\n\t                        [272]\n\t                    ],\n\t                    [\n\t                        [273, 274]\n\t                    ],\n\t                    [\n\t                        [275, -275]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Falkland Islands\"\n\t                },\n\t                \"id\": \"FLK\",\n\t                \"arcs\": [\n\t                    [276]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"France\"\n\t                },\n\t                \"id\": \"FRA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [277]\n\t                    ],\n\t                    [\n\t                        [278, -225, -163, 279, 280, -257, 281, -66]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"French Guiana\"\n\t                },\n\t                \"id\": \"GUF\",\n\t                \"arcs\": [\n\t                    [282, 283, 284, 285, -111]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Gabon\"\n\t                },\n\t                \"id\": \"GAB\",\n\t                \"arcs\": [\n\t                    [286, 287, -190, -205]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United Kingdom\"\n\t                },\n\t                \"id\": \"GBR\",\n\t                \"arcs\": [\n\t                    [\n\t                        [288, 289]\n\t                    ],\n\t                    [\n\t                        [290]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Georgia\"\n\t                },\n\t                \"id\": \"GEO\",\n\t                \"arcs\": [\n\t                    [291, 292, -58, -32, 293]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ghana\"\n\t                },\n\t                \"id\": \"GHA\",\n\t                \"arcs\": [\n\t                    [294, -189, -77, 295]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guinea\"\n\t                },\n\t                \"id\": \"GIN\",\n\t                \"arcs\": [\n\t                    [296, 297, 298, 299, 300, 301, -187]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Gambia\"\n\t                },\n\t                \"id\": \"GMB\",\n\t                \"arcs\": [\n\t                    [302, 303]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guinea Bissau\"\n\t                },\n\t                \"id\": \"GNB\",\n\t                \"arcs\": [\n\t                    [304, 305, -300]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Equatorial Guinea\"\n\t                },\n\t                \"id\": \"GNQ\",\n\t                \"arcs\": [\n\t                    [306, -191, -288]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Greece\"\n\t                },\n\t                \"id\": \"GRC\",\n\t                \"arcs\": [\n\t                    [\n\t                        [307]\n\t                    ],\n\t                    [\n\t                        [308, -15, 309, -84, 310]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Greenland\"\n\t                },\n\t                \"id\": \"GRL\",\n\t                \"arcs\": [\n\t                    [311]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guatemala\"\n\t                },\n\t                \"id\": \"GTM\",\n\t                \"arcs\": [\n\t                    [312, 313, -100, 314, 315, 316]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Guyana\"\n\t                },\n\t                \"id\": \"GUY\",\n\t                \"arcs\": [\n\t                    [317, 318, -109, 319]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Honduras\"\n\t                },\n\t                \"id\": \"HND\",\n\t                \"arcs\": [\n\t                    [320, 321, -316, 322, 323]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Croatia\"\n\t                },\n\t                \"id\": \"HRV\",\n\t                \"arcs\": [\n\t                    [324, -92, 325, 326, 327, 328]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Haiti\"\n\t                },\n\t                \"id\": \"HTI\",\n\t                \"arcs\": [\n\t                    [-237, 329]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Hungary\"\n\t                },\n\t                \"id\": \"HUN\",\n\t                \"arcs\": [\n\t                    [-48, 330, 331, 332, 333, -329, 334]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Indonesia\"\n\t                },\n\t                \"id\": \"IDN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [335]\n\t                    ],\n\t                    [\n\t                        [336, 337]\n\t                    ],\n\t                    [\n\t                        [338]\n\t                    ],\n\t                    [\n\t                        [339]\n\t                    ],\n\t                    [\n\t                        [340]\n\t                    ],\n\t                    [\n\t                        [341]\n\t                    ],\n\t                    [\n\t                        [342]\n\t                    ],\n\t                    [\n\t                        [343]\n\t                    ],\n\t                    [\n\t                        [344, 345]\n\t                    ],\n\t                    [\n\t                        [346]\n\t                    ],\n\t                    [\n\t                        [347]\n\t                    ],\n\t                    [\n\t                        [348, 349]\n\t                    ],\n\t                    [\n\t                        [350]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"India\"\n\t                },\n\t                \"id\": \"IND\",\n\t                \"arcs\": [\n\t                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ireland\"\n\t                },\n\t                \"id\": \"IRL\",\n\t                \"arcs\": [\n\t                    [355, -289]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Iran\"\n\t                },\n\t                \"id\": \"IRN\",\n\t                \"arcs\": [\n\t                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Iraq\"\n\t                },\n\t                \"id\": \"IRQ\",\n\t                \"arcs\": [\n\t                    [362, 363, 364, 365, 366, 367, -360]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Iceland\"\n\t                },\n\t                \"id\": \"ISL\",\n\t                \"arcs\": [\n\t                    [368]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Israel\"\n\t                },\n\t                \"id\": \"ISR\",\n\t                \"arcs\": [\n\t                    [369, 370, 371, -252, 372, 373, 374]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Italy\"\n\t                },\n\t                \"id\": \"ITA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [375]\n\t                    ],\n\t                    [\n\t                        [376]\n\t                    ],\n\t                    [\n\t                        [377, 378, -280, -162, -50]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Jamaica\"\n\t                },\n\t                \"id\": \"JAM\",\n\t                \"arcs\": [\n\t                    [379]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Jordan\"\n\t                },\n\t                \"id\": \"JOR\",\n\t                \"arcs\": [\n\t                    [-370, 380, -366, 381, 382, -372, 383]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Japan\"\n\t                },\n\t                \"id\": \"JPN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [384]\n\t                    ],\n\t                    [\n\t                        [385]\n\t                    ],\n\t                    [\n\t                        [386]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kazakhstan\"\n\t                },\n\t                \"id\": \"KAZ\",\n\t                \"arcs\": [\n\t                    [387, 388, 389, 390, -181, 391]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kenya\"\n\t                },\n\t                \"id\": \"KEN\",\n\t                \"arcs\": [\n\t                    [392, 393, 394, 395, -265, 396]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kyrgyzstan\"\n\t                },\n\t                \"id\": \"KGZ\",\n\t                \"arcs\": [\n\t                    [-392, -180, 397, 398]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Cambodia\"\n\t                },\n\t                \"id\": \"KHM\",\n\t                \"arcs\": [\n\t                    [399, 400, 401, 402]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"South Korea\"\n\t                },\n\t                \"id\": \"KOR\",\n\t                \"arcs\": [\n\t                    [403, 404]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kosovo\"\n\t                },\n\t                \"id\": \"-99\",\n\t                \"arcs\": [\n\t                    [-18, 405, 406, 407]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Kuwait\"\n\t                },\n\t                \"id\": \"KWT\",\n\t                \"arcs\": [\n\t                    [408, 409, -364]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Laos\"\n\t                },\n\t                \"id\": \"LAO\",\n\t                \"arcs\": [\n\t                    [410, 411, -172, 412, -401]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Lebanon\"\n\t                },\n\t                \"id\": \"LBN\",\n\t                \"arcs\": [\n\t                    [-374, 413, 414]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Liberia\"\n\t                },\n\t                \"id\": \"LBR\",\n\t                \"arcs\": [\n\t                    [415, 416, -297, -186]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Libya\"\n\t                },\n\t                \"id\": \"LBY\",\n\t                \"arcs\": [\n\t                    [417, -245, 418, 419, -250, 420, 421]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sri Lanka\"\n\t                },\n\t                \"id\": \"LKA\",\n\t                \"arcs\": [\n\t                    [422]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Lesotho\"\n\t                },\n\t                \"id\": \"LSO\",\n\t                \"arcs\": [\n\t                    [423]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Lithuania\"\n\t                },\n\t                \"id\": \"LTU\",\n\t                \"arcs\": [\n\t                    [424, 425, 426, -93, 427]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Luxembourg\"\n\t                },\n\t                \"id\": \"LUX\",\n\t                \"arcs\": [\n\t                    [-226, -279, -65]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Latvia\"\n\t                },\n\t                \"id\": \"LVA\",\n\t                \"arcs\": [\n\t                    [428, -262, 429, -94, -427]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Morocco\"\n\t                },\n\t                \"id\": \"MAR\",\n\t                \"arcs\": [\n\t                    [-242, 430, 431]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Moldova\"\n\t                },\n\t                \"id\": \"MDA\",\n\t                \"arcs\": [\n\t                    [432, 433]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Madagascar\"\n\t                },\n\t                \"id\": \"MDG\",\n\t                \"arcs\": [\n\t                    [434]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mexico\"\n\t                },\n\t                \"id\": \"MEX\",\n\t                \"arcs\": [\n\t                    [435, -98, -314, 436, 437]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Macedonia\"\n\t                },\n\t                \"id\": \"MKD\",\n\t                \"arcs\": [\n\t                    [-408, 438, -85, -310, -14]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mali\"\n\t                },\n\t                \"id\": \"MLI\",\n\t                \"arcs\": [\n\t                    [439, -239, 440, -74, -188, -302, 441]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Myanmar\"\n\t                },\n\t                \"id\": \"MMR\",\n\t                \"arcs\": [\n\t                    [442, -78, -353, -173, -412, 443]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Montenegro\"\n\t                },\n\t                \"id\": \"MNE\",\n\t                \"arcs\": [\n\t                    [444, -326, -91, 445, -406, -17]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mongolia\"\n\t                },\n\t                \"id\": \"MNG\",\n\t                \"arcs\": [\n\t                    [446, -183]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mozambique\"\n\t                },\n\t                \"id\": \"MOZ\",\n\t                \"arcs\": [\n\t                    [447, 448, 449, 450, 451, 452, 453, 454]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Mauritania\"\n\t                },\n\t                \"id\": \"MRT\",\n\t                \"arcs\": [\n\t                    [455, 456, 457, -240, -440]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Malawi\"\n\t                },\n\t                \"id\": \"MWI\",\n\t                \"arcs\": [\n\t                    [-455, 458, 459]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Malaysia\"\n\t                },\n\t                \"id\": \"MYS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [460, 461]\n\t                    ],\n\t                    [\n\t                        [-349, 462, -115, 463]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Namibia\"\n\t                },\n\t                \"id\": \"NAM\",\n\t                \"arcs\": [\n\t                    [464, -8, 465, -119, 466]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"New Caledonia\"\n\t                },\n\t                \"id\": \"NCL\",\n\t                \"arcs\": [\n\t                    [467]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Niger\"\n\t                },\n\t                \"id\": \"NER\",\n\t                \"arcs\": [\n\t                    [-75, -441, -238, -418, 468, -194, 469, -71]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Nigeria\"\n\t                },\n\t                \"id\": \"NGA\",\n\t                \"arcs\": [\n\t                    [470, -72, -470, -193]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Nicaragua\"\n\t                },\n\t                \"id\": \"NIC\",\n\t                \"arcs\": [\n\t                    [471, -324, 472, -213]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Netherlands\"\n\t                },\n\t                \"id\": \"NLD\",\n\t                \"arcs\": [\n\t                    [-227, -63, 473]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Norway\"\n\t                },\n\t                \"id\": \"NOR\",\n\t                \"arcs\": [\n\t                    [\n\t                        [474, -272, 475, 476]\n\t                    ],\n\t                    [\n\t                        [477]\n\t                    ],\n\t                    [\n\t                        [478]\n\t                    ],\n\t                    [\n\t                        [479]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Nepal\"\n\t                },\n\t                \"id\": \"NPL\",\n\t                \"arcs\": [\n\t                    [-352, -176]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"New Zealand\"\n\t                },\n\t                \"id\": \"NZL\",\n\t                \"arcs\": [\n\t                    [\n\t                        [480]\n\t                    ],\n\t                    [\n\t                        [481]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Oman\"\n\t                },\n\t                \"id\": \"OMN\",\n\t                \"arcs\": [\n\t                    [\n\t                        [482, 483, -22, 484]\n\t                    ],\n\t                    [\n\t                        [-20, 485]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Pakistan\"\n\t                },\n\t                \"id\": \"PAK\",\n\t                \"arcs\": [\n\t                    [-178, -355, 486, -358, -5]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Panama\"\n\t                },\n\t                \"id\": \"PAN\",\n\t                \"arcs\": [\n\t                    [487, -215, 488, -208]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Peru\"\n\t                },\n\t                \"id\": \"PER\",\n\t                \"arcs\": [\n\t                    [-167, 489, -247, -211, -106, -102]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Philippines\"\n\t                },\n\t                \"id\": \"PHL\",\n\t                \"arcs\": [\n\t                    [\n\t                        [490]\n\t                    ],\n\t                    [\n\t                        [491]\n\t                    ],\n\t                    [\n\t                        [492]\n\t                    ],\n\t                    [\n\t                        [493]\n\t                    ],\n\t                    [\n\t                        [494]\n\t                    ],\n\t                    [\n\t                        [495]\n\t                    ],\n\t                    [\n\t                        [496]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Papua New Guinea\"\n\t                },\n\t                \"id\": \"PNG\",\n\t                \"arcs\": [\n\t                    [\n\t                        [497]\n\t                    ],\n\t                    [\n\t                        [498]\n\t                    ],\n\t                    [\n\t                        [-345, 499]\n\t                    ],\n\t                    [\n\t                        [500]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Poland\"\n\t                },\n\t                \"id\": \"POL\",\n\t                \"arcs\": [\n\t                    [-224, 501, 502, -428, -97, 503, 504, -221]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Puerto Rico\"\n\t                },\n\t                \"id\": \"PRI\",\n\t                \"arcs\": [\n\t                    [505]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"North Korea\"\n\t                },\n\t                \"id\": \"PRK\",\n\t                \"arcs\": [\n\t                    [506, 507, -405, 508, -169]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Portugal\"\n\t                },\n\t                \"id\": \"PRT\",\n\t                \"arcs\": [\n\t                    [-259, 509]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Paraguay\"\n\t                },\n\t                \"id\": \"PRY\",\n\t                \"arcs\": [\n\t                    [-104, -105, -26]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Qatar\"\n\t                },\n\t                \"id\": \"QAT\",\n\t                \"arcs\": [\n\t                    [510, 511]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Romania\"\n\t                },\n\t                \"id\": \"ROU\",\n\t                \"arcs\": [\n\t                    [512, -434, 513, 514, -81, 515, -333]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Russia\"\n\t                },\n\t                \"id\": \"RUS\",\n\t                \"arcs\": [\n\t                    [\n\t                        [516]\n\t                    ],\n\t                    [\n\t                        [-503, 517, -425]\n\t                    ],\n\t                    [\n\t                        [518, 519]\n\t                    ],\n\t                    [\n\t                        [520]\n\t                    ],\n\t                    [\n\t                        [521]\n\t                    ],\n\t                    [\n\t                        [522]\n\t                    ],\n\t                    [\n\t                        [523]\n\t                    ],\n\t                    [\n\t                        [524]\n\t                    ],\n\t                    [\n\t                        [525]\n\t                    ],\n\t                    [\n\t                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n\t                    ],\n\t                    [\n\t                        [532]\n\t                    ],\n\t                    [\n\t                        [533]\n\t                    ],\n\t                    [\n\t                        [534]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Rwanda\"\n\t                },\n\t                \"id\": \"RWA\",\n\t                \"arcs\": [\n\t                    [535, -61, -198, 536]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Western Sahara\"\n\t                },\n\t                \"id\": \"ESH\",\n\t                \"arcs\": [\n\t                    [-241, -458, 537, -431]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Saudi Arabia\"\n\t                },\n\t                \"id\": \"SAU\",\n\t                \"arcs\": [\n\t                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sudan\"\n\t                },\n\t                \"id\": \"SDN\",\n\t                \"arcs\": [\n\t                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"South Sudan\"\n\t                },\n\t                \"id\": \"SSD\",\n\t                \"arcs\": [\n\t                    [547, -266, -396, 548, -203, -125, 549, -543]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Senegal\"\n\t                },\n\t                \"id\": \"SEN\",\n\t                \"arcs\": [\n\t                    [550, -456, -442, -301, -306, 551, -304]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Solomon Islands\"\n\t                },\n\t                \"id\": \"SLB\",\n\t                \"arcs\": [\n\t                    [\n\t                        [552]\n\t                    ],\n\t                    [\n\t                        [553]\n\t                    ],\n\t                    [\n\t                        [554]\n\t                    ],\n\t                    [\n\t                        [555]\n\t                    ],\n\t                    [\n\t                        [556]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sierra Leone\"\n\t                },\n\t                \"id\": \"SLE\",\n\t                \"arcs\": [\n\t                    [557, -298, -417]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"El Salvador\"\n\t                },\n\t                \"id\": \"SLV\",\n\t                \"arcs\": [\n\t                    [558, -317, -322]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Somaliland\"\n\t                },\n\t                \"id\": \"-99\",\n\t                \"arcs\": [\n\t                    [-263, -231, 559, 560]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Somalia\"\n\t                },\n\t                \"id\": \"SOM\",\n\t                \"arcs\": [\n\t                    [-397, -264, -561, 561]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Republic of Serbia\"\n\t                },\n\t                \"id\": \"SRB\",\n\t                \"arcs\": [\n\t                    [-86, -439, -407, -446, -90, -325, -334, -516]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Suriname\"\n\t                },\n\t                \"id\": \"SUR\",\n\t                \"arcs\": [\n\t                    [562, -285, 563, -283, -110, -319]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Slovakia\"\n\t                },\n\t                \"id\": \"SVK\",\n\t                \"arcs\": [\n\t                    [-505, 564, -331, -54, -222]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Slovenia\"\n\t                },\n\t                \"id\": \"SVN\",\n\t                \"arcs\": [\n\t                    [-49, -335, -328, 565, -378]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Sweden\"\n\t                },\n\t                \"id\": \"SWE\",\n\t                \"arcs\": [\n\t                    [-476, -271, 566]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Swaziland\"\n\t                },\n\t                \"id\": \"SWZ\",\n\t                \"arcs\": [\n\t                    [567, -451]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Syria\"\n\t                },\n\t                \"id\": \"SYR\",\n\t                \"arcs\": [\n\t                    [-381, -375, -415, 568, 569, -367]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Chad\"\n\t                },\n\t                \"id\": \"TCD\",\n\t                \"arcs\": [\n\t                    [-469, -422, -545, -122, -195]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Togo\"\n\t                },\n\t                \"id\": \"TGO\",\n\t                \"arcs\": [\n\t                    [570, -296, -76, -69]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Thailand\"\n\t                },\n\t                \"id\": \"THA\",\n\t                \"arcs\": [\n\t                    [571, -462, 572, -444, -411, -400]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Tajikistan\"\n\t                },\n\t                \"id\": \"TJK\",\n\t                \"arcs\": [\n\t                    [-398, -179, -3, 573]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Turkmenistan\"\n\t                },\n\t                \"id\": \"TKM\",\n\t                \"arcs\": [\n\t                    [-357, 574, -389, 575, -1]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"East Timor\"\n\t                },\n\t                \"id\": \"TLS\",\n\t                \"arcs\": [\n\t                    [576, -337]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Trinidad and Tobago\"\n\t                },\n\t                \"id\": \"TTO\",\n\t                \"arcs\": [\n\t                    [577]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Tunisia\"\n\t                },\n\t                \"id\": \"TUN\",\n\t                \"arcs\": [\n\t                    [-244, 578, -419]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Turkey\"\n\t                },\n\t                \"id\": \"TUR\",\n\t                \"arcs\": [\n\t                    [\n\t                        [-294, -36, -361, -368, -570, 579]\n\t                    ],\n\t                    [\n\t                        [-311, -83, 580]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Taiwan\"\n\t                },\n\t                \"id\": \"TWN\",\n\t                \"arcs\": [\n\t                    [581]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United Republic of Tanzania\"\n\t                },\n\t                \"id\": \"TZA\",\n\t                \"arcs\": [\n\t                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Uganda\"\n\t                },\n\t                \"id\": \"UGA\",\n\t                \"arcs\": [\n\t                    [-537, -197, -549, -395, -585]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Ukraine\"\n\t                },\n\t                \"id\": \"UKR\",\n\t                \"arcs\": [\n\t                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Uruguay\"\n\t                },\n\t                \"id\": \"URY\",\n\t                \"arcs\": [\n\t                    [-113, 586, -28]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"United States of America\"\n\t                },\n\t                \"id\": \"USA\",\n\t                \"arcs\": [\n\t                    [\n\t                        [587]\n\t                    ],\n\t                    [\n\t                        [588]\n\t                    ],\n\t                    [\n\t                        [589]\n\t                    ],\n\t                    [\n\t                        [590]\n\t                    ],\n\t                    [\n\t                        [591]\n\t                    ],\n\t                    [\n\t                        [592, -438, 593, -139]\n\t                    ],\n\t                    [\n\t                        [594]\n\t                    ],\n\t                    [\n\t                        [595]\n\t                    ],\n\t                    [\n\t                        [596]\n\t                    ],\n\t                    [\n\t                        [-141, 597]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Uzbekistan\"\n\t                },\n\t                \"id\": \"UZB\",\n\t                \"arcs\": [\n\t                    [-576, -388, -399, -574, -2]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Venezuela\"\n\t                },\n\t                \"id\": \"VEN\",\n\t                \"arcs\": [\n\t                    [598, -320, -108, -210]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Vietnam\"\n\t                },\n\t                \"id\": \"VNM\",\n\t                \"arcs\": [\n\t                    [599, -402, -413, -171]\n\t                ]\n\t            }, {\n\t                \"type\": \"MultiPolygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Vanuatu\"\n\t                },\n\t                \"id\": \"VUT\",\n\t                \"arcs\": [\n\t                    [\n\t                        [600]\n\t                    ],\n\t                    [\n\t                        [601]\n\t                    ]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"West Bank\"\n\t                },\n\t                \"id\": \"PSE\",\n\t                \"arcs\": [\n\t                    [-384, -371]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Yemen\"\n\t                },\n\t                \"id\": \"YEM\",\n\t                \"arcs\": [\n\t                    [602, -542, -483]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"South Africa\"\n\t                },\n\t                \"id\": \"ZAF\",\n\t                \"arcs\": [\n\t                    [-467, -118, 603, -452, -568, -450, 604],\n\t                    [-424]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Zambia\"\n\t                },\n\t                \"id\": \"ZMB\",\n\t                \"arcs\": [\n\t                    [-459, -454, 605, -120, -466, -7, -200, -584]\n\t                ]\n\t            }, {\n\t                \"type\": \"Polygon\",\n\t                \"properties\": {\n\t                    \"name\": \"Zimbabwe\"\n\t                },\n\t                \"id\": \"ZWE\",\n\t                \"arcs\": [\n\t                    [-604, -121, -606, -453]\n\t                ]\n\t            }]\n\t        }\n\t    },\n\t    \"arcs\": [\n\t        [\n\t            [6700, 7164],\n\t            [28, -23],\n\t            [21, 8],\n\t            [6, 27],\n\t            [22, 9],\n\t            [15, 18],\n\t            [6, 47],\n\t            [23, 11],\n\t            [5, 21],\n\t            [13, -15],\n\t            [8, -2]\n\t        ],\n\t        [\n\t            [6847, 7265],\n\t            [16, -1],\n\t            [20, -12]\n\t        ],\n\t        [\n\t            [6883, 7252],\n\t            [9, -7],\n\t            [20, 19],\n\t            [9, -12],\n\t            [9, 27],\n\t            [17, -1],\n\t            [4, 9],\n\t            [3, 24],\n\t            [12, 20],\n\t            [15, -13],\n\t            [-3, -18],\n\t            [9, -3],\n\t            [-3, -50],\n\t            [11, -19],\n\t            [10, 12],\n\t            [12, 6],\n\t            [17, 27],\n\t            [19, -5],\n\t            [29, 0]\n\t        ],\n\t        [\n\t            [7082, 7268],\n\t            [5, -17]\n\t        ],\n\t        [\n\t            [7087, 7251],\n\t            [-16, -6],\n\t            [-14, -11],\n\t            [-32, -7],\n\t            [-30, -13],\n\t            [-16, -25],\n\t            [6, -25],\n\t            [4, -30],\n\t            [-14, -25],\n\t            [1, -22],\n\t            [-8, -22],\n\t            [-26, 2],\n\t            [11, -39],\n\t            [-18, -15],\n\t            [-12, -35],\n\t            [2, -36],\n\t            [-11, -16],\n\t            [-10, 5],\n\t            [-22, -8],\n\t            [-3, -16],\n\t            [-20, 0],\n\t            [-16, -34],\n\t            [-1, -50],\n\t            [-36, -24],\n\t            [-19, 5],\n\t            [-6, -13],\n\t            [-16, 7],\n\t            [-28, -8],\n\t            [-47, 30]\n\t        ],\n\t        [\n\t            [6690, 6820],\n\t            [25, 53],\n\t            [-2, 38],\n\t            [-21, 10],\n\t            [-2, 38],\n\t            [-9, 47],\n\t            [12, 32],\n\t            [-12, 9],\n\t            [7, 43],\n\t            [12, 74]\n\t        ],\n\t        [\n\t            [5664, 4412],\n\t            [3, -18],\n\t            [-4, -29],\n\t            [5, -28],\n\t            [-4, -22],\n\t            [3, -20],\n\t            [-58, 1],\n\t            [-2, -188],\n\t            [19, -49],\n\t            [18, -37]\n\t        ],\n\t        [\n\t            [5644, 4022],\n\t            [-51, -24],\n\t            [-67, 9],\n\t            [-19, 28],\n\t            [-113, -3],\n\t            [-4, -4],\n\t            [-17, 27],\n\t            [-18, 2],\n\t            [-16, -10],\n\t            [-14, -12]\n\t        ],\n\t        [\n\t            [5325, 4035],\n\t            [-2, 38],\n\t            [4, 51],\n\t            [9, 55],\n\t            [2, 25],\n\t            [9, 53],\n\t            [6, 24],\n\t            [16, 39],\n\t            [9, 26],\n\t            [3, 44],\n\t            [-1, 34],\n\t            [-9, 21],\n\t            [-7, 36],\n\t            [-7, 35],\n\t            [2, 12],\n\t            [8, 24],\n\t            [-8, 57],\n\t            [-6, 39],\n\t            [-14, 38],\n\t            [3, 11]\n\t        ],\n\t        [\n\t            [5342, 4697],\n\t            [11, 8],\n\t            [8, -1],\n\t            [10, 7],\n\t            [82, -1],\n\t            [7, -44],\n\t            [8, -35],\n\t            [6, -19],\n\t            [11, -31],\n\t            [18, 5],\n\t            [9, 8],\n\t            [16, -8],\n\t            [4, 14],\n\t            [7, 35],\n\t            [17, 2],\n\t            [2, 10],\n\t            [14, 1],\n\t            [-3, -22],\n\t            [34, 1],\n\t            [1, -37],\n\t            [5, -23],\n\t            [-4, -36],\n\t            [2, -36],\n\t            [9, -22],\n\t            [-1, -70],\n\t            [7, 5],\n\t            [12, -1],\n\t            [17, 8],\n\t            [13, -3]\n\t        ],\n\t        [\n\t            [5338, 4715],\n\t            [-8, 45]\n\t        ],\n\t        [\n\t            [5330, 4760],\n\t            [12, 25],\n\t            [8, 10],\n\t            [10, -20]\n\t        ],\n\t        [\n\t            [5360, 4775],\n\t            [-10, -12],\n\t            [-4, -16],\n\t            [-1, -25],\n\t            [-7, -7]\n\t        ],\n\t        [\n\t            [5571, 7530],\n\t            [-3, -20],\n\t            [4, -25],\n\t            [11, -15]\n\t        ],\n\t        [\n\t            [5583, 7470],\n\t            [0, -15],\n\t            [-9, -9],\n\t            [-2, -19],\n\t            [-13, -29]\n\t        ],\n\t        [\n\t            [5559, 7398],\n\t            [-5, 5],\n\t            [0, 13],\n\t            [-15, 19],\n\t            [-3, 29],\n\t            [2, 40],\n\t            [4, 18],\n\t            [-4, 10]\n\t        ],\n\t        [\n\t            [5538, 7532],\n\t            [-2, 18],\n\t            [12, 29],\n\t            [1, -11],\n\t            [8, 6]\n\t        ],\n\t        [\n\t            [5557, 7574],\n\t            [6, -16],\n\t            [7, -6],\n\t            [1, -22]\n\t        ],\n\t        [\n\t            [6432, 6490],\n\t            [5, 3],\n\t            [1, -16],\n\t            [22, 9],\n\t            [23, -2],\n\t            [17, -1],\n\t            [19, 39],\n\t            [20, 38],\n\t            [18, 37]\n\t        ],\n\t        [\n\t            [6557, 6597],\n\t            [5, -20]\n\t        ],\n\t        [\n\t            [6562, 6577],\n\t            [4, -47]\n\t        ],\n\t        [\n\t            [6566, 6530],\n\t            [-14, 0],\n\t            [-3, -39],\n\t            [5, -8],\n\t            [-12, -12],\n\t            [0, -24],\n\t            [-8, -24],\n\t            [-1, -24]\n\t        ],\n\t        [\n\t            [6533, 6399],\n\t            [-6, -12],\n\t            [-83, 29],\n\t            [-11, 60],\n\t            [-1, 14]\n\t        ],\n\t        [\n\t            [3140, 1814],\n\t            [-17, 2],\n\t            [-30, 0],\n\t            [0, 132]\n\t        ],\n\t        [\n\t            [3093, 1948],\n\t            [11, -27],\n\t            [14, -45],\n\t            [36, -35],\n\t            [39, -15],\n\t            [-13, -30],\n\t            [-26, -2],\n\t            [-14, 20]\n\t        ],\n\t        [\n\t            [3258, 3743],\n\t            [51, -96],\n\t            [23, -9],\n\t            [34, -44],\n\t            [29, -23],\n\t            [4, -26],\n\t            [-28, -90],\n\t            [28, -16],\n\t            [32, -9],\n\t            [22, 10],\n\t            [25, 45],\n\t            [4, 52]\n\t        ],\n\t        [\n\t            [3482, 3537],\n\t            [14, 11],\n\t            [14, -34],\n\t            [-1, -47],\n\t            [-23, -33],\n\t            [-19, -24],\n\t            [-31, -57],\n\t            [-37, -81]\n\t        ],\n\t        [\n\t            [3399, 3272],\n\t            [-7, -47],\n\t            [-7, -61],\n\t            [0, -58],\n\t            [-6, -14],\n\t            [-2, -38]\n\t        ],\n\t        [\n\t            [3377, 3054],\n\t            [-2, -31],\n\t            [35, -50],\n\t            [-4, -41],\n\t            [18, -26],\n\t            [-2, -29],\n\t            [-26, -75],\n\t            [-42, -32],\n\t            [-55, -12],\n\t            [-31, 6],\n\t            [6, -36],\n\t            [-6, -44],\n\t            [5, -30],\n\t            [-16, -20],\n\t            [-29, -8],\n\t            [-26, 21],\n\t            [-11, -15],\n\t            [4, -59],\n\t            [18, -18],\n\t            [16, 19],\n\t            [8, -31],\n\t            [-26, -18],\n\t            [-22, -37],\n\t            [-4, -59],\n\t            [-7, -32],\n\t            [-26, 0],\n\t            [-22, -31],\n\t            [-8, -44],\n\t            [28, -43],\n\t            [26, -12],\n\t            [-9, -53],\n\t            [-33, -33],\n\t            [-18, -70],\n\t            [-25, -23],\n\t            [-12, -28],\n\t            [9, -61],\n\t            [19, -34],\n\t            [-12, 3]\n\t        ],\n\t        [\n\t            [3095, 1968],\n\t            [-26, 9],\n\t            [-67, 8],\n\t            [-11, 34],\n\t            [0, 45],\n\t            [-18, -4],\n\t            [-10, 21],\n\t            [-3, 63],\n\t            [22, 26],\n\t            [9, 37],\n\t            [-4, 30],\n\t            [15, 51],\n\t            [10, 78],\n\t            [-3, 35],\n\t            [12, 11],\n\t            [-3, 22],\n\t            [-13, 12],\n\t            [10, 25],\n\t            [-13, 22],\n\t            [-6, 68],\n\t            [11, 12],\n\t            [-5, 72],\n\t            [7, 61],\n\t            [7, 52],\n\t            [17, 22],\n\t            [-9, 58],\n\t            [0, 54],\n\t            [21, 38],\n\t            [-1, 50],\n\t            [16, 57],\n\t            [0, 55],\n\t            [-7, 11],\n\t            [-13, 102],\n\t            [17, 60],\n\t            [-2, 58],\n\t            [10, 53],\n\t            [18, 56],\n\t            [20, 36],\n\t            [-9, 24],\n\t            [6, 19],\n\t            [-1, 98],\n\t            [30, 29],\n\t            [10, 62],\n\t            [-3, 14]\n\t        ],\n\t        [\n\t            [3136, 3714],\n\t            [23, 54],\n\t            [36, -15],\n\t            [16, -42],\n\t            [11, 47],\n\t            [32, -2],\n\t            [4, -13]\n\t        ],\n\t        [\n\t            [6210, 7485],\n\t            [39, 9]\n\t        ],\n\t        [\n\t            [6249, 7494],\n\t            [5, -15],\n\t            [11, -10],\n\t            [-6, -15],\n\t            [15, -21],\n\t            [-8, -18],\n\t            [12, -16],\n\t            [13, -10],\n\t            [0, -41]\n\t        ],\n\t        [\n\t            [6291, 7348],\n\t            [-10, -2]\n\t        ],\n\t        [\n\t            [6281, 7346],\n\t            [-11, 34],\n\t            [0, 10],\n\t            [-12, -1],\n\t            [-9, 16],\n\t            [-5, -1]\n\t        ],\n\t        [\n\t            [6244, 7404],\n\t            [-11, 17],\n\t            [-21, 15],\n\t            [3, 28],\n\t            [-5, 21]\n\t        ],\n\t        [\n\t            [3345, 329],\n\t            [-8, -30],\n\t            [-8, -27],\n\t            [-59, 8],\n\t            [-62, -3],\n\t            [-34, 20],\n\t            [0, 2],\n\t            [-16, 17],\n\t            [63, -2],\n\t            [60, -6],\n\t            [20, 24],\n\t            [15, 21],\n\t            [29, -24]\n\t        ],\n\t        [\n\t            [577, 361],\n\t            [-53, -8],\n\t            [-36, 21],\n\t            [-17, 21],\n\t            [-1, 3],\n\t            [-18, 16],\n\t            [17, 22],\n\t            [52, -9],\n\t            [28, -18],\n\t            [21, -21],\n\t            [7, -27]\n\t        ],\n\t        [\n\t            [3745, 447],\n\t            [35, -26],\n\t            [12, -36],\n\t            [3, -25],\n\t            [1, -30],\n\t            [-43, -19],\n\t            [-45, -15],\n\t            [-52, -14],\n\t            [-59, -11],\n\t            [-65, 3],\n\t            [-37, 20],\n\t            [5, 24],\n\t            [59, 16],\n\t            [24, 20],\n\t            [18, 26],\n\t            [12, 22],\n\t            [17, 20],\n\t            [18, 25],\n\t            [14, 0],\n\t            [41, 12],\n\t            [42, -12]\n\t        ],\n\t        [\n\t            [1633, 715],\n\t            [36, -9],\n\t            [33, 10],\n\t            [-16, -20],\n\t            [-26, -15],\n\t            [-39, 4],\n\t            [-27, 21],\n\t            [6, 20],\n\t            [33, -11]\n\t        ],\n\t        [\n\t            [1512, 716],\n\t            [43, -23],\n\t            [-17, 3],\n\t            [-36, 5],\n\t            [-38, 17],\n\t            [20, 12],\n\t            [28, -14]\n\t        ],\n\t        [\n\t            [2250, 808],\n\t            [31, -8],\n\t            [30, 7],\n\t            [17, -34],\n\t            [-22, 5],\n\t            [-34, -2],\n\t            [-34, 2],\n\t            [-38, -4],\n\t            [-28, 12],\n\t            [-15, 24],\n\t            [18, 11],\n\t            [35, -8],\n\t            [40, -5]\n\t        ],\n\t        [\n\t            [3098, 866],\n\t            [4, -27],\n\t            [-5, -23],\n\t            [-8, -22],\n\t            [-33, -8],\n\t            [-31, -12],\n\t            [-36, 1],\n\t            [14, 24],\n\t            [-33, -9],\n\t            [-31, -8],\n\t            [-21, 18],\n\t            [-2, 24],\n\t            [30, 23],\n\t            [20, 7],\n\t            [32, -2],\n\t            [8, 30],\n\t            [1, 22],\n\t            [0, 47],\n\t            [16, 28],\n\t            [25, 9],\n\t            [15, -22],\n\t            [6, -22],\n\t            [12, -26],\n\t            [10, -26],\n\t            [7, -26]\n\t        ],\n\t        [\n\t            [3371, 1268],\n\t            [-11, -13],\n\t            [-21, 9],\n\t            [-23, -6],\n\t            [-19, -14],\n\t            [-20, -15],\n\t            [-14, -17],\n\t            [-4, -23],\n\t            [2, -22],\n\t            [13, -20],\n\t            [-19, -14],\n\t            [-26, -4],\n\t            [-15, -20],\n\t            [-17, -19],\n\t            [-17, -25],\n\t            [-4, -22],\n\t            [9, -24],\n\t            [15, -19],\n\t            [23, -14],\n\t            [21, -18],\n\t            [12, -23],\n\t            [6, -22],\n\t            [8, -24],\n\t            [13, -19],\n\t            [8, -22],\n\t            [4, -55],\n\t            [8, -22],\n\t            [2, -23],\n\t            [9, -23],\n\t            [-4, -31],\n\t            [-15, -24],\n\t            [-17, -20],\n\t            [-37, -8],\n\t            [-12, -21],\n\t            [-17, -20],\n\t            [-42, -22],\n\t            [-37, -9],\n\t            [-35, -13],\n\t            [-37, -13],\n\t            [-22, -24],\n\t            [-45, -2],\n\t            [-49, 2],\n\t            [-44, -4],\n\t            [-47, 0],\n\t            [9, -24],\n\t            [42, -10],\n\t            [31, -16],\n\t            [18, -21],\n\t            [-31, -19],\n\t            [-48, 6],\n\t            [-40, -15],\n\t            [-2, -24],\n\t            [-1, -23],\n\t            [33, -20],\n\t            [6, -22],\n\t            [35, -22],\n\t            [59, -9],\n\t            [50, -16],\n\t            [40, -19],\n\t            [50, -18],\n\t            [70, -10],\n\t            [68, -16],\n\t            [47, -17],\n\t            [52, -20],\n\t            [27, -28],\n\t            [13, -22],\n\t            [34, 21],\n\t            [46, 17],\n\t            [48, 19],\n\t            [58, 15],\n\t            [49, 16],\n\t            [69, 1],\n\t            [68, -8],\n\t            [56, -14],\n\t            [18, 26],\n\t            [39, 17],\n\t            [70, 1],\n\t            [55, 13],\n\t            [52, 13],\n\t            [58, 8],\n\t            [62, 10],\n\t            [43, 15],\n\t            [-20, 21],\n\t            [-12, 21],\n\t            [0, 22],\n\t            [-54, -2],\n\t            [-57, -10],\n\t            [-54, 0],\n\t            [-8, 22],\n\t            [4, 44],\n\t            [12, 13],\n\t            [40, 14],\n\t            [47, 14],\n\t            [34, 17],\n\t            [33, 18],\n\t            [25, 23],\n\t            [38, 10],\n\t            [38, 8],\n\t            [19, 5],\n\t            [43, 2],\n\t            [41, 8],\n\t            [34, 12],\n\t            [34, 14],\n\t            [30, 14],\n\t            [39, 18],\n\t            [24, 20],\n\t            [26, 17],\n\t            [9, 24],\n\t            [-30, 13],\n\t            [10, 25],\n\t            [18, 18],\n\t            [29, 12],\n\t            [31, 14],\n\t            [28, 18],\n\t            [22, 23],\n\t            [13, 28],\n\t            [21, 16],\n\t            [33, -3],\n\t            [13, -20],\n\t            [34, -2],\n\t            [1, 22],\n\t            [14, 23],\n\t            [30, -6],\n\t            [7, -22],\n\t            [33, -3],\n\t            [36, 10],\n\t            [35, 7],\n\t            [31, -3],\n\t            [12, -25],\n\t            [31, 20],\n\t            [28, 10],\n\t            [31, 9],\n\t            [31, 8],\n\t            [29, 14],\n\t            [31, 9],\n\t            [24, 13],\n\t            [17, 20],\n\t            [20, -15],\n\t            [29, 8],\n\t            [20, -27],\n\t            [16, -21],\n\t            [32, 11],\n\t            [12, 24],\n\t            [28, 16],\n\t            [37, -4],\n\t            [11, -22],\n\t            [22, 22],\n\t            [30, 7],\n\t            [33, 3],\n\t            [29, -2],\n\t            [31, -7],\n\t            [30, -3],\n\t            [13, -20],\n\t            [18, -17],\n\t            [31, 10],\n\t            [32, 3],\n\t            [32, 0],\n\t            [31, 1],\n\t            [28, 8],\n\t            [29, 7],\n\t            [25, 16],\n\t            [26, 11],\n\t            [28, 5],\n\t            [21, 17],\n\t            [15, 32],\n\t            [16, 20],\n\t            [29, -10],\n\t            [11, -21],\n\t            [24, -13],\n\t            [29, 4],\n\t            [19, -21],\n\t            [21, -15],\n\t            [28, 14],\n\t            [10, 26],\n\t            [25, 10],\n\t            [29, 20],\n\t            [27, 8],\n\t            [33, 11],\n\t            [22, 13],\n\t            [22, 14],\n\t            [22, 13],\n\t            [26, -7],\n\t            [25, 21],\n\t            [18, 16],\n\t            [26, -1],\n\t            [23, 14],\n\t            [6, 21],\n\t            [23, 16],\n\t            [23, 11],\n\t            [28, 10],\n\t            [25, 4],\n\t            [25, -3],\n\t            [26, -6],\n\t            [22, -16],\n\t            [3, -26],\n\t            [24, -19],\n\t            [17, -17],\n\t            [33, -7],\n\t            [19, -16],\n\t            [23, -16],\n\t            [26, -3],\n\t            [23, 11],\n\t            [24, 24],\n\t            [26, -12],\n\t            [27, -7],\n\t            [26, -7],\n\t            [27, -5],\n\t            [28, 0],\n\t            [23, -61],\n\t            [-1, -15],\n\t            [-4, -27],\n\t            [-26, -15],\n\t            [-22, -22],\n\t            [4, -23],\n\t            [31, 1],\n\t            [-4, -23],\n\t            [-14, -22],\n\t            [-13, -24],\n\t            [21, -19],\n\t            [32, -6],\n\t            [32, 11],\n\t            [15, 23],\n\t            [10, 22],\n\t            [15, 18],\n\t            [17, 18],\n\t            [7, 21],\n\t            [15, 29],\n\t            [18, 5],\n\t            [31, 3],\n\t            [28, 7],\n\t            [28, 9],\n\t            [14, 23],\n\t            [8, 22],\n\t            [19, 22],\n\t            [27, 15],\n\t            [23, 12],\n\t            [16, 19],\n\t            [15, 11],\n\t            [21, 9],\n\t            [27, -6],\n\t            [25, 6],\n\t            [28, 7],\n\t            [30, -4],\n\t            [20, 17],\n\t            [14, 39],\n\t            [11, -16],\n\t            [13, -28],\n\t            [23, -12],\n\t            [27, -4],\n\t            [26, 7],\n\t            [29, -5],\n\t            [26, -1],\n\t            [17, 6],\n\t            [24, -4],\n\t            [21, -12],\n\t            [25, 8],\n\t            [30, 0],\n\t            [25, 8],\n\t            [29, -8],\n\t            [19, 19],\n\t            [14, 20],\n\t            [19, 16],\n\t            [35, 44],\n\t            [18, -8],\n\t            [21, -16],\n\t            [18, -21],\n\t            [36, -36],\n\t            [27, -1],\n\t            [25, 0],\n\t            [30, 7],\n\t            [30, 8],\n\t            [23, 16],\n\t            [19, 18],\n\t            [31, 2],\n\t            [21, 13],\n\t            [22, -12],\n\t            [14, -18],\n\t            [19, -19],\n\t            [31, 2],\n\t            [19, -15],\n\t            [33, -15],\n\t            [35, -5],\n\t            [29, 4],\n\t            [21, 19],\n\t            [19, 18],\n\t            [25, 5],\n\t            [25, -8],\n\t            [29, -6],\n\t            [26, 9],\n\t            [25, 0],\n\t            [24, -6],\n\t            [26, -5],\n\t            [25, 10],\n\t            [30, 9],\n\t            [28, 3],\n\t            [32, 0],\n\t            [25, 5],\n\t            [25, 5],\n\t            [8, 29],\n\t            [1, 24],\n\t            [17, -16],\n\t            [5, -27],\n\t            [10, -24],\n\t            [11, -20],\n\t            [23, -10],\n\t            [32, 4],\n\t            [36, 1],\n\t            [25, 3],\n\t            [37, 0],\n\t            [26, 1],\n\t            [36, -2],\n\t            [31, -5],\n\t            [20, -18],\n\t            [-5, -22],\n\t            [18, -18],\n\t            [30, -13],\n\t            [31, -15],\n\t            [35, -11],\n\t            [38, -9],\n\t            [28, -9],\n\t            [32, -2],\n\t            [18, 20],\n\t            [24, -16],\n\t            [21, -19],\n\t            [25, -13],\n\t            [34, -6],\n\t            [32, -7],\n\t            [13, -23],\n\t            [32, -14],\n\t            [21, -21],\n\t            [31, -9],\n\t            [32, 1],\n\t            [30, -4],\n\t            [33, 1],\n\t            [34, -4],\n\t            [31, -8],\n\t            [28, -14],\n\t            [29, -12],\n\t            [20, -17],\n\t            [-3, -23],\n\t            [-15, -21],\n\t            [-13, -27],\n\t            [-9, -21],\n\t            [-14, -24],\n\t            [-36, -9],\n\t            [-16, -21],\n\t            [-36, -13],\n\t            [-13, -23],\n\t            [-19, -22],\n\t            [-20, -18],\n\t            [-11, -25],\n\t            [-7, -22],\n\t            [-3, -26],\n\t            [0, -22],\n\t            [16, -23],\n\t            [6, -22],\n\t            [13, -21],\n\t            [52, -8],\n\t            [11, -26],\n\t            [-50, -9],\n\t            [-43, -13],\n\t            [-52, -2],\n\t            [-24, -34],\n\t            [-5, -27],\n\t            [-12, -22],\n\t            [-14, -22],\n\t            [37, -20],\n\t            [14, -24],\n\t            [24, -22],\n\t            [33, -20],\n\t            [39, -19],\n\t            [42, -18],\n\t            [64, -19],\n\t            [14, -29],\n\t            [80, -12],\n\t            [5, -5],\n\t            [21, -17],\n\t            [77, 15],\n\t            [63, -19],\n\t            [48, -14],\n\t            [-9997, -1],\n\t            [24, 35],\n\t            [50, -19],\n\t            [3, 2],\n\t            [30, 19],\n\t            [4, 0],\n\t            [3, -1],\n\t            [40, -25],\n\t            [35, 25],\n\t            [7, 3],\n\t            [81, 11],\n\t            [27, -14],\n\t            [13, -7],\n\t            [41, -20],\n\t            [79, -15],\n\t            [63, -18],\n\t            [107, -14],\n\t            [80, 16],\n\t            [118, -11],\n\t            [67, -19],\n\t            [73, 17],\n\t            [78, 17],\n\t            [6, 27],\n\t            [-110, 3],\n\t            [-89, 14],\n\t            [-24, 23],\n\t            [-74, 12],\n\t            [5, 27],\n\t            [10, 24],\n\t            [10, 22],\n\t            [-5, 25],\n\t            [-46, 16],\n\t            [-22, 21],\n\t            [-43, 18],\n\t            [68, -3],\n\t            [64, 9],\n\t            [40, -20],\n\t            [50, 18],\n\t            [45, 22],\n\t            [23, 19],\n\t            [-10, 25],\n\t            [-36, 16],\n\t            [-41, 17],\n\t            [-57, 4],\n\t            [-50, 8],\n\t            [-54, 6],\n\t            [-18, 22],\n\t            [-36, 18],\n\t            [-21, 21],\n\t            [-9, 67],\n\t            [14, -6],\n\t            [25, -18],\n\t            [45, 6],\n\t            [44, 8],\n\t            [23, -26],\n\t            [44, 6],\n\t            [37, 13],\n\t            [35, 16],\n\t            [32, 20],\n\t            [41, 5],\n\t            [-1, 22],\n\t            [-9, 22],\n\t            [8, 21],\n\t            [36, 11],\n\t            [16, -20],\n\t            [42, 12],\n\t            [32, 15],\n\t            [40, 1],\n\t            [38, 6],\n\t            [37, 13],\n\t            [30, 13],\n\t            [34, 13],\n\t            [22, -4],\n\t            [19, -4],\n\t            [41, 8],\n\t            [37, -10],\n\t            [38, 1],\n\t            [37, 8],\n\t            [37, -6],\n\t            [41, -6],\n\t            [39, 3],\n\t            [40, -2],\n\t            [42, -1],\n\t            [38, 3],\n\t            [28, 17],\n\t            [34, 9],\n\t            [35, -13],\n\t            [33, 11],\n\t            [30, 21],\n\t            [18, -19],\n\t            [9, -21],\n\t            [18, -19],\n\t            [29, 17],\n\t            [33, -22],\n\t            [38, -7],\n\t            [32, -16],\n\t            [39, 3],\n\t            [36, 11],\n\t            [41, -3],\n\t            [38, -8],\n\t            [38, -10],\n\t            [15, 25],\n\t            [-18, 20],\n\t            [-14, 21],\n\t            [-36, 5],\n\t            [-15, 22],\n\t            [-6, 22],\n\t            [-10, 43],\n\t            [21, -8],\n\t            [36, -3],\n\t            [36, 3],\n\t            [33, -9],\n\t            [28, -17],\n\t            [12, -21],\n\t            [38, -4],\n\t            [36, 9],\n\t            [38, 11],\n\t            [34, 7],\n\t            [28, -14],\n\t            [37, 5],\n\t            [24, 45],\n\t            [23, -27],\n\t            [32, -10],\n\t            [34, 6],\n\t            [23, -23],\n\t            [37, -3],\n\t            [33, -7],\n\t            [34, -12],\n\t            [21, 22],\n\t            [11, 20],\n\t            [28, -23],\n\t            [38, 6],\n\t            [28, -13],\n\t            [19, -19],\n\t            [37, 5],\n\t            [29, 13],\n\t            [29, 15],\n\t            [33, 8],\n\t            [39, 7],\n\t            [36, 8],\n\t            [27, 13],\n\t            [16, 19],\n\t            [7, 25],\n\t            [-3, 24],\n\t            [-9, 24],\n\t            [-10, 23],\n\t            [-9, 23],\n\t            [-7, 21],\n\t            [-1, 23],\n\t            [2, 23],\n\t            [13, 22],\n\t            [11, 24],\n\t            [5, 23],\n\t            [-6, 26],\n\t            [-3, 23],\n\t            [14, 27],\n\t            [15, 17],\n\t            [18, 22],\n\t            [19, 19],\n\t            [22, 17],\n\t            [11, 25],\n\t            [15, 17],\n\t            [18, 15],\n\t            [26, 3],\n\t            [18, 19],\n\t            [19, 11],\n\t            [23, 7],\n\t            [20, 15],\n\t            [16, 19],\n\t            [22, 7],\n\t            [16, -15],\n\t            [-10, -20],\n\t            [-29, -17]\n\t        ],\n\t        [\n\t            [6914, 2185],\n\t            [18, -19],\n\t            [26, -7],\n\t            [1, -11],\n\t            [-7, -27],\n\t            [-43, -4],\n\t            [-1, 31],\n\t            [4, 25],\n\t            [2, 12]\n\t        ],\n\t        [\n\t            [9038, 2648],\n\t            [27, -21],\n\t            [15, 8],\n\t            [22, 12],\n\t            [16, -4],\n\t            [2, -70],\n\t            [-9, -21],\n\t            [-3, -47],\n\t            [-10, 16],\n\t            [-19, -41],\n\t            [-6, 3],\n\t            [-17, 2],\n\t            [-17, 50],\n\t            [-4, 39],\n\t            [-16, 52],\n\t            [1, 27],\n\t            [18, -5]\n\t        ],\n\t        [\n\t            [8987, 4244],\n\t            [10, -46],\n\t            [18, 22],\n\t            [9, -25],\n\t            [13, -23],\n\t            [-3, -26],\n\t            [6, -51],\n\t            [5, -29],\n\t            [7, -7],\n\t            [7, -51],\n\t            [-3, -30],\n\t            [9, -40],\n\t            [31, -31],\n\t            [19, -28],\n\t            [19, -26],\n\t            [-4, -14],\n\t            [16, -37],\n\t            [11, -64],\n\t            [11, 13],\n\t            [11, -26],\n\t            [7, 9],\n\t            [5, -63],\n\t            [19, -36],\n\t            [13, -22],\n\t            [22, -48],\n\t            [8, -48],\n\t            [1, -33],\n\t            [-2, -37],\n\t            [13, -50],\n\t            [-2, -52],\n\t            [-5, -28],\n\t            [-7, -52],\n\t            [1, -34],\n\t            [-6, -43],\n\t            [-12, -53],\n\t            [-21, -29],\n\t            [-10, -46],\n\t            [-9, -29],\n\t            [-8, -51],\n\t            [-11, -30],\n\t            [-7, -44],\n\t            [-4, -41],\n\t            [2, -18],\n\t            [-16, -21],\n\t            [-31, -2],\n\t            [-26, -24],\n\t            [-13, -23],\n\t            [-17, -26],\n\t            [-23, 27],\n\t            [-17, 10],\n\t            [5, 31],\n\t            [-15, -11],\n\t            [-25, -43],\n\t            [-24, 16],\n\t            [-15, 9],\n\t            [-16, 4],\n\t            [-27, 17],\n\t            [-18, 37],\n\t            [-5, 45],\n\t            [-7, 30],\n\t            [-13, 24],\n\t            [-27, 7],\n\t            [9, 28],\n\t            [-7, 44],\n\t            [-13, -41],\n\t            [-25, -11],\n\t            [14, 33],\n\t            [5, 34],\n\t            [10, 29],\n\t            [-2, 44],\n\t            [-22, -50],\n\t            [-18, -21],\n\t            [-10, -47],\n\t            [-22, 25],\n\t            [1, 31],\n\t            [-18, 43],\n\t            [-14, 22],\n\t            [5, 14],\n\t            [-36, 35],\n\t            [-19, 2],\n\t            [-27, 29],\n\t            [-50, -6],\n\t            [-36, -21],\n\t            [-31, -20],\n\t            [-27, 4],\n\t            [-29, -30],\n\t            [-24, -14],\n\t            [-6, -31],\n\t            [-10, -24],\n\t            [-23, -1],\n\t            [-18, -5],\n\t            [-24, 10],\n\t            [-20, -6],\n\t            [-19, -3],\n\t            [-17, -31],\n\t            [-8, 2],\n\t            [-14, -16],\n\t            [-13, -19],\n\t            [-21, 2],\n\t            [-18, 0],\n\t            [-30, 38],\n\t            [-15, 11],\n\t            [1, 34],\n\t            [14, 8],\n\t            [4, 14],\n\t            [-1, 21],\n\t            [4, 41],\n\t            [-3, 35],\n\t            [-15, 60],\n\t            [-4, 33],\n\t            [1, 34],\n\t            [-11, 38],\n\t            [-1, 18],\n\t            [-12, 23],\n\t            [-4, 47],\n\t            [-16, 46],\n\t            [-4, 26],\n\t            [13, -26],\n\t            [-10, 55],\n\t            [14, -17],\n\t            [8, -23],\n\t            [0, 30],\n\t            [-14, 47],\n\t            [-3, 18],\n\t            [-6, 18],\n\t            [3, 34],\n\t            [6, 15],\n\t            [4, 29],\n\t            [-3, 35],\n\t            [11, 42],\n\t            [2, -45],\n\t            [12, 41],\n\t            [22, 20],\n\t            [14, 25],\n\t            [21, 22],\n\t            [13, 4],\n\t            [7, -7],\n\t            [22, 22],\n\t            [17, 6],\n\t            [4, 13],\n\t            [8, 6],\n\t            [15, -2],\n\t            [29, 18],\n\t            [15, 26],\n\t            [7, 31],\n\t            [17, 30],\n\t            [1, 24],\n\t            [1, 32],\n\t            [19, 50],\n\t            [12, -51],\n\t            [12, 12],\n\t            [-10, 28],\n\t            [9, 29],\n\t            [12, -13],\n\t            [3, 45],\n\t            [15, 29],\n\t            [7, 23],\n\t            [14, 10],\n\t            [0, 17],\n\t            [13, -7],\n\t            [0, 15],\n\t            [12, 8],\n\t            [14, 8],\n\t            [20, -27],\n\t            [16, -35],\n\t            [17, 0],\n\t            [18, -6],\n\t            [-6, 33],\n\t            [13, 47],\n\t            [13, 15],\n\t            [-5, 15],\n\t            [12, 34],\n\t            [17, 21],\n\t            [14, -7],\n\t            [24, 11],\n\t            [-1, 30],\n\t            [-20, 19],\n\t            [15, 9],\n\t            [18, -15],\n\t            [15, -24],\n\t            [23, -15],\n\t            [8, 6],\n\t            [17, -18],\n\t            [17, 17],\n\t            [10, -5],\n\t            [7, 11],\n\t            [12, -29],\n\t            [-7, -32],\n\t            [-11, -24],\n\t            [-9, -2],\n\t            [3, -23],\n\t            [-8, -30],\n\t            [-10, -29],\n\t            [2, -17],\n\t            [22, -32],\n\t            [21, -19],\n\t            [15, -20],\n\t            [20, -35],\n\t            [8, 0],\n\t            [14, -15],\n\t            [4, -19],\n\t            [27, -20],\n\t            [18, 20],\n\t            [6, 32],\n\t            [5, 26],\n\t            [4, 33],\n\t            [8, 47],\n\t            [-4, 28],\n\t            [2, 17],\n\t            [-3, 34],\n\t            [4, 45],\n\t            [5, 12],\n\t            [-4, 20],\n\t            [7, 31],\n\t            [5, 32],\n\t            [1, 17],\n\t            [10, 22],\n\t            [8, -29],\n\t            [2, -37],\n\t            [7, -7],\n\t            [1, -25],\n\t            [10, -30],\n\t            [2, -33],\n\t            [-1, -22]\n\t        ],\n\t        [\n\t            [5471, 7900],\n\t            [-2, -24],\n\t            [-16, 0],\n\t            [6, -13],\n\t            [-9, -38]\n\t        ],\n\t        [\n\t            [5450, 7825],\n\t            [-6, -10],\n\t            [-24, -1],\n\t            [-14, -13],\n\t            [-23, 4]\n\t        ],\n\t        [\n\t            [5383, 7805],\n\t            [-40, 15],\n\t            [-6, 21],\n\t            [-27, -10],\n\t            [-4, -12],\n\t            [-16, 9]\n\t        ],\n\t        [\n\t            [5290, 7828],\n\t            [-15, 1],\n\t            [-12, 11],\n\t            [4, 15],\n\t            [-1, 10]\n\t        ],\n\t        [\n\t            [5266, 7865],\n\t            [8, 3],\n\t            [14, -16],\n\t            [4, 16],\n\t            [25, -3],\n\t            [20, 11],\n\t            [13, -2],\n\t            [9, -12],\n\t            [2, 10],\n\t            [-4, 38],\n\t            [10, 8],\n\t            [10, 27]\n\t        ],\n\t        [\n\t            [5377, 7945],\n\t            [21, -19],\n\t            [15, 24],\n\t            [10, 5],\n\t            [22, -18],\n\t            [13, 3],\n\t            [13, -12]\n\t        ],\n\t        [\n\t            [5471, 7928],\n\t            [-3, -7],\n\t            [3, -21]\n\t        ],\n\t        [\n\t            [6281, 7346],\n\t            [-19, 8],\n\t            [-14, 27],\n\t            [-4, 23]\n\t        ],\n\t        [\n\t            [6349, 7527],\n\t            [15, -31],\n\t            [14, -42],\n\t            [13, -2],\n\t            [8, -16],\n\t            [-23, -5],\n\t            [-5, -46],\n\t            [-4, -21],\n\t            [-11, -13],\n\t            [1, -30]\n\t        ],\n\t        [\n\t            [6357, 7321],\n\t            [-7, -3],\n\t            [-17, 31],\n\t            [10, 30],\n\t            [-9, 17],\n\t            [-10, -4],\n\t            [-33, -44]\n\t        ],\n\t        [\n\t            [6249, 7494],\n\t            [6, 10],\n\t            [21, -17],\n\t            [15, -4],\n\t            [4, 7],\n\t            [-14, 32],\n\t            [7, 9]\n\t        ],\n\t        [\n\t            [6288, 7531],\n\t            [8, -2],\n\t            [19, -36],\n\t            [13, -4],\n\t            [4, 15],\n\t            [17, 23]\n\t        ],\n\t        [\n\t            [5814, 4792],\n\t            [-1, 71],\n\t            [-7, 27]\n\t        ],\n\t        [\n\t            [5806, 4890],\n\t            [17, -5],\n\t            [8, 34],\n\t            [15, -4]\n\t        ],\n\t        [\n\t            [5846, 4915],\n\t            [1, -23],\n\t            [6, -14],\n\t            [1, -19],\n\t            [-7, -12],\n\t            [-11, -31],\n\t            [-10, -22],\n\t            [-12, -2]\n\t        ],\n\t        [\n\t            [5092, 8091],\n\t            [20, -5],\n\t            [26, 12],\n\t            [17, -25],\n\t            [16, -14]\n\t        ],\n\t        [\n\t            [5171, 8059],\n\t            [-4, -40]\n\t        ],\n\t        [\n\t            [5167, 8019],\n\t            [-7, -2],\n\t            [-3, -33]\n\t        ],\n\t        [\n\t            [5157, 7984],\n\t            [-24, 26],\n\t            [-14, -4],\n\t            [-20, 28],\n\t            [-13, 23],\n\t            [-13, 1],\n\t            [-4, 21]\n\t        ],\n\t        [\n\t            [5069, 8079],\n\t            [23, 12]\n\t        ],\n\t        [\n\t            [5074, 5427],\n\t            [-23, -7]\n\t        ],\n\t        [\n\t            [5051, 5420],\n\t            [-7, 41],\n\t            [2, 136],\n\t            [-6, 12],\n\t            [-1, 29],\n\t            [-10, 21],\n\t            [-8, 17],\n\t            [3, 31]\n\t        ],\n\t        [\n\t            [5024, 5707],\n\t            [10, 7],\n\t            [6, 26],\n\t            [13, 5],\n\t            [6, 18]\n\t        ],\n\t        [\n\t            [5059, 5763],\n\t            [10, 17],\n\t            [10, 0],\n\t            [21, -34]\n\t        ],\n\t        [\n\t            [5100, 5746],\n\t            [-1, -19],\n\t            [6, -35],\n\t            [-6, -24],\n\t            [3, -16],\n\t            [-13, -37],\n\t            [-9, -18],\n\t            [-5, -37],\n\t            [1, -38],\n\t            [-2, -95]\n\t        ],\n\t        [\n\t            [4921, 5627],\n\t            [-19, 15],\n\t            [-13, -2],\n\t            [-10, -15],\n\t            [-12, 13],\n\t            [-5, 19],\n\t            [-13, 13]\n\t        ],\n\t        [\n\t            [4849, 5670],\n\t            [-1, 34],\n\t            [7, 26],\n\t            [-1, 20],\n\t            [23, 48],\n\t            [4, 41],\n\t            [7, 14],\n\t            [14, -8],\n\t            [11, 12],\n\t            [4, 16],\n\t            [22, 26],\n\t            [5, 19],\n\t            [26, 24],\n\t            [15, 9],\n\t            [7, -12],\n\t            [18, 0]\n\t        ],\n\t        [\n\t            [5010, 5939],\n\t            [-2, -28],\n\t            [3, -27],\n\t            [16, -39],\n\t            [1, -28],\n\t            [32, -14],\n\t            [-1, -40]\n\t        ],\n\t        [\n\t            [5024, 5707],\n\t            [-24, 1]\n\t        ],\n\t        [\n\t            [5000, 5708],\n\t            [-13, 5],\n\t            [-9, -9],\n\t            [-12, 4],\n\t            [-48, -3],\n\t            [-1, -33],\n\t            [4, -45]\n\t        ],\n\t        [\n\t            [7573, 6360],\n\t            [0, -43],\n\t            [-10, 9],\n\t            [2, -47]\n\t        ],\n\t        [\n\t            [7565, 6279],\n\t            [-8, 30],\n\t            [-1, 31],\n\t            [-6, 28],\n\t            [-11, 34],\n\t            [-26, 3],\n\t            [3, -25],\n\t            [-9, -32],\n\t            [-12, 12],\n\t            [-4, -11],\n\t            [-8, 6],\n\t            [-11, 5]\n\t        ],\n\t        [\n\t            [7472, 6360],\n\t            [-4, 49],\n\t            [-10, 45],\n\t            [5, 35],\n\t            [-17, 16],\n\t            [6, 22],\n\t            [18, 22],\n\t            [-20, 31],\n\t            [9, 40],\n\t            [22, -26],\n\t            [14, -3],\n\t            [2, -41],\n\t            [26, -8],\n\t            [26, 1],\n\t            [16, -10],\n\t            [-13, -50],\n\t            [-12, -3],\n\t            [-9, -34],\n\t            [16, -31],\n\t            [4, 38],\n\t            [8, 0],\n\t            [14, -93]\n\t        ],\n\t        [\n\t            [5629, 7671],\n\t            [8, -25],\n\t            [11, 5],\n\t            [21, -9],\n\t            [41, -4],\n\t            [13, 16],\n\t            [33, 13],\n\t            [20, -21],\n\t            [17, -6]\n\t        ],\n\t        [\n\t            [5793, 7640],\n\t            [-15, -25],\n\t            [-10, -42],\n\t            [9, -34]\n\t        ],\n\t        [\n\t            [5777, 7539],\n\t            [-24, 8],\n\t            [-28, -18]\n\t        ],\n\t        [\n\t            [5725, 7529],\n\t            [0, -30],\n\t            [-26, -5],\n\t            [-19, 20],\n\t            [-22, -16],\n\t            [-21, 2]\n\t        ],\n\t        [\n\t            [5637, 7500],\n\t            [-2, 39],\n\t            [-14, 19]\n\t        ],\n\t        [\n\t            [5621, 7558],\n\t            [5, 8],\n\t            [-3, 7],\n\t            [4, 19],\n\t            [11, 18],\n\t            [-14, 26],\n\t            [-2, 21],\n\t            [7, 14]\n\t        ],\n\t        [\n\t            [2846, 6461],\n\t            [-7, -3],\n\t            [-7, 34],\n\t            [-10, 17],\n\t            [6, 38],\n\t            [8, -3],\n\t            [10, -49],\n\t            [0, -34]\n\t        ],\n\t        [\n\t            [2838, 6628],\n\t            [-30, -10],\n\t            [-2, 22],\n\t            [13, 5],\n\t            [18, -2],\n\t            [1, -15]\n\t        ],\n\t        [\n\t            [2861, 6628],\n\t            [-5, -42],\n\t            [-5, 8],\n\t            [0, 31],\n\t            [-12, 23],\n\t            [0, 7],\n\t            [22, -27]\n\t        ],\n\t        [\n\t            [5527, 7708],\n\t            [10, 0],\n\t            [-7, -26],\n\t            [14, -23],\n\t            [-4, -28],\n\t            [-7, -2]\n\t        ],\n\t        [\n\t            [5533, 7629],\n\t            [-5, -6],\n\t            [-9, -13],\n\t            [-4, -33]\n\t        ],\n\t        [\n\t            [5515, 7577],\n\t            [-25, 23],\n\t            [-10, 24],\n\t            [-11, 13],\n\t            [-12, 22],\n\t            [-6, 19],\n\t            [-14, 27],\n\t            [6, 25],\n\t            [10, -14],\n\t            [6, 12],\n\t            [13, 2],\n\t            [24, -10],\n\t            [19, 1],\n\t            [12, -13]\n\t        ],\n\t        [\n\t            [5652, 8242],\n\t            [27, 0],\n\t            [30, 22],\n\t            [6, 34],\n\t            [23, 19],\n\t            [-3, 26]\n\t        ],\n\t        [\n\t            [5735, 8343],\n\t            [17, 10],\n\t            [30, 23]\n\t        ],\n\t        [\n\t            [5782, 8376],\n\t            [29, -15],\n\t            [4, -15],\n\t            [15, 7],\n\t            [27, -14],\n\t            [3, -27],\n\t            [-6, -16],\n\t            [17, -39],\n\t            [12, -11],\n\t            [-2, -11],\n\t            [19, -10],\n\t            [8, -16],\n\t            [-11, -13],\n\t            [-23, 2],\n\t            [-5, -5],\n\t            [7, -20],\n\t            [6, -37]\n\t        ],\n\t        [\n\t            [5882, 8136],\n\t            [-23, -4],\n\t            [-9, -13],\n\t            [-2, -30],\n\t            [-11, 6],\n\t            [-25, -3],\n\t            [-7, 14],\n\t            [-11, -10],\n\t            [-10, 8],\n\t            [-22, 1],\n\t            [-31, 15],\n\t            [-28, 4],\n\t            [-22, -1],\n\t            [-15, -16],\n\t            [-13, -2]\n\t        ],\n\t        [\n\t            [5653, 8105],\n\t            [-1, 26],\n\t            [-8, 27],\n\t            [17, 12],\n\t            [0, 24],\n\t            [-8, 22],\n\t            [-1, 26]\n\t        ],\n\t        [\n\t            [2524, 6110],\n\t            [-1, 8],\n\t            [4, 3],\n\t            [5, -7],\n\t            [10, 36],\n\t            [5, 0]\n\t        ],\n\t        [\n\t            [2547, 6150],\n\t            [0, -8],\n\t            [5, -1],\n\t            [0, -16],\n\t            [-5, -25],\n\t            [3, -9],\n\t            [-3, -21],\n\t            [2, -6],\n\t            [-4, -30],\n\t            [-5, -16],\n\t            [-5, -1],\n\t            [-6, -21]\n\t        ],\n\t        [\n\t            [2529, 5996],\n\t            [-8, 0],\n\t            [2, 67],\n\t            [1, 47]\n\t        ],\n\t        [\n\t            [3136, 3714],\n\t            [-20, -8],\n\t            [-11, 82],\n\t            [-15, 66],\n\t            [9, 57],\n\t            [-15, 25],\n\t            [-4, 43],\n\t            [-13, 40]\n\t        ],\n\t        [\n\t            [3067, 4019],\n\t            [17, 64],\n\t            [-12, 49],\n\t            [7, 20],\n\t            [-5, 22],\n\t            [10, 30],\n\t            [1, 50],\n\t            [1, 41],\n\t            [6, 20],\n\t            [-24, 96]\n\t        ],\n\t        [\n\t            [3068, 4411],\n\t            [21, -5],\n\t            [14, 1],\n\t            [6, 18],\n\t            [25, 24],\n\t            [14, 22],\n\t            [37, 10],\n\t            [-3, -44],\n\t            [3, -23],\n\t            [-2, -40],\n\t            [30, -53],\n\t            [31, -9],\n\t            [11, -23],\n\t            [19, -11],\n\t            [11, -17],\n\t            [18, 0],\n\t            [16, -17],\n\t            [1, -34],\n\t            [6, -18],\n\t            [0, -25],\n\t            [-8, -1],\n\t            [11, -69],\n\t            [53, -2],\n\t            [-4, -35],\n\t            [3, -23],\n\t            [15, -16],\n\t            [6, -37],\n\t            [-4, -47],\n\t            [-8, -26],\n\t            [3, -33],\n\t            [-9, -12]\n\t        ],\n\t        [\n\t            [3384, 3866],\n\t            [-1, 18],\n\t            [-25, 30],\n\t            [-26, 1],\n\t            [-49, -17],\n\t            [-13, -52],\n\t            [-1, -32],\n\t            [-11, -71]\n\t        ],\n\t        [\n\t            [3482, 3537],\n\t            [6, 34],\n\t            [3, 35],\n\t            [1, 32],\n\t            [-10, 11],\n\t            [-11, -9],\n\t            [-10, 2],\n\t            [-4, 23],\n\t            [-2, 54],\n\t            [-5, 18],\n\t            [-19, 16],\n\t            [-11, -12],\n\t            [-30, 11],\n\t            [2, 81],\n\t            [-8, 33]\n\t        ],\n\t        [\n\t            [3068, 4411],\n\t            [-15, -11],\n\t            [-13, 7],\n\t            [2, 90],\n\t            [-23, -35],\n\t            [-24, 2],\n\t            [-11, 31],\n\t            [-18, 4],\n\t            [5, 25],\n\t            [-15, 36],\n\t            [-11, 53],\n\t            [7, 11],\n\t            [0, 25],\n\t            [17, 17],\n\t            [-3, 32],\n\t            [7, 20],\n\t            [2, 28],\n\t            [32, 40],\n\t            [22, 11],\n\t            [4, 9],\n\t            [25, -2]\n\t        ],\n\t        [\n\t            [3058, 4804],\n\t            [13, 162],\n\t            [0, 25],\n\t            [-4, 34],\n\t            [-12, 22],\n\t            [0, 42],\n\t            [15, 10],\n\t            [6, -6],\n\t            [1, 23],\n\t            [-16, 6],\n\t            [-1, 37],\n\t            [54, -2],\n\t            [10, 21],\n\t            [7, -19],\n\t            [6, -35],\n\t            [5, 8]\n\t        ],\n\t        [\n\t            [3142, 5132],\n\t            [15, -32],\n\t            [22, 4],\n\t            [5, 18],\n\t            [21, 14],\n\t            [11, 10],\n\t            [4, 25],\n\t            [19, 17],\n\t            [-1, 12],\n\t            [-24, 5],\n\t            [-3, 37],\n\t            [1, 40],\n\t            [-13, 15],\n\t            [5, 6],\n\t            [21, -8],\n\t            [22, -15],\n\t            [8, 14],\n\t            [20, 9],\n\t            [31, 23],\n\t            [10, 22],\n\t            [-3, 17]\n\t        ],\n\t        [\n\t            [3313, 5365],\n\t            [14, 2],\n\t            [7, -13],\n\t            [-4, -26],\n\t            [9, -9],\n\t            [7, -28],\n\t            [-8, -20],\n\t            [-4, -51],\n\t            [7, -30],\n\t            [2, -27],\n\t            [17, -28],\n\t            [14, -3],\n\t            [3, 12],\n\t            [8, 3],\n\t            [13, 10],\n\t            [9, 16],\n\t            [15, -5],\n\t            [7, 2]\n\t        ],\n\t        [\n\t            [3429, 5170],\n\t            [15, -5],\n\t            [3, 12],\n\t            [-5, 12],\n\t            [3, 17],\n\t            [11, -5],\n\t            [13, 6],\n\t            [16, -13]\n\t        ],\n\t        [\n\t            [3485, 5194],\n\t            [12, -12],\n\t            [9, 16],\n\t            [6, -3],\n\t            [4, -16],\n\t            [13, 4],\n\t            [11, 22],\n\t            [8, 44],\n\t            [17, 54]\n\t        ],\n\t        [\n\t            [3565, 5303],\n\t            [9, 3],\n\t            [7, -33],\n\t            [16, -103],\n\t            [14, -10],\n\t            [1, -41],\n\t            [-21, -48],\n\t            [9, -18],\n\t            [49, -9],\n\t            [1, -60],\n\t            [21, 39],\n\t            [35, -21],\n\t            [46, -36],\n\t            [14, -35],\n\t            [-5, -32],\n\t            [33, 18],\n\t            [54, -32],\n\t            [41, 3],\n\t            [41, -49],\n\t            [36, -66],\n\t            [21, -17],\n\t            [24, -3],\n\t            [10, -18],\n\t            [9, -76],\n\t            [5, -35],\n\t            [-11, -98],\n\t            [-14, -39],\n\t            [-39, -82],\n\t            [-18, -67],\n\t            [-21, -51],\n\t            [-7, -1],\n\t            [-7, -43],\n\t            [2, -111],\n\t            [-8, -91],\n\t            [-3, -39],\n\t            [-9, -23],\n\t            [-5, -79],\n\t            [-28, -77],\n\t            [-5, -61],\n\t            [-22, -26],\n\t            [-7, -35],\n\t            [-30, 0],\n\t            [-44, -23],\n\t            [-19, -26],\n\t            [-31, -18],\n\t            [-33, -47],\n\t            [-23, -58],\n\t            [-5, -44],\n\t            [5, -33],\n\t            [-5, -60],\n\t            [-6, -28],\n\t            [-20, -33],\n\t            [-31, -104],\n\t            [-24, -47],\n\t            [-19, -27],\n\t            [-13, -57],\n\t            [-18, -33]\n\t        ],\n\t        [\n\t            [3517, 3063],\n\t            [-8, 33],\n\t            [13, 28],\n\t            [-16, 40],\n\t            [-22, 33],\n\t            [-29, 38],\n\t            [-10, -2],\n\t            [-28, 46],\n\t            [-18, -7]\n\t        ],\n\t        [\n\t            [8172, 5325],\n\t            [11, 22],\n\t            [23, 32]\n\t        ],\n\t        [\n\t            [8206, 5379],\n\t            [-1, -29],\n\t            [-2, -37],\n\t            [-13, 1],\n\t            [-6, -20],\n\t            [-12, 31]\n\t        ],\n\t        [\n\t            [7546, 6698],\n\t            [12, -19],\n\t            [-2, -36],\n\t            [-23, -2],\n\t            [-23, 4],\n\t            [-18, -9],\n\t            [-25, 22],\n\t            [-1, 12]\n\t        ],\n\t        [\n\t            [7466, 6670],\n\t            [19, 44],\n\t            [15, 15],\n\t            [20, -14],\n\t            [14, -1],\n\t            [12, -16]\n\t        ],\n\t        [\n\t            [5817, 3752],\n\t            [-39, -43],\n\t            [-25, -44],\n\t            [-10, -40],\n\t            [-8, -22],\n\t            [-15, -4],\n\t            [-5, -29],\n\t            [-3, -18],\n\t            [-17, -14],\n\t            [-23, 3],\n\t            [-13, 17],\n\t            [-12, 7],\n\t            [-14, -14],\n\t            [-6, -28],\n\t            [-14, -18],\n\t            [-13, -26],\n\t            [-20, -6],\n\t            [-6, 20],\n\t            [2, 36],\n\t            [-16, 56],\n\t            [-8, 9]\n\t        ],\n\t        [\n\t            [5552, 3594],\n\t            [0, 173],\n\t            [27, 2],\n\t            [1, 210],\n\t            [21, 2],\n\t            [43, 21],\n\t            [10, -24],\n\t            [18, 23],\n\t            [9, 0],\n\t            [15, 13]\n\t        ],\n\t        [\n\t            [5696, 4014],\n\t            [5, -4]\n\t        ],\n\t        [\n\t            [5701, 4010],\n\t            [11, -48],\n\t            [5, -10],\n\t            [9, -34],\n\t            [32, -65],\n\t            [12, -7],\n\t            [0, -20],\n\t            [8, -38],\n\t            [21, -9],\n\t            [18, -27]\n\t        ],\n\t        [\n\t            [5424, 5496],\n\t            [23, 4],\n\t            [5, 16],\n\t            [5, -2],\n\t            [7, -13],\n\t            [34, 23],\n\t            [12, 23],\n\t            [15, 20],\n\t            [-3, 21],\n\t            [8, 6],\n\t            [27, -4],\n\t            [26, 27],\n\t            [20, 65],\n\t            [14, 24],\n\t            [18, 10]\n\t        ],\n\t        [\n\t            [5635, 5716],\n\t            [3, -26],\n\t            [16, -36],\n\t            [0, -25],\n\t            [-5, -24],\n\t            [2, -18],\n\t            [10, -18]\n\t        ],\n\t        [\n\t            [5661, 5569],\n\t            [21, -25]\n\t        ],\n\t        [\n\t            [5682, 5544],\n\t            [15, -24],\n\t            [0, -19],\n\t            [19, -31],\n\t            [12, -26],\n\t            [7, -35],\n\t            [20, -24],\n\t            [5, -18]\n\t        ],\n\t        [\n\t            [5760, 5367],\n\t            [-9, -7],\n\t            [-18, 2],\n\t            [-21, 6],\n\t            [-10, -5],\n\t            [-5, -14],\n\t            [-9, -2],\n\t            [-10, 12],\n\t            [-31, -29],\n\t            [-13, 6],\n\t            [-4, -5],\n\t            [-8, -35],\n\t            [-21, 11],\n\t            [-20, 6],\n\t            [-18, 22],\n\t            [-23, 20],\n\t            [-15, -19],\n\t            [-10, -30],\n\t            [-3, -41]\n\t        ],\n\t        [\n\t            [5512, 5265],\n\t            [-18, 3],\n\t            [-19, 10],\n\t            [-16, -32],\n\t            [-15, -55]\n\t        ],\n\t        [\n\t            [5444, 5191],\n\t            [-3, 18],\n\t            [-1, 27],\n\t            [-13, 19],\n\t            [-10, 30],\n\t            [-2, 21],\n\t            [-13, 31],\n\t            [2, 18],\n\t            [-3, 25],\n\t            [2, 45],\n\t            [7, 11],\n\t            [14, 60]\n\t        ],\n\t        [\n\t            [3231, 7808],\n\t            [20, -8],\n\t            [26, 1],\n\t            [-14, -24],\n\t            [-10, -4],\n\t            [-35, 25],\n\t            [-7, 20],\n\t            [10, 18],\n\t            [10, -28]\n\t        ],\n\t        [\n\t            [3283, 7958],\n\t            [-14, -1],\n\t            [-36, 19],\n\t            [-26, 28],\n\t            [10, 5],\n\t            [37, -15],\n\t            [28, -25],\n\t            [1, -11]\n\t        ],\n\t        [\n\t            [1569, 7923],\n\t            [-14, -8],\n\t            [-46, 27],\n\t            [-8, 21],\n\t            [-25, 21],\n\t            [-5, 16],\n\t            [-28, 11],\n\t            [-11, 32],\n\t            [2, 14],\n\t            [30, -13],\n\t            [17, -9],\n\t            [26, -6],\n\t            [9, -21],\n\t            [14, -28],\n\t            [28, -24],\n\t            [11, -33]\n\t        ],\n\t        [\n\t            [3440, 8052],\n\t            [-18, -52],\n\t            [18, 20],\n\t            [19, -12],\n\t            [-10, -21],\n\t            [25, -16],\n\t            [12, 14],\n\t            [28, -18],\n\t            [-8, -43],\n\t            [19, 10],\n\t            [4, -32],\n\t            [8, -36],\n\t            [-11, -52],\n\t            [-13, -2],\n\t            [-18, 11],\n\t            [6, 48],\n\t            [-8, 8],\n\t            [-32, -52],\n\t            [-17, 2],\n\t            [20, 28],\n\t            [-27, 14],\n\t            [-30, -3],\n\t            [-54, 2],\n\t            [-4, 17],\n\t            [17, 21],\n\t            [-12, 16],\n\t            [24, 36],\n\t            [28, 94],\n\t            [18, 33],\n\t            [24, 21],\n\t            [13, -3],\n\t            [-6, -16],\n\t            [-15, -37]\n\t        ],\n\t        [\n\t            [1313, 8250],\n\t            [27, 5],\n\t            [-8, -67],\n\t            [24, -48],\n\t            [-11, 0],\n\t            [-17, 27],\n\t            [-10, 27],\n\t            [-14, 19],\n\t            [-5, 26],\n\t            [1, 19],\n\t            [13, -8]\n\t        ],\n\t        [\n\t            [2798, 8730],\n\t            [-11, -31],\n\t            [-12, 5],\n\t            [-8, 17],\n\t            [2, 4],\n\t            [10, 18],\n\t            [12, -1],\n\t            [7, -12]\n\t        ],\n\t        [\n\t            [2725, 8762],\n\t            [-33, -32],\n\t            [-19, 1],\n\t            [-6, 16],\n\t            [20, 27],\n\t            [38, 0],\n\t            [0, -12]\n\t        ],\n\t        [\n\t            [2634, 8936],\n\t            [5, -26],\n\t            [15, 9],\n\t            [16, -15],\n\t            [30, -20],\n\t            [32, -19],\n\t            [2, -28],\n\t            [21, 5],\n\t            [20, -20],\n\t            [-25, -18],\n\t            [-43, 14],\n\t            [-16, 26],\n\t            [-27, -31],\n\t            [-40, -31],\n\t            [-9, 35],\n\t            [-38, -6],\n\t            [24, 30],\n\t            [4, 46],\n\t            [9, 54],\n\t            [20, -5]\n\t        ],\n\t        [\n\t            [2892, 9024],\n\t            [-31, -3],\n\t            [-7, 29],\n\t            [12, 34],\n\t            [26, 8],\n\t            [21, -17],\n\t            [1, -25],\n\t            [-4, -8],\n\t            [-18, -18]\n\t        ],\n\t        [\n\t            [2343, 9140],\n\t            [-17, -21],\n\t            [-38, 18],\n\t            [-22, -6],\n\t            [-38, 26],\n\t            [24, 19],\n\t            [19, 25],\n\t            [30, -16],\n\t            [17, -11],\n\t            [8, -11],\n\t            [17, -23]\n\t        ],\n\t        [\n\t            [3135, 7724],\n\t            [-18, 33],\n\t            [0, 81],\n\t            [-13, 17],\n\t            [-18, -10],\n\t            [-10, 16],\n\t            [-21, -45],\n\t            [-8, -46],\n\t            [-10, -27],\n\t            [-12, -9],\n\t            [-9, -3],\n\t            [-3, -15],\n\t            [-51, 0],\n\t            [-42, 0],\n\t            [-12, -11],\n\t            [-30, -42],\n\t            [-3, -5],\n\t            [-9, -23],\n\t            [-26, 0],\n\t            [-27, 0],\n\t            [-12, -10],\n\t            [4, -11],\n\t            [2, -18],\n\t            [0, -6],\n\t            [-36, -30],\n\t            [-29, -9],\n\t            [-32, -31],\n\t            [-7, 0],\n\t            [-10, 9],\n\t            [-3, 8],\n\t            [1, 6],\n\t            [6, 21],\n\t            [13, 33],\n\t            [8, 35],\n\t            [-5, 51],\n\t            [-6, 53],\n\t            [-29, 28],\n\t            [3, 11],\n\t            [-4, 7],\n\t            [-8, 0],\n\t            [-5, 9],\n\t            [-2, 14],\n\t            [-5, -6],\n\t            [-7, 2],\n\t            [1, 6],\n\t            [-6, 6],\n\t            [-3, 15],\n\t            [-21, 19],\n\t            [-23, 20],\n\t            [-27, 23],\n\t            [-26, 21],\n\t            [-25, -17],\n\t            [-9, 0],\n\t            [-34, 15],\n\t            [-23, -8],\n\t            [-27, 19],\n\t            [-28, 9],\n\t            [-19, 4],\n\t            [-9, 10],\n\t            [-5, 32],\n\t            [-9, 0],\n\t            [-1, -23],\n\t            [-57, 0],\n\t            [-95, 0],\n\t            [-94, 0],\n\t            [-84, 0],\n\t            [-83, 0],\n\t            [-82, 0],\n\t            [-85, 0],\n\t            [-27, 0],\n\t            [-82, 0],\n\t            [-79, 0]\n\t        ],\n\t        [\n\t            [1588, 7952],\n\t            [-4, 0],\n\t            [-54, 58],\n\t            [-20, 26],\n\t            [-50, 24],\n\t            [-15, 53],\n\t            [3, 36],\n\t            [-35, 25],\n\t            [-5, 48],\n\t            [-34, 43],\n\t            [0, 30]\n\t        ],\n\t        [\n\t            [1374, 8295],\n\t            [15, 29],\n\t            [0, 37],\n\t            [-48, 37],\n\t            [-28, 68],\n\t            [-17, 42],\n\t            [-26, 27],\n\t            [-19, 24],\n\t            [-14, 31],\n\t            [-28, -20],\n\t            [-27, -33],\n\t            [-25, 39],\n\t            [-19, 26],\n\t            [-27, 16],\n\t            [-28, 2],\n\t            [0, 337],\n\t            [1, 219]\n\t        ],\n\t        [\n\t            [1084, 9176],\n\t            [51, -14],\n\t            [44, -29],\n\t            [29, -5],\n\t            [24, 24],\n\t            [34, 19],\n\t            [41, -7],\n\t            [42, 26],\n\t            [45, 14],\n\t            [20, -24],\n\t            [20, 14],\n\t            [6, 27],\n\t            [20, -6],\n\t            [47, -53],\n\t            [37, 40],\n\t            [3, -45],\n\t            [34, 10],\n\t            [11, 17],\n\t            [34, -3],\n\t            [42, -25],\n\t            [65, -22],\n\t            [38, -10],\n\t            [28, 4],\n\t            [37, -30],\n\t            [-39, -29],\n\t            [50, -13],\n\t            [75, 7],\n\t            [24, 11],\n\t            [29, -36],\n\t            [31, 30],\n\t            [-29, 25],\n\t            [18, 20],\n\t            [34, 3],\n\t            [22, 6],\n\t            [23, -14],\n\t            [28, -32],\n\t            [31, 5],\n\t            [49, -27],\n\t            [43, 9],\n\t            [40, -1],\n\t            [-3, 37],\n\t            [25, 10],\n\t            [43, -20],\n\t            [0, -56],\n\t            [17, 47],\n\t            [23, -1],\n\t            [12, 59],\n\t            [-30, 36],\n\t            [-32, 24],\n\t            [2, 65],\n\t            [33, 43],\n\t            [37, -9],\n\t            [28, -26],\n\t            [38, -67],\n\t            [-25, -29],\n\t            [52, -12],\n\t            [-1, -60],\n\t            [38, 46],\n\t            [33, -38],\n\t            [-9, -44],\n\t            [27, -40],\n\t            [29, 43],\n\t            [21, 51],\n\t            [1, 65],\n\t            [40, -5],\n\t            [41, -8],\n\t            [37, -30],\n\t            [2, -29],\n\t            [-21, -31],\n\t            [20, -32],\n\t            [-4, -29],\n\t            [-54, -41],\n\t            [-39, -9],\n\t            [-29, 18],\n\t            [-8, -30],\n\t            [-27, -50],\n\t            [-8, -26],\n\t            [-32, -40],\n\t            [-40, -4],\n\t            [-22, -25],\n\t            [-2, -38],\n\t            [-32, -7],\n\t            [-34, -48],\n\t            [-30, -67],\n\t            [-11, -46],\n\t            [-1, -69],\n\t            [40, -10],\n\t            [13, -55],\n\t            [13, -45],\n\t            [39, 12],\n\t            [51, -26],\n\t            [28, -22],\n\t            [20, -28],\n\t            [35, -17],\n\t            [29, -24],\n\t            [46, -4],\n\t            [30, -6],\n\t            [-4, -51],\n\t            [8, -59],\n\t            [21, -66],\n\t            [41, -56],\n\t            [21, 19],\n\t            [15, 61],\n\t            [-14, 93],\n\t            [-20, 31],\n\t            [45, 28],\n\t            [31, 41],\n\t            [16, 41],\n\t            [-3, 40],\n\t            [-19, 50],\n\t            [-33, 44],\n\t            [32, 62],\n\t            [-12, 54],\n\t            [-9, 92],\n\t            [19, 14],\n\t            [48, -16],\n\t            [29, -6],\n\t            [23, 15],\n\t            [25, -20],\n\t            [35, -34],\n\t            [8, -23],\n\t            [50, -4],\n\t            [-1, -50],\n\t            [9, -74],\n\t            [25, -10],\n\t            [21, -35],\n\t            [40, 33],\n\t            [26, 65],\n\t            [19, 28],\n\t            [21, -53],\n\t            [36, -75],\n\t            [31, -71],\n\t            [-11, -37],\n\t            [37, -33],\n\t            [25, -34],\n\t            [44, -15],\n\t            [18, -19],\n\t            [11, -50],\n\t            [22, -8],\n\t            [11, -22],\n\t            [2, -67],\n\t            [-20, -22],\n\t            [-20, -21],\n\t            [-46, -21],\n\t            [-35, -48],\n\t            [-47, -10],\n\t            [-59, 13],\n\t            [-42, 0],\n\t            [-29, -4],\n\t            [-23, -43],\n\t            [-35, -26],\n\t            [-40, -78],\n\t            [-32, -54],\n\t            [23, 9],\n\t            [45, 78],\n\t            [58, 49],\n\t            [42, 6],\n\t            [24, -29],\n\t            [-26, -40],\n\t            [9, -63],\n\t            [9, -45],\n\t            [36, -29],\n\t            [46, 8],\n\t            [28, 67],\n\t            [2, -43],\n\t            [17, -22],\n\t            [-34, -38],\n\t            [-61, -36],\n\t            [-28, -23],\n\t            [-31, -43],\n\t            [-21, 4],\n\t            [-1, 50],\n\t            [48, 49],\n\t            [-44, -2],\n\t            [-31, -7]\n\t        ],\n\t        [\n\t            [1829, 9377],\n\t            [-14, -27],\n\t            [61, 17],\n\t            [39, -29],\n\t            [31, 30],\n\t            [26, -20],\n\t            [23, -58],\n\t            [14, 25],\n\t            [-20, 60],\n\t            [24, 9],\n\t            [28, -9],\n\t            [31, -24],\n\t            [17, -58],\n\t            [9, -41],\n\t            [47, -30],\n\t            [50, -28],\n\t            [-3, -26],\n\t            [-46, -4],\n\t            [18, -23],\n\t            [-9, -22],\n\t            [-51, 9],\n\t            [-48, 16],\n\t            [-32, -3],\n\t            [-52, -20],\n\t            [-70, -9],\n\t            [-50, -6],\n\t            [-15, 28],\n\t            [-38, 16],\n\t            [-24, -6],\n\t            [-35, 47],\n\t            [19, 6],\n\t            [43, 10],\n\t            [39, -3],\n\t            [36, 11],\n\t            [-54, 13],\n\t            [-59, -4],\n\t            [-39, 1],\n\t            [-15, 22],\n\t            [64, 23],\n\t            [-42, -1],\n\t            [-49, 16],\n\t            [23, 44],\n\t            [20, 24],\n\t            [74, 36],\n\t            [29, -12]\n\t        ],\n\t        [\n\t            [2097, 9395],\n\t            [-24, -39],\n\t            [-44, 41],\n\t            [10, 9],\n\t            [37, 2],\n\t            [21, -13]\n\t        ],\n\t        [\n\t            [2879, 9376],\n\t            [3, -16],\n\t            [-30, 2],\n\t            [-30, 1],\n\t            [-30, -8],\n\t            [-8, 3],\n\t            [-31, 32],\n\t            [1, 21],\n\t            [14, 4],\n\t            [63, -6],\n\t            [48, -33]\n\t        ],\n\t        [\n\t            [2595, 9379],\n\t            [22, -36],\n\t            [26, 47],\n\t            [70, 24],\n\t            [48, -61],\n\t            [-4, -38],\n\t            [55, 17],\n\t            [26, 23],\n\t            [62, -30],\n\t            [38, -28],\n\t            [3, -25],\n\t            [52, 13],\n\t            [29, -38],\n\t            [67, -23],\n\t            [24, -24],\n\t            [26, -55],\n\t            [-51, -28],\n\t            [66, -38],\n\t            [44, -13],\n\t            [40, -55],\n\t            [44, -3],\n\t            [-9, -42],\n\t            [-49, -69],\n\t            [-34, 26],\n\t            [-44, 57],\n\t            [-36, -8],\n\t            [-3, -34],\n\t            [29, -34],\n\t            [38, -27],\n\t            [11, -16],\n\t            [18, -58],\n\t            [-9, -43],\n\t            [-35, 16],\n\t            [-70, 47],\n\t            [39, -51],\n\t            [29, -35],\n\t            [5, -21],\n\t            [-76, 24],\n\t            [-59, 34],\n\t            [-34, 29],\n\t            [10, 17],\n\t            [-42, 30],\n\t            [-40, 29],\n\t            [0, -18],\n\t            [-80, -9],\n\t            [-23, 20],\n\t            [18, 44],\n\t            [52, 1],\n\t            [57, 7],\n\t            [-9, 21],\n\t            [10, 30],\n\t            [36, 57],\n\t            [-8, 27],\n\t            [-11, 20],\n\t            [-42, 29],\n\t            [-57, 20],\n\t            [18, 15],\n\t            [-29, 36],\n\t            [-25, 4],\n\t            [-22, 20],\n\t            [-14, -18],\n\t            [-51, -7],\n\t            [-101, 13],\n\t            [-59, 17],\n\t            [-45, 9],\n\t            [-23, 21],\n\t            [29, 27],\n\t            [-39, 0],\n\t            [-9, 60],\n\t            [21, 53],\n\t            [29, 24],\n\t            [72, 16],\n\t            [-21, -39]\n\t        ],\n\t        [\n\t            [2212, 9420],\n\t            [33, -12],\n\t            [50, 7],\n\t            [7, -17],\n\t            [-26, -28],\n\t            [42, -26],\n\t            [-5, -53],\n\t            [-45, -23],\n\t            [-27, 5],\n\t            [-19, 23],\n\t            [-69, 45],\n\t            [0, 19],\n\t            [57, -7],\n\t            [-31, 38],\n\t            [33, 29]\n\t        ],\n\t        [\n\t            [2411, 9357],\n\t            [-30, -45],\n\t            [-32, 3],\n\t            [-17, 52],\n\t            [1, 29],\n\t            [14, 25],\n\t            [28, 16],\n\t            [58, -2],\n\t            [53, -14],\n\t            [-42, -53],\n\t            [-33, -11]\n\t        ],\n\t        [\n\t            [1654, 9275],\n\t            [-73, -29],\n\t            [-15, 26],\n\t            [-64, 31],\n\t            [12, 25],\n\t            [19, 43],\n\t            [24, 39],\n\t            [-27, 36],\n\t            [94, 10],\n\t            [39, -13],\n\t            [71, -3],\n\t            [27, -17],\n\t            [30, -25],\n\t            [-35, -15],\n\t            [-68, -41],\n\t            [-34, -42],\n\t            [0, -25]\n\t        ],\n\t        [\n\t            [2399, 9487],\n\t            [-15, -23],\n\t            [-40, 5],\n\t            [-34, 15],\n\t            [15, 27],\n\t            [40, 16],\n\t            [24, -21],\n\t            [10, -19]\n\t        ],\n\t        [\n\t            [2264, 9590],\n\t            [21, -27],\n\t            [1, -31],\n\t            [-13, -44],\n\t            [-46, -6],\n\t            [-30, 10],\n\t            [1, 34],\n\t            [-45, -4],\n\t            [-2, 45],\n\t            [30, -2],\n\t            [41, 21],\n\t            [40, -4],\n\t            [2, 8]\n\t        ],\n\t        [\n\t            [1994, 9559],\n\t            [11, -21],\n\t            [25, 10],\n\t            [29, -2],\n\t            [5, -29],\n\t            [-17, -28],\n\t            [-94, -10],\n\t            [-70, -25],\n\t            [-43, -2],\n\t            [-3, 20],\n\t            [57, 26],\n\t            [-125, -7],\n\t            [-39, 10],\n\t            [38, 58],\n\t            [26, 17],\n\t            [78, -20],\n\t            [50, -35],\n\t            [48, -5],\n\t            [-40, 57],\n\t            [26, 21],\n\t            [29, -7],\n\t            [9, -28]\n\t        ],\n\t        [\n\t            [2370, 9612],\n\t            [30, -19],\n\t            [55, 0],\n\t            [24, -19],\n\t            [-6, -22],\n\t            [32, -14],\n\t            [17, -14],\n\t            [38, -2],\n\t            [40, -5],\n\t            [44, 13],\n\t            [57, 5],\n\t            [45, -5],\n\t            [30, -22],\n\t            [6, -24],\n\t            [-17, -16],\n\t            [-42, -13],\n\t            [-35, 8],\n\t            [-80, -10],\n\t            [-57, -1],\n\t            [-45, 8],\n\t            [-74, 19],\n\t            [-9, 32],\n\t            [-4, 29],\n\t            [-27, 26],\n\t            [-58, 7],\n\t            [-32, 19],\n\t            [10, 24],\n\t            [58, -4]\n\t        ],\n\t        [\n\t            [1772, 9645],\n\t            [-4, -46],\n\t            [-21, -20],\n\t            [-26, -3],\n\t            [-52, -26],\n\t            [-44, -9],\n\t            [-38, 13],\n\t            [47, 44],\n\t            [57, 39],\n\t            [43, -1],\n\t            [38, 9]\n\t        ],\n\t        [\n\t            [2393, 9637],\n\t            [-13, -2],\n\t            [-52, 4],\n\t            [-7, 17],\n\t            [56, -1],\n\t            [19, -11],\n\t            [-3, -7]\n\t        ],\n\t        [\n\t            [1939, 9648],\n\t            [-52, -17],\n\t            [-41, 19],\n\t            [23, 19],\n\t            [40, 6],\n\t            [39, -10],\n\t            [-9, -17]\n\t        ],\n\t        [\n\t            [1954, 9701],\n\t            [-34, -11],\n\t            [-46, 0],\n\t            [0, 8],\n\t            [29, 18],\n\t            [14, -3],\n\t            [37, -12]\n\t        ],\n\t        [\n\t            [2338, 9669],\n\t            [-41, -12],\n\t            [-23, 13],\n\t            [-12, 23],\n\t            [-2, 24],\n\t            [36, -2],\n\t            [16, -4],\n\t            [33, -21],\n\t            [-7, -21]\n\t        ],\n\t        [\n\t            [2220, 9685],\n\t            [11, -25],\n\t            [-45, 7],\n\t            [-46, 19],\n\t            [-62, 2],\n\t            [27, 18],\n\t            [-34, 14],\n\t            [-2, 22],\n\t            [55, -8],\n\t            [75, -21],\n\t            [21, -28]\n\t        ],\n\t        [\n\t            [2583, 9764],\n\t            [33, -20],\n\t            [-38, -17],\n\t            [-51, -45],\n\t            [-50, -4],\n\t            [-57, 8],\n\t            [-30, 24],\n\t            [0, 21],\n\t            [22, 16],\n\t            [-50, 0],\n\t            [-31, 19],\n\t            [-18, 27],\n\t            [20, 26],\n\t            [19, 18],\n\t            [28, 4],\n\t            [-12, 14],\n\t            [65, 3],\n\t            [35, -32],\n\t            [47, -12],\n\t            [46, -11],\n\t            [22, -39]\n\t        ],\n\t        [\n\t            [3097, 9967],\n\t            [74, -4],\n\t            [60, -8],\n\t            [51, -16],\n\t            [-2, -16],\n\t            [-67, -25],\n\t            [-68, -12],\n\t            [-25, -14],\n\t            [61, 1],\n\t            [-66, -36],\n\t            [-45, -17],\n\t            [-48, -48],\n\t            [-57, -10],\n\t            [-18, -12],\n\t            [-84, -6],\n\t            [39, -8],\n\t            [-20, -10],\n\t            [23, -29],\n\t            [-26, -21],\n\t            [-43, -16],\n\t            [-13, -24],\n\t            [-39, -17],\n\t            [4, -14],\n\t            [48, 3],\n\t            [0, -15],\n\t            [-74, -35],\n\t            [-73, 16],\n\t            [-81, -9],\n\t            [-42, 7],\n\t            [-52, 3],\n\t            [-4, 29],\n\t            [52, 13],\n\t            [-14, 43],\n\t            [17, 4],\n\t            [74, -26],\n\t            [-38, 38],\n\t            [-45, 11],\n\t            [23, 23],\n\t            [49, 14],\n\t            [8, 21],\n\t            [-39, 23],\n\t            [-12, 31],\n\t            [76, -3],\n\t            [22, -6],\n\t            [43, 21],\n\t            [-62, 7],\n\t            [-98, -4],\n\t            [-49, 20],\n\t            [-23, 24],\n\t            [-32, 17],\n\t            [-6, 21],\n\t            [41, 11],\n\t            [32, 2],\n\t            [55, 9],\n\t            [41, 22],\n\t            [34, -3],\n\t            [30, -16],\n\t            [21, 32],\n\t            [37, 9],\n\t            [50, 7],\n\t            [85, 2],\n\t            [14, -6],\n\t            [81, 10],\n\t            [60, -4],\n\t            [60, -4]\n\t        ],\n\t        [\n\t            [5290, 7828],\n\t            [-3, -24],\n\t            [-12, -10],\n\t            [-20, 7],\n\t            [-6, -24],\n\t            [-14, -2],\n\t            [-5, 10],\n\t            [-15, -20],\n\t            [-13, -3],\n\t            [-12, 13]\n\t        ],\n\t        [\n\t            [5190, 7775],\n\t            [-10, 25],\n\t            [-13, -9],\n\t            [0, 27],\n\t            [21, 33],\n\t            [-1, 15],\n\t            [12, -5],\n\t            [8, 10]\n\t        ],\n\t        [\n\t            [5207, 7871],\n\t            [24, -1],\n\t            [5, 13],\n\t            [30, -18]\n\t        ],\n\t        [\n\t            [3140, 1814],\n\t            [-10, -24],\n\t            [-23, -18],\n\t            [-14, 2],\n\t            [-16, 5],\n\t            [-21, 18],\n\t            [-29, 8],\n\t            [-35, 33],\n\t            [-28, 32],\n\t            [-38, 66],\n\t            [23, -12],\n\t            [39, -40],\n\t            [36, -21],\n\t            [15, 27],\n\t            [9, 41],\n\t            [25, 24],\n\t            [20, -7]\n\t        ],\n\t        [\n\t            [3095, 1968],\n\t            [-25, 0],\n\t            [-13, -14],\n\t            [-25, -22],\n\t            [-5, -55],\n\t            [-11, -1],\n\t            [-32, 19],\n\t            [-32, 41],\n\t            [-34, 34],\n\t            [-9, 37],\n\t            [8, 35],\n\t            [-14, 39],\n\t            [-4, 101],\n\t            [12, 57],\n\t            [30, 45],\n\t            [-43, 18],\n\t            [27, 52],\n\t            [9, 98],\n\t            [31, -21],\n\t            [15, 123],\n\t            [-19, 15],\n\t            [-9, -73],\n\t            [-17, 8],\n\t            [9, 84],\n\t            [9, 110],\n\t            [13, 40],\n\t            [-8, 58],\n\t            [-2, 66],\n\t            [11, 2],\n\t            [17, 96],\n\t            [20, 94],\n\t            [11, 88],\n\t            [-6, 89],\n\t            [8, 49],\n\t            [-3, 72],\n\t            [16, 73],\n\t            [5, 114],\n\t            [9, 123],\n\t            [9, 132],\n\t            [-2, 96],\n\t            [-6, 84]\n\t        ],\n\t        [\n\t            [3045, 3974],\n\t            [14, 15],\n\t            [8, 30]\n\t        ],\n\t        [\n\t            [8064, 6161],\n\t            [-24, -28],\n\t            [-23, 18],\n\t            [0, 51],\n\t            [13, 26],\n\t            [31, 17],\n\t            [16, -1],\n\t            [6, -23],\n\t            [-12, -26],\n\t            [-7, -34]\n\t        ],\n\t        [\n\t            [8628, 7562],\n\t            [-18, 35],\n\t            [-11, -33],\n\t            [-43, -26],\n\t            [4, -31],\n\t            [-24, 2],\n\t            [-13, 19],\n\t            [-19, -42],\n\t            [-30, -32],\n\t            [-23, -38]\n\t        ],\n\t        [\n\t            [8451, 7416],\n\t            [-39, -17],\n\t            [-20, -27],\n\t            [-30, -17],\n\t            [15, 28],\n\t            [-6, 23],\n\t            [22, 40],\n\t            [-15, 30],\n\t            [-24, -20],\n\t            [-32, -41],\n\t            [-17, -39],\n\t            [-27, -2],\n\t            [-14, -28],\n\t            [15, -40],\n\t            [22, -10],\n\t            [1, -26],\n\t            [22, -17],\n\t            [31, 42],\n\t            [25, -23],\n\t            [18, -2],\n\t            [4, -31],\n\t            [-39, -16],\n\t            [-13, -32],\n\t            [-27, -30],\n\t            [-14, -41],\n\t            [30, -33],\n\t            [11, -58],\n\t            [17, -54],\n\t            [18, -45],\n\t            [0, -44],\n\t            [-17, -16],\n\t            [6, -32],\n\t            [17, -18],\n\t            [-5, -48],\n\t            [-7, -47],\n\t            [-15, -5],\n\t            [-21, -64],\n\t            [-22, -78],\n\t            [-26, -70],\n\t            [-38, -55],\n\t            [-39, -50],\n\t            [-31, -6],\n\t            [-17, -27],\n\t            [-10, 20],\n\t            [-15, -30],\n\t            [-39, -29],\n\t            [-29, -9],\n\t            [-10, -63],\n\t            [-15, -3],\n\t            [-8, 43],\n\t            [7, 22],\n\t            [-37, 19],\n\t            [-13, -9]\n\t        ],\n\t        [\n\t            [8001, 6331],\n\t            [-28, 15],\n\t            [-14, 24],\n\t            [5, 34],\n\t            [-26, 11],\n\t            [-13, 22],\n\t            [-24, -31],\n\t            [-27, -7],\n\t            [-22, 0],\n\t            [-15, -14]\n\t        ],\n\t        [\n\t            [7837, 6385],\n\t            [-14, -9],\n\t            [4, -68],\n\t            [-15, 2],\n\t            [-2, 14]\n\t        ],\n\t        [\n\t            [7810, 6324],\n\t            [-1, 24],\n\t            [-20, -17],\n\t            [-12, 11],\n\t            [-21, 22],\n\t            [8, 49],\n\t            [-18, 12],\n\t            [-6, 54],\n\t            [-30, -10],\n\t            [4, 70],\n\t            [26, 50],\n\t            [1, 48],\n\t            [-1, 46],\n\t            [-12, 14],\n\t            [-9, 35],\n\t            [-16, -5]\n\t        ],\n\t        [\n\t            [7703, 6727],\n\t            [-30, 9],\n\t            [9, 25],\n\t            [-13, 36],\n\t            [-20, -24],\n\t            [-23, 14],\n\t            [-32, -37],\n\t            [-25, -44],\n\t            [-23, -8]\n\t        ],\n\t        [\n\t            [7466, 6670],\n\t            [-2, 47],\n\t            [-17, -13]\n\t        ],\n\t        [\n\t            [7447, 6704],\n\t            [-32, 6],\n\t            [-32, 14],\n\t            [-22, 26],\n\t            [-22, 11],\n\t            [-9, 29],\n\t            [-16, 8],\n\t            [-28, 39],\n\t            [-22, 18],\n\t            [-12, -14]\n\t        ],\n\t        [\n\t            [7252, 6841],\n\t            [-38, 41],\n\t            [-28, 37],\n\t            [-7, 65],\n\t            [20, -7],\n\t            [1, 30],\n\t            [-12, 30],\n\t            [3, 48],\n\t            [-30, 69]\n\t        ],\n\t        [\n\t            [7161, 7154],\n\t            [-45, 24],\n\t            [-8, 46],\n\t            [-21, 27]\n\t        ],\n\t        [\n\t            [7082, 7268],\n\t            [-4, 34],\n\t            [1, 23],\n\t            [-17, 13],\n\t            [-9, -6],\n\t            [-7, 55]\n\t        ],\n\t        [\n\t            [7046, 7387],\n\t            [8, 13],\n\t            [-4, 14],\n\t            [26, 28],\n\t            [20, 12],\n\t            [29, -8],\n\t            [11, 38],\n\t            [35, 7],\n\t            [10, 23],\n\t            [44, 32],\n\t            [4, 13]\n\t        ],\n\t        [\n\t            [7229, 7559],\n\t            [-2, 34],\n\t            [19, 15],\n\t            [-25, 103],\n\t            [55, 24],\n\t            [14, 13],\n\t            [20, 106],\n\t            [55, -20],\n\t            [15, 27],\n\t            [2, 59],\n\t            [23, 6],\n\t            [21, 39]\n\t        ],\n\t        [\n\t            [7426, 7965],\n\t            [11, 5]\n\t        ],\n\t        [\n\t            [7437, 7970],\n\t            [7, -41],\n\t            [23, -32],\n\t            [40, -22],\n\t            [19, -47],\n\t            [-10, -70],\n\t            [10, -25],\n\t            [33, -10],\n\t            [37, -8],\n\t            [33, -37],\n\t            [18, -7],\n\t            [12, -54],\n\t            [17, -35],\n\t            [30, 1],\n\t            [58, -13],\n\t            [36, 8],\n\t            [28, -9],\n\t            [41, -36],\n\t            [34, 0],\n\t            [12, -18],\n\t            [32, 32],\n\t            [45, 20],\n\t            [42, 2],\n\t            [32, 21],\n\t            [20, 32],\n\t            [20, 20],\n\t            [-5, 19],\n\t            [-9, 23],\n\t            [15, 38],\n\t            [15, -5],\n\t            [29, -12],\n\t            [28, 31],\n\t            [42, 23],\n\t            [20, 39],\n\t            [20, 17],\n\t            [40, 8],\n\t            [22, -7],\n\t            [3, 21],\n\t            [-25, 41],\n\t            [-22, 19],\n\t            [-22, -22],\n\t            [-27, 10],\n\t            [-16, -8],\n\t            [-7, 24],\n\t            [20, 59],\n\t            [13, 45]\n\t        ],\n\t        [\n\t            [8240, 8005],\n\t            [34, -23],\n\t            [39, 38],\n\t            [-1, 26],\n\t            [26, 62],\n\t            [15, 19],\n\t            [0, 33],\n\t            [-16, 14],\n\t            [23, 29],\n\t            [35, 11],\n\t            [37, 2],\n\t            [41, -18],\n\t            [25, -22],\n\t            [17, -59],\n\t            [10, -26],\n\t            [10, -36],\n\t            [10, -58],\n\t            [49, -19],\n\t            [32, -42],\n\t            [12, -55],\n\t            [42, 0],\n\t            [24, 23],\n\t            [46, 17],\n\t            [-15, -53],\n\t            [-11, -21],\n\t            [-9, -65],\n\t            [-19, -58],\n\t            [-33, 11],\n\t            [-24, -21],\n\t            [7, -51],\n\t            [-4, -69],\n\t            [-14, -2],\n\t            [0, -30]\n\t        ],\n\t        [\n\t            [4920, 5353],\n\t            [-12, -1],\n\t            [-20, 12],\n\t            [-18, -1],\n\t            [-33, -10],\n\t            [-19, -18],\n\t            [-27, -21],\n\t            [-6, 1]\n\t        ],\n\t        [\n\t            [4785, 5315],\n\t            [2, 49],\n\t            [3, 7],\n\t            [-1, 24],\n\t            [-12, 24],\n\t            [-8, 4],\n\t            [-8, 17],\n\t            [6, 26],\n\t            [-3, 28],\n\t            [1, 18]\n\t        ],\n\t        [\n\t            [4765, 5512],\n\t            [5, 0],\n\t            [1, 25],\n\t            [-2, 12],\n\t            [3, 8],\n\t            [10, 7],\n\t            [-7, 47],\n\t            [-6, 25],\n\t            [2, 20],\n\t            [5, 4]\n\t        ],\n\t        [\n\t            [4776, 5660],\n\t            [4, 6],\n\t            [8, -9],\n\t            [21, -1],\n\t            [5, 18],\n\t            [5, -1],\n\t            [8, 6],\n\t            [4, -25],\n\t            [7, 7],\n\t            [11, 9]\n\t        ],\n\t        [\n\t            [4921, 5627],\n\t            [7, -84],\n\t            [-11, -50],\n\t            [-8, -66],\n\t            [12, -51],\n\t            [-1, -23]\n\t        ],\n\t        [\n\t            [5363, 5191],\n\t            [-4, 4],\n\t            [-16, -8],\n\t            [-17, 8],\n\t            [-13, -4]\n\t        ],\n\t        [\n\t            [5313, 5191],\n\t            [-45, 1]\n\t        ],\n\t        [\n\t            [5268, 5192],\n\t            [4, 47],\n\t            [-11, 39],\n\t            [-13, 10],\n\t            [-6, 27],\n\t            [-7, 8],\n\t            [1, 16]\n\t        ],\n\t        [\n\t            [5236, 5339],\n\t            [7, 42],\n\t            [13, 57],\n\t            [8, 1],\n\t            [17, 34],\n\t            [10, 1],\n\t            [16, -24],\n\t            [19, 20],\n\t            [2, 25],\n\t            [7, 23],\n\t            [4, 30],\n\t            [15, 25],\n\t            [5, 41],\n\t            [6, 13],\n\t            [4, 31],\n\t            [7, 37],\n\t            [24, 46],\n\t            [1, 20],\n\t            [3, 10],\n\t            [-11, 24]\n\t        ],\n\t        [\n\t            [5393, 5795],\n\t            [1, 19],\n\t            [8, 3]\n\t        ],\n\t        [\n\t            [5402, 5817],\n\t            [11, -38],\n\t            [2, -39],\n\t            [-1, -39],\n\t            [15, -54],\n\t            [-15, 1],\n\t            [-8, -4],\n\t            [-13, 6],\n\t            [-6, -28],\n\t            [16, -35],\n\t            [13, -10],\n\t            [3, -24],\n\t            [9, -41],\n\t            [-4, -16]\n\t        ],\n\t        [\n\t            [5444, 5191],\n\t            [-2, -31],\n\t            [-22, 14],\n\t            [-22, 15],\n\t            [-35, 2]\n\t        ],\n\t        [\n\t            [5856, 5265],\n\t            [-2, -69],\n\t            [11, -8],\n\t            [-9, -21],\n\t            [-10, -16],\n\t            [-11, -31],\n\t            [-6, -27],\n\t            [-1, -48],\n\t            [-7, -22],\n\t            [0, -45]\n\t        ],\n\t        [\n\t            [5821, 4978],\n\t            [-8, -16],\n\t            [-1, -35],\n\t            [-4, -5],\n\t            [-2, -32]\n\t        ],\n\t        [\n\t            [5814, 4792],\n\t            [5, -55],\n\t            [-2, -30],\n\t            [5, -35],\n\t            [16, -33],\n\t            [15, -74]\n\t        ],\n\t        [\n\t            [5853, 4565],\n\t            [-11, 6],\n\t            [-37, -10],\n\t            [-7, -7],\n\t            [-8, -38],\n\t            [6, -26],\n\t            [-5, -70],\n\t            [-3, -59],\n\t            [7, -11],\n\t            [19, -23],\n\t            [8, 11],\n\t            [2, -64],\n\t            [-21, 1],\n\t            [-11, 32],\n\t            [-10, 25],\n\t            [-22, 9],\n\t            [-6, 31],\n\t            [-17, -19],\n\t            [-22, 8],\n\t            [-10, 27],\n\t            [-17, 6],\n\t            [-13, -2],\n\t            [-2, 19],\n\t            [-9, 1]\n\t        ],\n\t        [\n\t            [5342, 4697],\n\t            [-4, 18]\n\t        ],\n\t        [\n\t            [5360, 4775],\n\t            [8, -6],\n\t            [9, 23],\n\t            [15, -1],\n\t            [2, -17],\n\t            [11, -10],\n\t            [16, 37],\n\t            [16, 29],\n\t            [7, 19],\n\t            [-1, 48],\n\t            [12, 58],\n\t            [13, 30],\n\t            [18, 29],\n\t            [3, 18],\n\t            [1, 22],\n\t            [5, 21],\n\t            [-2, 33],\n\t            [4, 52],\n\t            [5, 37],\n\t            [8, 32],\n\t            [2, 36]\n\t        ],\n\t        [\n\t            [5760, 5367],\n\t            [17, -49],\n\t            [12, -7],\n\t            [8, 10],\n\t            [12, -4],\n\t            [16, 12],\n\t            [6, -25],\n\t            [25, -39]\n\t        ],\n\t        [\n\t            [5330, 4760],\n\t            [-22, 62]\n\t        ],\n\t        [\n\t            [5308, 4822],\n\t            [21, 33],\n\t            [-11, 39],\n\t            [10, 15],\n\t            [19, 7],\n\t            [2, 26],\n\t            [15, -28],\n\t            [24, -2],\n\t            [9, 27],\n\t            [3, 40],\n\t            [-3, 46],\n\t            [-13, 35],\n\t            [12, 68],\n\t            [-7, 12],\n\t            [-21, -5],\n\t            [-7, 31],\n\t            [2, 25]\n\t        ],\n\t        [\n\t            [2906, 5049],\n\t            [-12, 14],\n\t            [-14, 19],\n\t            [-7, -9],\n\t            [-24, 8],\n\t            [-7, 25],\n\t            [-5, -1],\n\t            [-28, 34]\n\t        ],\n\t        [\n\t            [2809, 5139],\n\t            [-3, 18],\n\t            [10, 5],\n\t            [-1, 29],\n\t            [6, 22],\n\t            [14, 4],\n\t            [12, 37],\n\t            [10, 31],\n\t            [-10, 14],\n\t            [5, 34],\n\t            [-6, 54],\n\t            [6, 16],\n\t            [-4, 50],\n\t            [-12, 31]\n\t        ],\n\t        [\n\t            [2836, 5484],\n\t            [4, 29],\n\t            [9, -4],\n\t            [5, 17],\n\t            [-6, 35],\n\t            [3, 9]\n\t        ],\n\t        [\n\t            [2851, 5570],\n\t            [14, -2],\n\t            [21, 41],\n\t            [12, 6],\n\t            [0, 20],\n\t            [5, 50],\n\t            [16, 27],\n\t            [17, 1],\n\t            [3, 13],\n\t            [21, -5],\n\t            [22, 30],\n\t            [11, 13],\n\t            [14, 28],\n\t            [9, -3],\n\t            [8, -16],\n\t            [-6, -20]\n\t        ],\n\t        [\n\t            [3018, 5753],\n\t            [-18, -10],\n\t            [-7, -29],\n\t            [-10, -17],\n\t            [-8, -22],\n\t            [-4, -42],\n\t            [-8, -35],\n\t            [15, -4],\n\t            [3, -27],\n\t            [6, -13],\n\t            [3, -24],\n\t            [-4, -22],\n\t            [1, -12],\n\t            [7, -5],\n\t            [7, -20],\n\t            [36, 5],\n\t            [16, -7],\n\t            [19, -51],\n\t            [11, 6],\n\t            [20, -3],\n\t            [16, 7],\n\t            [10, -10],\n\t            [-5, -32],\n\t            [-6, -20],\n\t            [-2, -42],\n\t            [5, -40],\n\t            [8, -17],\n\t            [1, -13],\n\t            [-14, -30],\n\t            [10, -13],\n\t            [8, -21],\n\t            [8, -58]\n\t        ],\n\t        [\n\t            [3058, 4804],\n\t            [-14, 31],\n\t            [-8, 1],\n\t            [18, 61],\n\t            [-21, 27],\n\t            [-17, -5],\n\t            [-10, 10],\n\t            [-15, -15],\n\t            [-21, 7],\n\t            [-16, 62],\n\t            [-13, 15],\n\t            [-9, 28],\n\t            [-19, 28],\n\t            [-7, -5]\n\t        ],\n\t        [\n\t            [2695, 5543],\n\t            [-15, 14],\n\t            [-6, 12],\n\t            [4, 10],\n\t            [-1, 13],\n\t            [-8, 14],\n\t            [-11, 12],\n\t            [-10, 8],\n\t            [-1, 17],\n\t            [-8, 10],\n\t            [2, -17],\n\t            [-5, -14],\n\t            [-7, 17],\n\t            [-9, 5],\n\t            [-4, 12],\n\t            [1, 18],\n\t            [3, 19],\n\t            [-8, 8],\n\t            [7, 12]\n\t        ],\n\t        [\n\t            [2619, 5713],\n\t            [4, 7],\n\t            [18, -15],\n\t            [7, 7],\n\t            [9, -5],\n\t            [4, -12],\n\t            [8, -4],\n\t            [7, 13]\n\t        ],\n\t        [\n\t            [2676, 5704],\n\t            [7, -32],\n\t            [11, -24],\n\t            [13, -25]\n\t        ],\n\t        [\n\t            [2707, 5623],\n\t            [-11, -6],\n\t            [0, -23],\n\t            [6, -9],\n\t            [-4, -7],\n\t            [1, -11],\n\t            [-2, -12],\n\t            [-2, -12]\n\t        ],\n\t        [\n\t            [2715, 6427],\n\t            [23, -4],\n\t            [22, 0],\n\t            [26, -21],\n\t            [11, -21],\n\t            [26, 6],\n\t            [10, -13],\n\t            [24, -37],\n\t            [17, -27],\n\t            [9, 1],\n\t            [17, -12],\n\t            [-2, -17],\n\t            [20, -2],\n\t            [21, -24],\n\t            [-3, -14],\n\t            [-19, -7],\n\t            [-18, -3],\n\t            [-19, 4],\n\t            [-40, -5],\n\t            [18, 32],\n\t            [-11, 16],\n\t            [-18, 4],\n\t            [-9, 17],\n\t            [-7, 33],\n\t            [-16, -2],\n\t            [-26, 16],\n\t            [-8, 12],\n\t            [-36, 10],\n\t            [-10, 11],\n\t            [11, 15],\n\t            [-28, 3],\n\t            [-20, -31],\n\t            [-11, -1],\n\t            [-4, -14],\n\t            [-14, -7],\n\t            [-12, 6],\n\t            [15, 18],\n\t            [6, 22],\n\t            [13, 13],\n\t            [14, 11],\n\t            [21, 6],\n\t            [7, 6]\n\t        ],\n\t        [\n\t            [5909, 7133],\n\t            [2, 1],\n\t            [4, 14],\n\t            [20, -1],\n\t            [25, 18],\n\t            [-19, -25],\n\t            [2, -11]\n\t        ],\n\t        [\n\t            [5943, 7129],\n\t            [-3, 2],\n\t            [-5, -5],\n\t            [-4, 1],\n\t            [-2, -2],\n\t            [0, 6],\n\t            [-2, 4],\n\t            [-6, 0],\n\t            [-7, -5],\n\t            [-5, 3]\n\t        ],\n\t        [\n\t            [5943, 7129],\n\t            [1, -5],\n\t            [-28, -24],\n\t            [-14, 8],\n\t            [-7, 23],\n\t            [14, 2]\n\t        ],\n\t        [\n\t            [5377, 7945],\n\t            [-16, 25],\n\t            [-14, 15],\n\t            [-3, 25],\n\t            [-5, 17],\n\t            [21, 13],\n\t            [10, 15],\n\t            [20, 11],\n\t            [7, 11],\n\t            [7, -6],\n\t            [13, 6]\n\t        ],\n\t        [\n\t            [5417, 8077],\n\t            [13, -19],\n\t            [21, -5],\n\t            [-2, -17],\n\t            [15, -12],\n\t            [4, 15],\n\t            [19, -6],\n\t            [3, -19],\n\t            [20, -3],\n\t            [13, -29]\n\t        ],\n\t        [\n\t            [5523, 7982],\n\t            [-8, 0],\n\t            [-4, -11],\n\t            [-7, -3],\n\t            [-2, -13],\n\t            [-5, -3],\n\t            [-1, -5],\n\t            [-9, -7],\n\t            [-12, 1],\n\t            [-4, -13]\n\t        ],\n\t        [\n\t            [5275, 8306],\n\t            [1, -23],\n\t            [28, -14],\n\t            [-1, -21],\n\t            [29, 11],\n\t            [15, 16],\n\t            [32, -23],\n\t            [13, -19]\n\t        ],\n\t        [\n\t            [5392, 8233],\n\t            [6, -30],\n\t            [-8, -16],\n\t            [11, -21],\n\t            [6, -31],\n\t            [-2, -21],\n\t            [12, -37]\n\t        ],\n\t        [\n\t            [5207, 7871],\n\t            [3, 42],\n\t            [14, 40],\n\t            [-40, 11],\n\t            [-13, 16]\n\t        ],\n\t        [\n\t            [5171, 7980],\n\t            [2, 26],\n\t            [-6, 13]\n\t        ],\n\t        [\n\t            [5171, 8059],\n\t            [-5, 62],\n\t            [17, 0],\n\t            [7, 22],\n\t            [6, 54],\n\t            [-5, 20]\n\t        ],\n\t        [\n\t            [5191, 8217],\n\t            [6, 13],\n\t            [23, 3],\n\t            [5, -13],\n\t            [19, 29],\n\t            [-6, 22],\n\t            [-2, 34]\n\t        ],\n\t        [\n\t            [5236, 8305],\n\t            [21, -8],\n\t            [18, 9]\n\t        ],\n\t        [\n\t            [6196, 5808],\n\t            [7, -19],\n\t            [-1, -24],\n\t            [-16, -14],\n\t            [12, -16]\n\t        ],\n\t        [\n\t            [6198, 5735],\n\t            [-10, -32]\n\t        ],\n\t        [\n\t            [6188, 5703],\n\t            [-7, 11],\n\t            [-6, -5],\n\t            [-16, 1],\n\t            [0, 18],\n\t            [-2, 17],\n\t            [9, 27],\n\t            [10, 26]\n\t        ],\n\t        [\n\t            [6176, 5798],\n\t            [12, -5],\n\t            [8, 15]\n\t        ],\n\t        [\n\t            [5352, 8343],\n\t            [-17, -48],\n\t            [-29, 33],\n\t            [-4, 25],\n\t            [41, 19],\n\t            [9, -29]\n\t        ],\n\t        [\n\t            [5236, 8305],\n\t            [-11, 32],\n\t            [-1, 61],\n\t            [5, 16],\n\t            [8, 17],\n\t            [24, 4],\n\t            [10, 16],\n\t            [22, 17],\n\t            [-1, -30],\n\t            [-8, -20],\n\t            [4, -16],\n\t            [15, -9],\n\t            [-7, -22],\n\t            [-8, 6],\n\t            [-20, -42],\n\t            [7, -29]\n\t        ],\n\t        [\n\t            [3008, 6222],\n\t            [3, 10],\n\t            [22, 0],\n\t            [16, -15],\n\t            [8, 1],\n\t            [5, -21],\n\t            [15, 1],\n\t            [-1, -17],\n\t            [12, -2],\n\t            [14, -22],\n\t            [-10, -24],\n\t            [-14, 13],\n\t            [-12, -3],\n\t            [-9, 3],\n\t            [-5, -11],\n\t            [-11, -3],\n\t            [-4, 14],\n\t            [-10, -8],\n\t            [-11, -41],\n\t            [-7, 10],\n\t            [-1, 17]\n\t        ],\n\t        [\n\t            [3008, 6124],\n\t            [0, 16],\n\t            [-7, 17],\n\t            [7, 10],\n\t            [2, 23],\n\t            [-2, 32]\n\t        ],\n\t        [\n\t            [5333, 6444],\n\t            [-95, -112],\n\t            [-81, -117],\n\t            [-39, -26]\n\t        ],\n\t        [\n\t            [5118, 6189],\n\t            [-31, -6],\n\t            [0, 38],\n\t            [-13, 10],\n\t            [-17, 16],\n\t            [-7, 28],\n\t            [-94, 129],\n\t            [-93, 129]\n\t        ],\n\t        [\n\t            [4863, 6533],\n\t            [-105, 143]\n\t        ],\n\t        [\n\t            [4758, 6676],\n\t            [1, 11],\n\t            [0, 4]\n\t        ],\n\t        [\n\t            [4759, 6691],\n\t            [0, 70],\n\t            [44, 44],\n\t            [28, 9],\n\t            [23, 16],\n\t            [11, 29],\n\t            [32, 24],\n\t            [1, 44],\n\t            [16, 5],\n\t            [13, 22],\n\t            [36, 9],\n\t            [5, 23],\n\t            [-7, 13],\n\t            [-10, 62],\n\t            [-1, 36],\n\t            [-11, 38]\n\t        ],\n\t        [\n\t            [4939, 7135],\n\t            [27, 32],\n\t            [30, 11],\n\t            [17, 24],\n\t            [27, 18],\n\t            [47, 11],\n\t            [46, 4],\n\t            [14, -8],\n\t            [26, 23],\n\t            [30, 0],\n\t            [11, -13],\n\t            [19, 3]\n\t        ],\n\t        [\n\t            [5233, 7240],\n\t            [-5, -30],\n\t            [4, -56],\n\t            [-6, -49],\n\t            [-18, -33],\n\t            [3, -45],\n\t            [23, -35],\n\t            [0, -14],\n\t            [17, -24],\n\t            [12, -106]\n\t        ],\n\t        [\n\t            [5263, 6848],\n\t            [9, -52],\n\t            [1, -28],\n\t            [-5, -48],\n\t            [2, -27],\n\t            [-3, -32],\n\t            [2, -37],\n\t            [-11, -25],\n\t            [17, -43],\n\t            [1, -25],\n\t            [10, -33],\n\t            [13, 11],\n\t            [22, -28],\n\t            [12, -37]\n\t        ],\n\t        [\n\t            [2769, 4856],\n\t            [15, 45],\n\t            [-6, 25],\n\t            [-11, -27],\n\t            [-16, 26],\n\t            [5, 16],\n\t            [-4, 54],\n\t            [9, 9],\n\t            [5, 37],\n\t            [11, 38],\n\t            [-2, 24],\n\t            [15, 13],\n\t            [19, 23]\n\t        ],\n\t        [\n\t            [2906, 5049],\n\t            [4, -45],\n\t            [-9, -39],\n\t            [-30, -62],\n\t            [-33, -23],\n\t            [-17, -51],\n\t            [-6, -40],\n\t            [-15, -24],\n\t            [-12, 29],\n\t            [-11, 7],\n\t            [-12, -5],\n\t            [-1, 22],\n\t            [8, 14],\n\t            [-3, 24]\n\t        ],\n\t        [\n\t            [5969, 6800],\n\t            [-7, -23],\n\t            [-6, -45],\n\t            [-8, -31],\n\t            [-6, -10],\n\t            [-10, 19],\n\t            [-12, 26],\n\t            [-20, 85],\n\t            [-3, -5],\n\t            [12, -63],\n\t            [17, -59],\n\t            [21, -92],\n\t            [10, -32],\n\t            [9, -34],\n\t            [25, -65],\n\t            [-6, -10],\n\t            [1, -39],\n\t            [33, -53],\n\t            [4, -12]\n\t        ],\n\t        [\n\t            [6023, 6357],\n\t            [-110, 0],\n\t            [-107, 0],\n\t            [-112, 0]\n\t        ],\n\t        [\n\t            [5694, 6357],\n\t            [0, 218],\n\t            [0, 210],\n\t            [-8, 47],\n\t            [7, 37],\n\t            [-5, 25],\n\t            [10, 29]\n\t        ],\n\t        [\n\t            [5698, 6923],\n\t            [37, 0],\n\t            [27, -15],\n\t            [28, -18],\n\t            [13, -9],\n\t            [21, 19],\n\t            [11, 17],\n\t            [25, 5],\n\t            [20, -8],\n\t            [7, -29],\n\t            [7, 19],\n\t            [22, -14],\n\t            [22, -3],\n\t            [13, 15]\n\t        ],\n\t        [\n\t            [5951, 6902],\n\t            [18, -102]\n\t        ],\n\t        [\n\t            [6176, 5798],\n\t            [-10, 20],\n\t            [-11, 34],\n\t            [-12, 19],\n\t            [-8, 21],\n\t            [-24, 23],\n\t            [-19, 1],\n\t            [-7, 12],\n\t            [-16, -14],\n\t            [-17, 27],\n\t            [-8, -44],\n\t            [-33, 13]\n\t        ],\n\t        [\n\t            [6011, 5910],\n\t            [-3, 23],\n\t            [12, 87],\n\t            [3, 39],\n\t            [9, 18],\n\t            [20, 10],\n\t            [14, 34]\n\t        ],\n\t        [\n\t            [6066, 6121],\n\t            [16, -69],\n\t            [8, -54],\n\t            [15, -29],\n\t            [38, -55],\n\t            [16, -34],\n\t            [15, -34],\n\t            [8, -20],\n\t            [14, -18]\n\t        ],\n\t        [\n\t            [4749, 7532],\n\t            [1, 42],\n\t            [-11, 25],\n\t            [39, 43],\n\t            [34, -11],\n\t            [37, 1],\n\t            [30, -10],\n\t            [23, 3],\n\t            [45, -2]\n\t        ],\n\t        [\n\t            [4947, 7623],\n\t            [11, -23],\n\t            [51, -27],\n\t            [10, 13],\n\t            [31, -27],\n\t            [32, 8]\n\t        ],\n\t        [\n\t            [5082, 7567],\n\t            [2, -35],\n\t            [-26, -39],\n\t            [-36, -12],\n\t            [-2, -20],\n\t            [-18, -33],\n\t            [-10, -48],\n\t            [11, -34],\n\t            [-16, -26],\n\t            [-6, -39],\n\t            [-21, -11],\n\t            [-20, -46],\n\t            [-35, -1],\n\t            [-27, 1],\n\t            [-17, -21],\n\t            [-11, -22],\n\t            [-13, 5],\n\t            [-11, 20],\n\t            [-8, 34],\n\t            [-26, 9]\n\t        ],\n\t        [\n\t            [4792, 7249],\n\t            [-2, 20],\n\t            [10, 22],\n\t            [4, 16],\n\t            [-9, 17],\n\t            [7, 39],\n\t            [-11, 36],\n\t            [12, 5],\n\t            [1, 27],\n\t            [5, 9],\n\t            [0, 46],\n\t            [13, 16],\n\t            [-8, 30],\n\t            [-16, 2],\n\t            [-5, -8],\n\t            [-16, 0],\n\t            [-7, 29],\n\t            [-11, -8],\n\t            [-10, -15]\n\t        ],\n\t        [\n\t            [5675, 8472],\n\t            [3, 35],\n\t            [-10, -8],\n\t            [-18, 21],\n\t            [-2, 34],\n\t            [35, 17],\n\t            [35, 8],\n\t            [30, -10],\n\t            [29, 2]\n\t        ],\n\t        [\n\t            [5777, 8571],\n\t            [4, -10],\n\t            [-20, -34],\n\t            [8, -55],\n\t            [-12, -19]\n\t        ],\n\t        [\n\t            [5757, 8453],\n\t            [-22, 0],\n\t            [-24, 22],\n\t            [-13, 7],\n\t            [-23, -10]\n\t        ],\n\t        [\n\t            [6188, 5703],\n\t            [-6, -21],\n\t            [10, -32],\n\t            [10, -29],\n\t            [11, -21],\n\t            [90, -70],\n\t            [24, 0]\n\t        ],\n\t        [\n\t            [6327, 5530],\n\t            [-79, -177],\n\t            [-36, -3],\n\t            [-25, -41],\n\t            [-17, -1],\n\t            [-8, -19]\n\t        ],\n\t        [\n\t            [6162, 5289],\n\t            [-19, 0],\n\t            [-11, 20],\n\t            [-26, -25],\n\t            [-8, -24],\n\t            [-18, 4],\n\t            [-6, 7],\n\t            [-7, -1],\n\t            [-9, 0],\n\t            [-35, 50],\n\t            [-19, 0],\n\t            [-10, 20],\n\t            [0, 33],\n\t            [-14, 10]\n\t        ],\n\t        [\n\t            [5980, 5383],\n\t            [-17, 64],\n\t            [-12, 14],\n\t            [-5, 23],\n\t            [-14, 29],\n\t            [-17, 4],\n\t            [9, 34],\n\t            [15, 2],\n\t            [4, 18]\n\t        ],\n\t        [\n\t            [5943, 5571],\n\t            [0, 53]\n\t        ],\n\t        [\n\t            [5943, 5624],\n\t            [8, 62],\n\t            [13, 16],\n\t            [3, 24],\n\t            [12, 45],\n\t            [17, 30],\n\t            [11, 58],\n\t            [4, 51]\n\t        ],\n\t        [\n\t            [5794, 9138],\n\t            [-4, -42],\n\t            [42, -39],\n\t            [-26, -45],\n\t            [33, -67],\n\t            [-19, -51],\n\t            [25, -43],\n\t            [-11, -39],\n\t            [41, -40],\n\t            [-11, -31],\n\t            [-25, -34],\n\t            [-60, -75]\n\t        ],\n\t        [\n\t            [5779, 8632],\n\t            [-50, -5],\n\t            [-49, -21],\n\t            [-45, -13],\n\t            [-16, 32],\n\t            [-27, 20],\n\t            [6, 58],\n\t            [-14, 53],\n\t            [14, 35],\n\t            [25, 37],\n\t            [63, 64],\n\t            [19, 12],\n\t            [-3, 25],\n\t            [-39, 28]\n\t        ],\n\t        [\n\t            [5663, 8957],\n\t            [-9, 23],\n\t            [-1, 91],\n\t            [-43, 40],\n\t            [-37, 29]\n\t        ],\n\t        [\n\t            [5573, 9140],\n\t            [17, 16],\n\t            [30, -32],\n\t            [37, 3],\n\t            [30, -14],\n\t            [26, 26],\n\t            [14, 44],\n\t            [43, 20],\n\t            [35, -24],\n\t            [-11, -41]\n\t        ],\n\t        [\n\t            [9954, 4033],\n\t            [9, -17],\n\t            [-4, -31],\n\t            [-17, -8],\n\t            [-16, 7],\n\t            [-2, 26],\n\t            [10, 21],\n\t            [13, -8],\n\t            [7, 10]\n\t        ],\n\t        [\n\t            [0, 4079],\n\t            [9981, -14],\n\t            [-17, -13],\n\t            [-4, 23],\n\t            [14, 12],\n\t            [9, 3],\n\t            [-9983, 18]\n\t        ],\n\t        [\n\t            [0, 4108],\n\t            [0, -29]\n\t        ],\n\t        [\n\t            [0, 4108],\n\t            [6, 3],\n\t            [-4, -28],\n\t            [-2, -4]\n\t        ],\n\t        [\n\t            [3300, 1994],\n\t            [33, 36],\n\t            [24, -15],\n\t            [16, 24],\n\t            [22, -27],\n\t            [-8, -21],\n\t            [-37, -17],\n\t            [-13, 20],\n\t            [-23, -26],\n\t            [-14, 26]\n\t        ],\n\t        [\n\t            [5265, 7548],\n\t            [-9, -46],\n\t            [-13, 12],\n\t            [-6, 40],\n\t            [5, 22],\n\t            [18, 22],\n\t            [5, -50]\n\t        ],\n\t        [\n\t            [5157, 7984],\n\t            [6, -6],\n\t            [8, 2]\n\t        ],\n\t        [\n\t            [5190, 7775],\n\t            [-2, -17],\n\t            [9, -22],\n\t            [-10, -18],\n\t            [7, -46],\n\t            [15, -8],\n\t            [-3, -25]\n\t        ],\n\t        [\n\t            [5206, 7639],\n\t            [-25, -34],\n\t            [-55, 16],\n\t            [-40, -19],\n\t            [-4, -35]\n\t        ],\n\t        [\n\t            [4947, 7623],\n\t            [14, 35],\n\t            [5, 118],\n\t            [-28, 62],\n\t            [-21, 30],\n\t            [-42, 23],\n\t            [-3, 43],\n\t            [36, 12],\n\t            [47, -15],\n\t            [-9, 67],\n\t            [26, -25],\n\t            [65, 46],\n\t            [8, 48],\n\t            [24, 12]\n\t        ],\n\t        [\n\t            [3485, 5194],\n\t            [7, 25],\n\t            [3, 27]\n\t        ],\n\t        [\n\t            [3495, 5246],\n\t            [4, 26],\n\t            [-10, 34]\n\t        ],\n\t        [\n\t            [3489, 5306],\n\t            [-3, 41],\n\t            [15, 51]\n\t        ],\n\t        [\n\t            [3501, 5398],\n\t            [9, -7],\n\t            [21, -14],\n\t            [29, -50],\n\t            [5, -24]\n\t        ],\n\t        [\n\t            [5308, 4822],\n\t            [-29, 60],\n\t            [-18, 49],\n\t            [-17, 61],\n\t            [1, 19],\n\t            [6, 19],\n\t            [7, 43],\n\t            [5, 44]\n\t        ],\n\t        [\n\t            [5263, 5117],\n\t            [10, 4],\n\t            [40, -1],\n\t            [0, 71]\n\t        ],\n\t        [\n\t            [4827, 8240],\n\t            [-21, 12],\n\t            [-17, -1],\n\t            [6, 32],\n\t            [-6, 32]\n\t        ],\n\t        [\n\t            [4789, 8315],\n\t            [23, 2],\n\t            [30, -37],\n\t            [-15, -40]\n\t        ],\n\t        [\n\t            [4916, 8521],\n\t            [-30, -63],\n\t            [29, 8],\n\t            [30, -1],\n\t            [-7, -48],\n\t            [-25, -53],\n\t            [29, -4],\n\t            [2, -6],\n\t            [25, -69],\n\t            [19, -10],\n\t            [17, -67],\n\t            [8, -24],\n\t            [33, -11],\n\t            [-3, -38],\n\t            [-14, -17],\n\t            [11, -30],\n\t            [-25, -31],\n\t            [-37, 0],\n\t            [-48, -16],\n\t            [-13, 12],\n\t            [-18, -28],\n\t            [-26, 7],\n\t            [-19, -23],\n\t            [-15, 12],\n\t            [41, 62],\n\t            [25, 13],\n\t            [-1, 0],\n\t            [-43, 9],\n\t            [-8, 24],\n\t            [29, 18],\n\t            [-15, 32],\n\t            [5, 39],\n\t            [42, -6],\n\t            [4, 35],\n\t            [-19, 36],\n\t            [0, 1],\n\t            [-34, 10],\n\t            [-7, 16],\n\t            [10, 27],\n\t            [-9, 16],\n\t            [-15, -28],\n\t            [-1, 57],\n\t            [-14, 30],\n\t            [10, 61],\n\t            [21, 48],\n\t            [23, -4],\n\t            [33, 4]\n\t        ],\n\t        [\n\t            [6154, 7511],\n\t            [4, 26],\n\t            [-7, 40],\n\t            [-16, 22],\n\t            [-16, 6],\n\t            [-10, 19]\n\t        ],\n\t        [\n\t            [6109, 7624],\n\t            [4, 6],\n\t            [23, -10],\n\t            [41, -9],\n\t            [38, -28],\n\t            [5, -11],\n\t            [17, 9],\n\t            [25, -13],\n\t            [9, -24],\n\t            [17, -13]\n\t        ],\n\t        [\n\t            [6210, 7485],\n\t            [-27, 29],\n\t            [-29, -3]\n\t        ],\n\t        [\n\t            [5029, 5408],\n\t            [-44, -35],\n\t            [-15, -20],\n\t            [-25, -17],\n\t            [-25, 17]\n\t        ],\n\t        [\n\t            [5000, 5708],\n\t            [-2, -18],\n\t            [12, -30],\n\t            [0, -43],\n\t            [2, -47],\n\t            [7, -21],\n\t            [-6, -54],\n\t            [2, -29],\n\t            [8, -37],\n\t            [6, -21]\n\t        ],\n\t        [\n\t            [4765, 5512],\n\t            [-8, 1],\n\t            [-5, -24],\n\t            [-8, 1],\n\t            [-6, 12],\n\t            [2, 24],\n\t            [-11, 36],\n\t            [-8, -7],\n\t            [-6, -1]\n\t        ],\n\t        [\n\t            [4715, 5554],\n\t            [-7, -3],\n\t            [0, 21],\n\t            [-4, 16],\n\t            [0, 17],\n\t            [-6, 25],\n\t            [-7, 21],\n\t            [-23, 0],\n\t            [-6, -11],\n\t            [-8, -1],\n\t            [-4, -13],\n\t            [-4, -17],\n\t            [-14, -26]\n\t        ],\n\t        [\n\t            [4632, 5583],\n\t            [-13, 35],\n\t            [-10, 24],\n\t            [-8, 7],\n\t            [-6, 12],\n\t            [-4, 26],\n\t            [-4, 13],\n\t            [-8, 10]\n\t        ],\n\t        [\n\t            [4579, 5710],\n\t            [13, 29],\n\t            [8, -2],\n\t            [7, 10],\n\t            [6, 0],\n\t            [5, 8],\n\t            [-3, 20],\n\t            [3, 6],\n\t            [1, 20]\n\t        ],\n\t        [\n\t            [4619, 5801],\n\t            [13, -1],\n\t            [20, -14],\n\t            [6, 1],\n\t            [3, 7],\n\t            [15, -5],\n\t            [4, 4]\n\t        ],\n\t        [\n\t            [4680, 5793],\n\t            [1, -22],\n\t            [5, 0],\n\t            [7, 8],\n\t            [5, -2],\n\t            [7, -15],\n\t            [12, -5],\n\t            [8, 13],\n\t            [9, 8],\n\t            [6, 8],\n\t            [6, -1],\n\t            [6, -13],\n\t            [3, -17],\n\t            [12, -24],\n\t            [-6, -16],\n\t            [-1, -19],\n\t            [6, 6],\n\t            [3, -7],\n\t            [-1, -17],\n\t            [8, -18]\n\t        ],\n\t        [\n\t            [4532, 5834],\n\t            [3, 27]\n\t        ],\n\t        [\n\t            [4535, 5861],\n\t            [31, 1],\n\t            [6, 14],\n\t            [9, 1],\n\t            [11, -14],\n\t            [8, -1],\n\t            [9, 10],\n\t            [6, -17],\n\t            [-12, -13],\n\t            [-12, 1],\n\t            [-12, 13],\n\t            [-10, -14],\n\t            [-5, -1],\n\t            [-7, -8],\n\t            [-25, 1]\n\t        ],\n\t        [\n\t            [4579, 5710],\n\t            [-15, 24],\n\t            [-11, 4],\n\t            [-7, 17],\n\t            [1, 9],\n\t            [-9, 13],\n\t            [-2, 12]\n\t        ],\n\t        [\n\t            [4536, 5789],\n\t            [15, 10],\n\t            [9, -2],\n\t            [8, 7],\n\t            [51, -3]\n\t        ],\n\t        [\n\t            [5263, 5117],\n\t            [-5, 9],\n\t            [10, 66]\n\t        ],\n\t        [\n\t            [5658, 7167],\n\t            [15, -20],\n\t            [22, 3],\n\t            [20, -4],\n\t            [0, -10],\n\t            [15, 7],\n\t            [-4, -18],\n\t            [-40, -5],\n\t            [1, 10],\n\t            [-34, 12],\n\t            [5, 25]\n\t        ],\n\t        [\n\t            [5723, 7469],\n\t            [-17, 2],\n\t            [-14, 6],\n\t            [-34, -16],\n\t            [19, -33],\n\t            [-14, -10],\n\t            [-15, 0],\n\t            [-15, 31],\n\t            [-5, -13],\n\t            [6, -36],\n\t            [14, -27],\n\t            [-10, -13],\n\t            [15, -27],\n\t            [14, -18],\n\t            [0, -33],\n\t            [-25, 16],\n\t            [8, -30],\n\t            [-18, -7],\n\t            [11, -52],\n\t            [-19, -1],\n\t            [-23, 26],\n\t            [-10, 47],\n\t            [-5, 40],\n\t            [-11, 27],\n\t            [-14, 34],\n\t            [-2, 16]\n\t        ],\n\t        [\n\t            [5583, 7470],\n\t            [18, 6],\n\t            [11, 13],\n\t            [15, -2],\n\t            [5, 11],\n\t            [5, 2]\n\t        ],\n\t        [\n\t            [5725, 7529],\n\t            [13, -16],\n\t            [-8, -37],\n\t            [-7, -7]\n\t        ],\n\t        [\n\t            [3701, 9939],\n\t            [93, 35],\n\t            [97, -2],\n\t            [36, 21],\n\t            [98, 6],\n\t            [222, -7],\n\t            [174, -47],\n\t            [-52, -23],\n\t            [-106, -3],\n\t            [-150, -5],\n\t            [14, -11],\n\t            [99, 7],\n\t            [83, -21],\n\t            [54, 18],\n\t            [23, -21],\n\t            [-30, -34],\n\t            [71, 22],\n\t            [135, 23],\n\t            [83, -12],\n\t            [15, -25],\n\t            [-113, -42],\n\t            [-16, -14],\n\t            [-88, -10],\n\t            [64, -3],\n\t            [-32, -43],\n\t            [-23, -38],\n\t            [1, -66],\n\t            [33, -38],\n\t            [-43, -3],\n\t            [-46, -19],\n\t            [52, -31],\n\t            [6, -50],\n\t            [-30, -6],\n\t            [36, -50],\n\t            [-61, -5],\n\t            [32, -24],\n\t            [-9, -20],\n\t            [-39, -10],\n\t            [-39, 0],\n\t            [35, -40],\n\t            [0, -26],\n\t            [-55, 24],\n\t            [-14, -15],\n\t            [37, -15],\n\t            [37, -36],\n\t            [10, -48],\n\t            [-49, -11],\n\t            [-22, 22],\n\t            [-34, 34],\n\t            [10, -40],\n\t            [-33, -31],\n\t            [73, -2],\n\t            [39, -3],\n\t            [-75, -52],\n\t            [-75, -46],\n\t            [-81, -21],\n\t            [-31, 0],\n\t            [-29, -23],\n\t            [-38, -62],\n\t            [-60, -42],\n\t            [-19, -2],\n\t            [-37, -15],\n\t            [-40, -13],\n\t            [-24, -37],\n\t            [0, -41],\n\t            [-15, -39],\n\t            [-45, -47],\n\t            [11, -47],\n\t            [-12, -48],\n\t            [-14, -58],\n\t            [-39, -4],\n\t            [-41, 49],\n\t            [-56, 0],\n\t            [-27, 32],\n\t            [-18, 58],\n\t            [-49, 73],\n\t            [-14, 39],\n\t            [-3, 53],\n\t            [-39, 54],\n\t            [10, 44],\n\t            [-18, 21],\n\t            [27, 69],\n\t            [42, 22],\n\t            [11, 25],\n\t            [6, 46],\n\t            [-32, -21],\n\t            [-15, -9],\n\t            [-25, -8],\n\t            [-34, 19],\n\t            [-2, 40],\n\t            [11, 31],\n\t            [25, 1],\n\t            [57, -15],\n\t            [-48, 37],\n\t            [-24, 20],\n\t            [-28, -8],\n\t            [-23, 15],\n\t            [31, 55],\n\t            [-17, 22],\n\t            [-22, 41],\n\t            [-34, 62],\n\t            [-35, 23],\n\t            [0, 25],\n\t            [-74, 34],\n\t            [-59, 5],\n\t            [-74, -3],\n\t            [-68, -4],\n\t            [-32, 19],\n\t            [-49, 37],\n\t            [73, 19],\n\t            [56, 3],\n\t            [-119, 15],\n\t            [-62, 24],\n\t            [3, 23],\n\t            [106, 28],\n\t            [101, 29],\n\t            [11, 21],\n\t            [-75, 22],\n\t            [24, 23],\n\t            [97, 41],\n\t            [40, 7],\n\t            [-12, 26],\n\t            [66, 16],\n\t            [86, 9],\n\t            [85, 1],\n\t            [30, -19],\n\t            [74, 33],\n\t            [66, -22],\n\t            [39, -5],\n\t            [58, -19],\n\t            [-66, 32],\n\t            [4, 25]\n\t        ],\n\t        [\n\t            [2497, 5869],\n\t            [-14, 10],\n\t            [-17, 1],\n\t            [-13, 12],\n\t            [-15, 24]\n\t        ],\n\t        [\n\t            [2438, 5916],\n\t            [1, 18],\n\t            [3, 13],\n\t            [-4, 12],\n\t            [13, 48],\n\t            [36, 0],\n\t            [1, 20],\n\t            [-5, 4],\n\t            [-3, 12],\n\t            [-10, 14],\n\t            [-11, 20],\n\t            [13, 0],\n\t            [0, 33],\n\t            [26, 0],\n\t            [26, 0]\n\t        ],\n\t        [\n\t            [2529, 5996],\n\t            [10, -11],\n\t            [2, 9],\n\t            [8, -7]\n\t        ],\n\t        [\n\t            [2549, 5987],\n\t            [-13, -23],\n\t            [-13, -16],\n\t            [-2, -12],\n\t            [2, -11],\n\t            [-5, -15]\n\t        ],\n\t        [\n\t            [2518, 5910],\n\t            [-7, -4],\n\t            [2, -7],\n\t            [-6, -6],\n\t            [-9, -15],\n\t            [-1, -9]\n\t        ],\n\t        [\n\t            [3340, 5552],\n\t            [18, -22],\n\t            [17, -38],\n\t            [1, -31],\n\t            [10, -1],\n\t            [15, -29],\n\t            [11, -21]\n\t        ],\n\t        [\n\t            [3412, 5410],\n\t            [-4, -53],\n\t            [-17, -15],\n\t            [1, -14],\n\t            [-5, -31],\n\t            [13, -42],\n\t            [9, -1],\n\t            [3, -33],\n\t            [17, -51]\n\t        ],\n\t        [\n\t            [3313, 5365],\n\t            [-19, 45],\n\t            [7, 16],\n\t            [0, 27],\n\t            [17, 10],\n\t            [7, 11],\n\t            [-10, 22],\n\t            [3, 21],\n\t            [22, 35]\n\t        ],\n\t        [\n\t            [2574, 5825],\n\t            [-5, 18],\n\t            [-8, 5]\n\t        ],\n\t        [\n\t            [2561, 5848],\n\t            [2, 24],\n\t            [-4, 6],\n\t            [-6, 4],\n\t            [-12, -7],\n\t            [-1, 8],\n\t            [-8, 10],\n\t            [-6, 12],\n\t            [-8, 5]\n\t        ],\n\t        [\n\t            [2549, 5987],\n\t            [3, -3],\n\t            [6, 11],\n\t            [8, 1],\n\t            [3, -5],\n\t            [4, 3],\n\t            [13, -6],\n\t            [13, 2],\n\t            [9, 6],\n\t            [3, 7],\n\t            [9, -3],\n\t            [6, -4],\n\t            [8, 1],\n\t            [5, 5],\n\t            [13, -8],\n\t            [4, -1],\n\t            [9, -11],\n\t            [8, -13],\n\t            [10, -9],\n\t            [7, -17]\n\t        ],\n\t        [\n\t            [2690, 5943],\n\t            [-9, 2],\n\t            [-4, -8],\n\t            [-10, -8],\n\t            [-7, 0],\n\t            [-6, -8],\n\t            [-6, 3],\n\t            [-4, 9],\n\t            [-3, -2],\n\t            [-4, -14],\n\t            [-3, 1],\n\t            [0, -12],\n\t            [-10, -17],\n\t            [-5, -7],\n\t            [-3, -7],\n\t            [-8, 12],\n\t            [-6, -16],\n\t            [-6, 1],\n\t            [-6, -2],\n\t            [0, -29],\n\t            [-4, 0],\n\t            [-3, -14],\n\t            [-9, -2]\n\t        ],\n\t        [\n\t            [5522, 7770],\n\t            [7, -23],\n\t            [9, -17],\n\t            [-11, -22]\n\t        ],\n\t        [\n\t            [5515, 7577],\n\t            [-3, -10]\n\t        ],\n\t        [\n\t            [5512, 7567],\n\t            [-26, 22],\n\t            [-16, 21],\n\t            [-26, 18],\n\t            [-23, 43],\n\t            [6, 5],\n\t            [-13, 25],\n\t            [-1, 19],\n\t            [-17, 10],\n\t            [-9, -26],\n\t            [-8, 20],\n\t            [0, 21],\n\t            [1, 1]\n\t        ],\n\t        [\n\t            [5380, 7746],\n\t            [20, -2],\n\t            [5, 9],\n\t            [9, -9],\n\t            [11, -1],\n\t            [0, 16],\n\t            [10, 6],\n\t            [2, 24],\n\t            [23, 16]\n\t        ],\n\t        [\n\t            [5460, 7805],\n\t            [8, -7],\n\t            [21, -26],\n\t            [23, -11],\n\t            [10, 9]\n\t        ],\n\t        [\n\t            [3008, 6124],\n\t            [-19, 10],\n\t            [-13, -5],\n\t            [-17, 5],\n\t            [-13, -11],\n\t            [-15, 18],\n\t            [3, 19],\n\t            [25, -8],\n\t            [21, -5],\n\t            [10, 13],\n\t            [-12, 26],\n\t            [0, 23],\n\t            [-18, 9],\n\t            [7, 16],\n\t            [17, -3],\n\t            [24, -9]\n\t        ],\n\t        [\n\t            [5471, 7900],\n\t            [14, -15],\n\t            [10, -6],\n\t            [24, 7],\n\t            [2, 12],\n\t            [11, 2],\n\t            [14, 9],\n\t            [3, -4],\n\t            [13, 8],\n\t            [6, 13],\n\t            [9, 4],\n\t            [30, -18],\n\t            [6, 6]\n\t        ],\n\t        [\n\t            [5613, 7918],\n\t            [15, -16],\n\t            [2, -16]\n\t        ],\n\t        [\n\t            [5630, 7886],\n\t            [-17, -12],\n\t            [-13, -40],\n\t            [-17, -40],\n\t            [-22, -11]\n\t        ],\n\t        [\n\t            [5561, 7783],\n\t            [-17, 2],\n\t            [-22, -15]\n\t        ],\n\t        [\n\t            [5460, 7805],\n\t            [-6, 20],\n\t            [-4, 0]\n\t        ],\n\t        [\n\t            [8352, 4453],\n\t            [-11, -2],\n\t            [-37, 42],\n\t            [26, 11],\n\t            [14, -18],\n\t            [10, -17],\n\t            [-2, -16]\n\t        ],\n\t        [\n\t            [8471, 4532],\n\t            [2, -11],\n\t            [1, -18]\n\t        ],\n\t        [\n\t            [8474, 4503],\n\t            [-18, -45],\n\t            [-24, -13],\n\t            [-3, 8],\n\t            [2, 20],\n\t            [12, 36],\n\t            [28, 23]\n\t        ],\n\t        [\n\t            [8274, 4579],\n\t            [10, -16],\n\t            [17, 5],\n\t            [7, -25],\n\t            [-32, -12],\n\t            [-19, -8],\n\t            [-15, 1],\n\t            [10, 34],\n\t            [15, 0],\n\t            [7, 21]\n\t        ],\n\t        [\n\t            [8413, 4579],\n\t            [-4, -32],\n\t            [-42, -17],\n\t            [-37, 7],\n\t            [0, 22],\n\t            [22, 12],\n\t            [18, -18],\n\t            [18, 5],\n\t            [25, 21]\n\t        ],\n\t        [\n\t            [8017, 4657],\n\t            [53, -6],\n\t            [6, 25],\n\t            [51, -29],\n\t            [10, -38],\n\t            [42, -11],\n\t            [34, -35],\n\t            [-31, -23],\n\t            [-31, 24],\n\t            [-25, -1],\n\t            [-29, 4],\n\t            [-26, 11],\n\t            [-32, 22],\n\t            [-21, 6],\n\t            [-11, -7],\n\t            [-51, 24],\n\t            [-5, 25],\n\t            [-25, 5],\n\t            [19, 56],\n\t            [34, -3],\n\t            [22, -23],\n\t            [12, -5],\n\t            [4, -21]\n\t        ],\n\t        [\n\t            [8741, 4690],\n\t            [-14, -40],\n\t            [-3, 45],\n\t            [5, 21],\n\t            [6, 20],\n\t            [7, -17],\n\t            [-1, -29]\n\t        ],\n\t        [\n\t            [8534, 4853],\n\t            [-11, -19],\n\t            [-19, 10],\n\t            [-5, 26],\n\t            [28, 3],\n\t            [7, -20]\n\t        ],\n\t        [\n\t            [8623, 4875],\n\t            [10, -45],\n\t            [-23, 24],\n\t            [-23, 5],\n\t            [-16, -4],\n\t            [-19, 2],\n\t            [6, 33],\n\t            [35, 2],\n\t            [30, -17]\n\t        ],\n\t        [\n\t            [8916, 4904],\n\t            [0, -193],\n\t            [1, -192]\n\t        ],\n\t        [\n\t            [8917, 4519],\n\t            [-25, 48],\n\t            [-28, 12],\n\t            [-7, -17],\n\t            [-35, -1],\n\t            [12, 48],\n\t            [17, 16],\n\t            [-7, 64],\n\t            [-14, 50],\n\t            [-53, 50],\n\t            [-23, 5],\n\t            [-42, 54],\n\t            [-8, -28],\n\t            [-11, -5],\n\t            [-6, 21],\n\t            [0, 26],\n\t            [-21, 29],\n\t            [29, 21],\n\t            [20, -1],\n\t            [-2, 16],\n\t            [-41, 0],\n\t            [-11, 35],\n\t            [-25, 11],\n\t            [-11, 29],\n\t            [37, 14],\n\t            [14, 20],\n\t            [45, -25],\n\t            [4, -22],\n\t            [8, -95],\n\t            [29, -35],\n\t            [23, 62],\n\t            [32, 36],\n\t            [25, 0],\n\t            [23, -21],\n\t            [21, -21],\n\t            [30, -11]\n\t        ],\n\t        [\n\t            [8478, 5141],\n\t            [-22, -58],\n\t            [-21, -12],\n\t            [-27, 12],\n\t            [-46, -3],\n\t            [-24, -8],\n\t            [-4, -45],\n\t            [24, -53],\n\t            [15, 27],\n\t            [52, 20],\n\t            [-2, -27],\n\t            [-12, 9],\n\t            [-12, -35],\n\t            [-25, -23],\n\t            [27, -76],\n\t            [-5, -20],\n\t            [25, -68],\n\t            [-1, -39],\n\t            [-14, -17],\n\t            [-11, 20],\n\t            [13, 49],\n\t            [-27, -23],\n\t            [-7, 16],\n\t            [3, 23],\n\t            [-20, 35],\n\t            [3, 57],\n\t            [-19, -18],\n\t            [2, -69],\n\t            [1, -84],\n\t            [-17, -9],\n\t            [-12, 18],\n\t            [8, 54],\n\t            [-4, 57],\n\t            [-12, 1],\n\t            [-9, 40],\n\t            [12, 39],\n\t            [4, 47],\n\t            [14, 89],\n\t            [5, 24],\n\t            [24, 44],\n\t            [22, -18],\n\t            [35, -8],\n\t            [32, 3],\n\t            [27, 43],\n\t            [5, -14]\n\t        ],\n\t        [\n\t            [8574, 5124],\n\t            [-2, -51],\n\t            [-14, 6],\n\t            [-4, -36],\n\t            [11, -32],\n\t            [-8, -7],\n\t            [-11, 38],\n\t            [-8, 75],\n\t            [6, 47],\n\t            [9, 22],\n\t            [2, -32],\n\t            [16, -5],\n\t            [3, -25]\n\t        ],\n\t        [\n\t            [8045, 5176],\n\t            [5, -39],\n\t            [19, -34],\n\t            [18, 12],\n\t            [18, -4],\n\t            [16, 30],\n\t            [13, 5],\n\t            [26, -17],\n\t            [23, 13],\n\t            [14, 82],\n\t            [11, 21],\n\t            [10, 67],\n\t            [32, 0],\n\t            [24, -10]\n\t        ],\n\t        [\n\t            [8274, 5302],\n\t            [-16, -53],\n\t            [20, -56],\n\t            [-5, -28],\n\t            [32, -54],\n\t            [-33, -7],\n\t            [-10, -40],\n\t            [2, -54],\n\t            [-27, -40],\n\t            [-1, -59],\n\t            [-10, -91],\n\t            [-5, 21],\n\t            [-31, -26],\n\t            [-11, 36],\n\t            [-20, 3],\n\t            [-14, 19],\n\t            [-33, -21],\n\t            [-10, 29],\n\t            [-18, -4],\n\t            [-23, 7],\n\t            [-4, 79],\n\t            [-14, 17],\n\t            [-13, 50],\n\t            [-4, 52],\n\t            [3, 55],\n\t            [16, 39]\n\t        ],\n\t        [\n\t            [7939, 4712],\n\t            [-31, -1],\n\t            [-24, 49],\n\t            [-35, 48],\n\t            [-12, 36],\n\t            [-21, 48],\n\t            [-14, 44],\n\t            [-21, 83],\n\t            [-24, 49],\n\t            [-9, 51],\n\t            [-10, 46],\n\t            [-25, 37],\n\t            [-14, 51],\n\t            [-21, 33],\n\t            [-29, 65],\n\t            [-3, 30],\n\t            [18, -2],\n\t            [43, -12],\n\t            [25, -57],\n\t            [21, -40],\n\t            [16, -25],\n\t            [26, -63],\n\t            [28, -1],\n\t            [23, -41],\n\t            [16, -49],\n\t            [22, -27],\n\t            [-12, -49],\n\t            [16, -20],\n\t            [10, -2],\n\t            [5, -41],\n\t            [10, -33],\n\t            [20, -5],\n\t            [14, -37],\n\t            [-7, -74],\n\t            [-1, -91]\n\t        ],\n\t        [\n\t            [7252, 6841],\n\t            [-17, -27],\n\t            [-11, -55],\n\t            [27, -23],\n\t            [26, -29],\n\t            [36, -33],\n\t            [38, -8],\n\t            [16, -30],\n\t            [22, -5],\n\t            [33, -14],\n\t            [23, 1],\n\t            [4, 23],\n\t            [-4, 38],\n\t            [2, 25]\n\t        ],\n\t        [\n\t            [7703, 6727],\n\t            [2, -22],\n\t            [-10, -11],\n\t            [2, -36],\n\t            [-19, 10],\n\t            [-36, -41],\n\t            [0, -33],\n\t            [-15, -50],\n\t            [-1, -29],\n\t            [-13, -48],\n\t            [-21, 13],\n\t            [-1, -61],\n\t            [-7, -20],\n\t            [3, -25],\n\t            [-14, -14]\n\t        ],\n\t        [\n\t            [7472, 6360],\n\t            [-4, -21],\n\t            [-19, 1],\n\t            [-34, -13],\n\t            [2, -44],\n\t            [-15, -35],\n\t            [-40, -40],\n\t            [-31, -69],\n\t            [-21, -38],\n\t            [-28, -38],\n\t            [0, -27],\n\t            [-13, -15],\n\t            [-26, -21],\n\t            [-12, -3],\n\t            [-9, -45],\n\t            [6, -77],\n\t            [1, -49],\n\t            [-11, -56],\n\t            [0, -101],\n\t            [-15, -2],\n\t            [-12, -46],\n\t            [8, -19],\n\t            [-25, -17],\n\t            [-10, -40],\n\t            [-11, -17],\n\t            [-26, 55],\n\t            [-13, 83],\n\t            [-11, 60],\n\t            [-9, 28],\n\t            [-15, 56],\n\t            [-7, 74],\n\t            [-5, 37],\n\t            [-25, 81],\n\t            [-12, 115],\n\t            [-8, 75],\n\t            [0, 72],\n\t            [-5, 55],\n\t            [-41, -35],\n\t            [-19, 7],\n\t            [-36, 71],\n\t            [13, 22],\n\t            [-8, 23],\n\t            [-33, 50]\n\t        ],\n\t        [\n\t            [6893, 6457],\n\t            [19, 40],\n\t            [61, -1],\n\t            [-6, 51],\n\t            [-15, 30],\n\t            [-4, 46],\n\t            [-18, 26],\n\t            [31, 62],\n\t            [32, -4],\n\t            [29, 61],\n\t            [18, 60],\n\t            [27, 60],\n\t            [-1, 42],\n\t            [24, 34],\n\t            [-23, 29],\n\t            [-9, 40],\n\t            [-10, 52],\n\t            [14, 25],\n\t            [42, -14],\n\t            [31, 9],\n\t            [26, 49]\n\t        ],\n\t        [\n\t            [4827, 8240],\n\t            [5, -42],\n\t            [-21, -53],\n\t            [-49, -35],\n\t            [-40, 9],\n\t            [23, 62],\n\t            [-15, 60],\n\t            [38, 46],\n\t            [21, 28]\n\t        ],\n\t        [\n\t            [6497, 7255],\n\t            [25, 12],\n\t            [19, 33],\n\t            [19, -1],\n\t            [12, 11],\n\t            [20, -6],\n\t            [31, -30],\n\t            [22, -6],\n\t            [31, -53],\n\t            [21, -2],\n\t            [3, -49]\n\t        ],\n\t        [\n\t            [6690, 6820],\n\t            [14, -31],\n\t            [11, -36],\n\t            [27, -26],\n\t            [1, -52],\n\t            [13, -10],\n\t            [2, -27],\n\t            [-40, -30],\n\t            [-10, -69]\n\t        ],\n\t        [\n\t            [6708, 6539],\n\t            [-53, 18],\n\t            [-30, 13],\n\t            [-31, 8],\n\t            [-12, 73],\n\t            [-13, 10],\n\t            [-22, -11],\n\t            [-28, -28],\n\t            [-34, 20],\n\t            [-28, 45],\n\t            [-27, 17],\n\t            [-18, 56],\n\t            [-21, 79],\n\t            [-15, -10],\n\t            [-17, 20],\n\t            [-11, -24]\n\t        ],\n\t        [\n\t            [6348, 6825],\n\t            [-15, 32],\n\t            [0, 31],\n\t            [-9, 0],\n\t            [5, 43],\n\t            [-15, 45],\n\t            [-34, 32],\n\t            [-19, 56],\n\t            [6, 46],\n\t            [14, 21],\n\t            [-2, 34],\n\t            [-18, 18],\n\t            [-18, 70]\n\t        ],\n\t        [\n\t            [6243, 7253],\n\t            [-15, 48],\n\t            [5, 18],\n\t            [-8, 68],\n\t            [19, 17]\n\t        ],\n\t        [\n\t            [6357, 7321],\n\t            [9, -43],\n\t            [26, -13],\n\t            [20, -29],\n\t            [39, -10],\n\t            [44, 15],\n\t            [2, 14]\n\t        ],\n\t        [\n\t            [6348, 6825],\n\t            [-16, 3]\n\t        ],\n\t        [\n\t            [6332, 6828],\n\t            [-19, 5],\n\t            [-20, -56]\n\t        ],\n\t        [\n\t            [6293, 6777],\n\t            [-52, 4],\n\t            [-78, 119],\n\t            [-41, 41],\n\t            [-34, 16]\n\t        ],\n\t        [\n\t            [6088, 6957],\n\t            [-11, 72]\n\t        ],\n\t        [\n\t            [6077, 7029],\n\t            [61, 62],\n\t            [11, 71],\n\t            [-3, 43],\n\t            [16, 15],\n\t            [14, 37]\n\t        ],\n\t        [\n\t            [6176, 7257],\n\t            [12, 9],\n\t            [32, -8],\n\t            [10, -15],\n\t            [13, 10]\n\t        ],\n\t        [\n\t            [4597, 8984],\n\t            [-7, -39],\n\t            [31, -40],\n\t            [-36, -45],\n\t            [-80, -41],\n\t            [-24, -10],\n\t            [-36, 8],\n\t            [-78, 19],\n\t            [28, 26],\n\t            [-61, 29],\n\t            [49, 12],\n\t            [-1, 17],\n\t            [-58, 14],\n\t            [19, 38],\n\t            [42, 9],\n\t            [43, -40],\n\t            [42, 32],\n\t            [35, -17],\n\t            [45, 32],\n\t            [47, -4]\n\t        ],\n\t        [\n\t            [5992, 6990],\n\t            [-5, -19]\n\t        ],\n\t        [\n\t            [5987, 6971],\n\t            [-10, 8],\n\t            [-6, -39],\n\t            [7, -7],\n\t            [-7, -8],\n\t            [-1, -15],\n\t            [13, 8]\n\t        ],\n\t        [\n\t            [5983, 6918],\n\t            [0, -23],\n\t            [-14, -95]\n\t        ],\n\t        [\n\t            [5951, 6902],\n\t            [8, 19],\n\t            [-2, 4],\n\t            [8, 27],\n\t            [5, 45],\n\t            [4, 15],\n\t            [1, 0]\n\t        ],\n\t        [\n\t            [5975, 7012],\n\t            [9, 0],\n\t            [3, 11],\n\t            [7, 0]\n\t        ],\n\t        [\n\t            [5994, 7023],\n\t            [1, -24],\n\t            [-4, -9],\n\t            [1, 0]\n\t        ],\n\t        [\n\t            [5431, 7316],\n\t            [-10, -46],\n\t            [4, -19],\n\t            [-6, -30],\n\t            [-21, 22],\n\t            [-14, 7],\n\t            [-39, 30],\n\t            [4, 30],\n\t            [32, -6],\n\t            [28, 7],\n\t            [22, 5]\n\t        ],\n\t        [\n\t            [5255, 7492],\n\t            [17, -42],\n\t            [-4, -78],\n\t            [-13, 4],\n\t            [-11, -20],\n\t            [-10, 16],\n\t            [-2, 71],\n\t            [-6, 34],\n\t            [15, -3],\n\t            [14, 18]\n\t        ],\n\t        [\n\t            [5383, 7805],\n\t            [-3, -29],\n\t            [7, -25]\n\t        ],\n\t        [\n\t            [5387, 7751],\n\t            [-22, 8],\n\t            [-23, -20],\n\t            [1, -30],\n\t            [-3, -17],\n\t            [9, -30],\n\t            [26, -29],\n\t            [14, -49],\n\t            [31, -48],\n\t            [22, 0],\n\t            [7, -13],\n\t            [-8, -11],\n\t            [25, -22],\n\t            [20, -18],\n\t            [24, -30],\n\t            [3, -11],\n\t            [-5, -22],\n\t            [-16, 28],\n\t            [-24, 10],\n\t            [-12, -39],\n\t            [20, -21],\n\t            [-3, -31],\n\t            [-11, -4],\n\t            [-15, -50],\n\t            [-12, -5],\n\t            [0, 18],\n\t            [6, 32],\n\t            [6, 12],\n\t            [-11, 35],\n\t            [-8, 29],\n\t            [-12, 8],\n\t            [-8, 25],\n\t            [-18, 11],\n\t            [-12, 24],\n\t            [-21, 4],\n\t            [-21, 26],\n\t            [-26, 39],\n\t            [-19, 34],\n\t            [-8, 58],\n\t            [-14, 7],\n\t            [-23, 20],\n\t            [-12, -8],\n\t            [-16, -28],\n\t            [-12, -4]\n\t        ],\n\t        [\n\t            [2845, 6150],\n\t            [19, -5],\n\t            [14, -15],\n\t            [5, -16],\n\t            [-19, -1],\n\t            [-9, -10],\n\t            [-15, 10],\n\t            [-16, 21],\n\t            [3, 14],\n\t            [12, 4],\n\t            [6, -2]\n\t        ],\n\t        [\n\t            [5992, 6990],\n\t            [31, -24],\n\t            [54, 63]\n\t        ],\n\t        [\n\t            [6088, 6957],\n\t            [-5, -8],\n\t            [-56, -30],\n\t            [28, -59],\n\t            [-9, -10],\n\t            [-5, -20],\n\t            [-21, -8],\n\t            [-7, -21],\n\t            [-12, -19],\n\t            [-31, 10]\n\t        ],\n\t        [\n\t            [5970, 6792],\n\t            [-1, 8]\n\t        ],\n\t        [\n\t            [5983, 6918],\n\t            [4, 17],\n\t            [0, 36]\n\t        ],\n\t        [\n\t            [8739, 7075],\n\t            [4, -20],\n\t            [-16, -36],\n\t            [-11, 19],\n\t            [-15, -14],\n\t            [-7, -34],\n\t            [-18, 16],\n\t            [0, 28],\n\t            [15, 36],\n\t            [16, -7],\n\t            [12, 25],\n\t            [20, -13]\n\t        ],\n\t        [\n\t            [8915, 7252],\n\t            [-10, -47],\n\t            [4, -30],\n\t            [-14, -42],\n\t            [-35, -27],\n\t            [-49, -4],\n\t            [-40, -67],\n\t            [-19, 22],\n\t            [-1, 44],\n\t            [-48, -13],\n\t            [-33, -27],\n\t            [-32, -2],\n\t            [28, -43],\n\t            [-19, -101],\n\t            [-18, -24],\n\t            [-13, 23],\n\t            [7, 53],\n\t            [-18, 17],\n\t            [-11, 41],\n\t            [26, 18],\n\t            [15, 37],\n\t            [28, 30],\n\t            [20, 41],\n\t            [55, 17],\n\t            [30, -12],\n\t            [29, 105],\n\t            [19, -28],\n\t            [40, 59],\n\t            [16, 23],\n\t            [18, 72],\n\t            [-5, 67],\n\t            [11, 37],\n\t            [30, 11],\n\t            [15, -82],\n\t            [-1, -48],\n\t            [-25, -59],\n\t            [0, -61]\n\t        ],\n\t        [\n\t            [8997, 7667],\n\t            [19, -12],\n\t            [20, 25],\n\t            [6, -67],\n\t            [-41, -16],\n\t            [-25, -59],\n\t            [-43, 41],\n\t            [-15, -65],\n\t            [-31, -1],\n\t            [-4, 59],\n\t            [14, 46],\n\t            [29, 3],\n\t            [8, 82],\n\t            [9, 46],\n\t            [32, -62],\n\t            [22, -20]\n\t        ],\n\t        [\n\t            [6970, 7554],\n\t            [-15, -10],\n\t            [-37, -42],\n\t            [-12, -42],\n\t            [-11, 0],\n\t            [-7, 28],\n\t            [-36, 2],\n\t            [-5, 48],\n\t            [-14, 0],\n\t            [2, 60],\n\t            [-33, 43],\n\t            [-48, -5],\n\t            [-32, -8],\n\t            [-27, 53],\n\t            [-22, 22],\n\t            [-43, 43],\n\t            [-6, 5],\n\t            [-71, -35],\n\t            [1, -218]\n\t        ],\n\t        [\n\t            [6554, 7498],\n\t            [-14, -3],\n\t            [-20, 46],\n\t            [-18, 17],\n\t            [-32, -12],\n\t            [-12, -20]\n\t        ],\n\t        [\n\t            [6458, 7526],\n\t            [-2, 14],\n\t            [7, 25],\n\t            [-5, 21],\n\t            [-32, 20],\n\t            [-13, 53],\n\t            [-15, 15],\n\t            [-1, 19],\n\t            [27, -6],\n\t            [1, 44],\n\t            [23, 9],\n\t            [25, -9],\n\t            [5, 58],\n\t            [-5, 36],\n\t            [-28, -2],\n\t            [-24, 14],\n\t            [-32, -26],\n\t            [-26, -12]\n\t        ],\n\t        [\n\t            [6363, 7799],\n\t            [-14, 9],\n\t            [3, 31],\n\t            [-18, 39],\n\t            [-20, -2],\n\t            [-24, 40],\n\t            [16, 45],\n\t            [-8, 12],\n\t            [22, 65],\n\t            [29, -34],\n\t            [3, 43],\n\t            [58, 64],\n\t            [43, 2],\n\t            [61, -41],\n\t            [33, -24],\n\t            [30, 25],\n\t            [44, 1],\n\t            [35, -30],\n\t            [8, 17],\n\t            [39, -2],\n\t            [7, 28],\n\t            [-45, 40],\n\t            [27, 29],\n\t            [-5, 16],\n\t            [26, 15],\n\t            [-20, 41],\n\t            [13, 20],\n\t            [104, 21],\n\t            [13, 14],\n\t            [70, 22],\n\t            [25, 24],\n\t            [50, -12],\n\t            [9, -61],\n\t            [29, 14],\n\t            [35, -20],\n\t            [-2, -32],\n\t            [27, 3],\n\t            [69, 56],\n\t            [-10, -19],\n\t            [35, -46],\n\t            [62, -150],\n\t            [15, 31],\n\t            [39, -34],\n\t            [39, 16],\n\t            [16, -11],\n\t            [13, -34],\n\t            [20, -12],\n\t            [11, -25],\n\t            [36, 8],\n\t            [15, -36]\n\t        ],\n\t        [\n\t            [7229, 7559],\n\t            [-17, 9],\n\t            [-14, 21],\n\t            [-42, 6],\n\t            [-46, 2],\n\t            [-10, -6],\n\t            [-39, 24],\n\t            [-16, -12],\n\t            [-4, -35],\n\t            [-46, 21],\n\t            [-18, -9],\n\t            [-7, -26]\n\t        ],\n\t        [\n\t            [6155, 4958],\n\t            [-20, -24],\n\t            [-7, -24],\n\t            [-10, -4],\n\t            [-4, -42],\n\t            [-9, -24],\n\t            [-5, -39],\n\t            [-12, -20]\n\t        ],\n\t        [\n\t            [6088, 4781],\n\t            [-40, 59],\n\t            [-1, 35],\n\t            [-101, 120],\n\t            [-5, 6]\n\t        ],\n\t        [\n\t            [5941, 5001],\n\t            [0, 63],\n\t            [8, 24],\n\t            [14, 39],\n\t            [10, 43],\n\t            [-13, 68],\n\t            [-3, 30],\n\t            [-13, 41]\n\t        ],\n\t        [\n\t            [5944, 5309],\n\t            [17, 35],\n\t            [19, 39]\n\t        ],\n\t        [\n\t            [6162, 5289],\n\t            [-24, -67],\n\t            [0, -215],\n\t            [17, -49]\n\t        ],\n\t        [\n\t            [7046, 7387],\n\t            [-53, -9],\n\t            [-34, 19],\n\t            [-30, -4],\n\t            [3, 34],\n\t            [30, -10],\n\t            [10, 18]\n\t        ],\n\t        [\n\t            [6972, 7435],\n\t            [21, -6],\n\t            [36, 43],\n\t            [-33, 31],\n\t            [-20, -15],\n\t            [-21, 22],\n\t            [24, 39],\n\t            [-9, 5]\n\t        ],\n\t        [\n\t            [7849, 5777],\n\t            [-7, 72],\n\t            [18, 49],\n\t            [36, 11],\n\t            [26, -8]\n\t        ],\n\t        [\n\t            [7922, 5901],\n\t            [23, -23],\n\t            [12, 40],\n\t            [25, -21]\n\t        ],\n\t        [\n\t            [7982, 5897],\n\t            [6, -40],\n\t            [-3, -71],\n\t            [-47, -45],\n\t            [13, -36],\n\t            [-30, -4],\n\t            [-24, -24]\n\t        ],\n\t        [\n\t            [7897, 5677],\n\t            [-23, 9],\n\t            [-11, 30],\n\t            [-14, 61]\n\t        ],\n\t        [\n\t            [8564, 7339],\n\t            [24, -70],\n\t            [7, -38],\n\t            [0, -68],\n\t            [-10, -33],\n\t            [-25, -11],\n\t            [-22, -25],\n\t            [-25, -5],\n\t            [-3, 32],\n\t            [5, 45],\n\t            [-13, 61],\n\t            [21, 10],\n\t            [-19, 51]\n\t        ],\n\t        [\n\t            [8504, 7288],\n\t            [2, 5],\n\t            [12, -2],\n\t            [11, 27],\n\t            [20, 2],\n\t            [11, 4],\n\t            [4, 15]\n\t        ],\n\t        [\n\t            [5557, 7574],\n\t            [5, 13]\n\t        ],\n\t        [\n\t            [5562, 7587],\n\t            [7, 4],\n\t            [4, 20],\n\t            [5, 3],\n\t            [4, -8],\n\t            [5, -4],\n\t            [3, -10],\n\t            [5, -2],\n\t            [5, -11],\n\t            [4, 0],\n\t            [-3, -14],\n\t            [-3, -7],\n\t            [1, -5]\n\t        ],\n\t        [\n\t            [5599, 7553],\n\t            [-6, -2],\n\t            [-17, -9],\n\t            [-1, -12],\n\t            [-4, 0]\n\t        ],\n\t        [\n\t            [6332, 6828],\n\t            [6, -26],\n\t            [-3, -13],\n\t            [9, -45]\n\t        ],\n\t        [\n\t            [6344, 6744],\n\t            [-19, -1],\n\t            [-7, 28],\n\t            [-25, 6]\n\t        ],\n\t        [\n\t            [7922, 5901],\n\t            [9, 26],\n\t            [1, 50],\n\t            [-22, 52],\n\t            [-2, 58],\n\t            [-21, 48],\n\t            [-21, 4],\n\t            [-6, -20],\n\t            [-16, -2],\n\t            [-8, 10],\n\t            [-30, -35],\n\t            [0, 53],\n\t            [7, 62],\n\t            [-19, 3],\n\t            [-2, 36],\n\t            [-12, 18]\n\t        ],\n\t        [\n\t            [7780, 6264],\n\t            [6, 21],\n\t            [24, 39]\n\t        ],\n\t        [\n\t            [7837, 6385],\n\t            [17, -47],\n\t            [12, -54],\n\t            [34, 0],\n\t            [11, -52],\n\t            [-18, -15],\n\t            [-8, -21],\n\t            [34, -36],\n\t            [23, -70],\n\t            [17, -52],\n\t            [21, -41],\n\t            [7, -41],\n\t            [-5, -59]\n\t        ],\n\t        [\n\t            [5975, 7012],\n\t            [10, 49],\n\t            [14, 41],\n\t            [0, 2]\n\t        ],\n\t        [\n\t            [5999, 7104],\n\t            [13, -3],\n\t            [4, -23],\n\t            [-15, -22],\n\t            [-7, -33]\n\t        ],\n\t        [\n\t            [4785, 5315],\n\t            [-7, 0],\n\t            [-29, 28],\n\t            [-25, 45],\n\t            [-24, 32],\n\t            [-18, 38]\n\t        ],\n\t        [\n\t            [4682, 5458],\n\t            [6, 19],\n\t            [2, 17],\n\t            [12, 33],\n\t            [13, 27]\n\t        ],\n\t        [\n\t            [5412, 6408],\n\t            [-20, -22],\n\t            [-15, 33],\n\t            [-44, 25]\n\t        ],\n\t        [\n\t            [5263, 6848],\n\t            [13, 14],\n\t            [3, 25],\n\t            [-3, 24],\n\t            [19, 23],\n\t            [8, 19],\n\t            [14, 17],\n\t            [2, 45]\n\t        ],\n\t        [\n\t            [5319, 7015],\n\t            [32, -20],\n\t            [12, 5],\n\t            [23, -10],\n\t            [37, -26],\n\t            [13, -53],\n\t            [25, -11],\n\t            [39, -25],\n\t            [30, -29],\n\t            [13, 15],\n\t            [13, 27],\n\t            [-6, 45],\n\t            [9, 29],\n\t            [20, 28],\n\t            [19, 8],\n\t            [37, -12],\n\t            [10, -27],\n\t            [10, 0],\n\t            [9, -10],\n\t            [28, -7],\n\t            [6, -19]\n\t        ],\n\t        [\n\t            [5694, 6357],\n\t            [0, -118],\n\t            [-32, 0],\n\t            [0, -25]\n\t        ],\n\t        [\n\t            [5662, 6214],\n\t            [-111, 113],\n\t            [-111, 113],\n\t            [-28, -32]\n\t        ],\n\t        [\n\t            [7271, 5502],\n\t            [-4, -62],\n\t            [-12, -16],\n\t            [-24, -14],\n\t            [-13, 47],\n\t            [-5, 85],\n\t            [13, 96],\n\t            [19, -33],\n\t            [13, -42],\n\t            [13, -61]\n\t        ],\n\t        [\n\t            [5804, 3347],\n\t            [10, -18],\n\t            [-9, -29],\n\t            [-4, -19],\n\t            [-16, -9],\n\t            [-5, -19],\n\t            [-10, -6],\n\t            [-21, 46],\n\t            [15, 37],\n\t            [15, 23],\n\t            [13, 12],\n\t            [12, -18]\n\t        ],\n\t        [\n\t            [5631, 8267],\n\t            [-2, 15],\n\t            [3, 16],\n\t            [-13, 10],\n\t            [-29, 10]\n\t        ],\n\t        [\n\t            [5590, 8318],\n\t            [-6, 50]\n\t        ],\n\t        [\n\t            [5584, 8368],\n\t            [32, 18],\n\t            [47, -4],\n\t            [27, 6],\n\t            [4, -12],\n\t            [15, -4],\n\t            [26, -29]\n\t        ],\n\t        [\n\t            [5652, 8242],\n\t            [-7, 19],\n\t            [-14, 6]\n\t        ],\n\t        [\n\t            [5584, 8368],\n\t            [1, 44],\n\t            [14, 37],\n\t            [26, 20],\n\t            [22, -44],\n\t            [22, 1],\n\t            [6, 46]\n\t        ],\n\t        [\n\t            [5757, 8453],\n\t            [14, -14],\n\t            [2, -28],\n\t            [9, -35]\n\t        ],\n\t        [\n\t            [4759, 6691],\n\t            [-4, 0],\n\t            [0, -31],\n\t            [-17, -2],\n\t            [-9, -14],\n\t            [-13, 0],\n\t            [-10, 8],\n\t            [-23, -6],\n\t            [-9, -46],\n\t            [-9, -5],\n\t            [-13, -74],\n\t            [-38, -64],\n\t            [-9, -81],\n\t            [-12, -27],\n\t            [-3, -21],\n\t            [-63, -5]\n\t        ],\n\t        [\n\t            [4527, 6323],\n\t            [1, 27],\n\t            [11, 17],\n\t            [9, 30],\n\t            [-2, 20],\n\t            [10, 42],\n\t            [15, 38],\n\t            [9, 9],\n\t            [8, 35],\n\t            [0, 31],\n\t            [10, 37],\n\t            [19, 21],\n\t            [18, 60],\n\t            [0, 1],\n\t            [14, 23],\n\t            [26, 6],\n\t            [22, 41],\n\t            [14, 16],\n\t            [23, 49],\n\t            [-7, 73],\n\t            [10, 51],\n\t            [4, 31],\n\t            [18, 40],\n\t            [28, 27],\n\t            [21, 25],\n\t            [18, 61],\n\t            [9, 36],\n\t            [20, 0],\n\t            [17, -25],\n\t            [26, 4],\n\t            [29, -13],\n\t            [12, -1]\n\t        ],\n\t        [\n\t            [5739, 7906],\n\t            [6, 9],\n\t            [19, 6],\n\t            [20, -19],\n\t            [12, -2],\n\t            [12, -16],\n\t            [-2, -20],\n\t            [11, -9],\n\t            [4, -25],\n\t            [9, -15],\n\t            [-2, -9],\n\t            [5, -6],\n\t            [-7, -4],\n\t            [-16, 1],\n\t            [-3, 9],\n\t            [-6, -5],\n\t            [2, -11],\n\t            [-7, -19],\n\t            [-5, -20],\n\t            [-7, -6]\n\t        ],\n\t        [\n\t            [5784, 7745],\n\t            [-5, 27],\n\t            [3, 25],\n\t            [-1, 26],\n\t            [-16, 35],\n\t            [-9, 25],\n\t            [-9, 17],\n\t            [-8, 6]\n\t        ],\n\t        [\n\t            [6376, 4321],\n\t            [7, -25],\n\t            [7, -39],\n\t            [4, -71],\n\t            [7, -28],\n\t            [-2, -28],\n\t            [-5, -18],\n\t            [-10, 35],\n\t            [-5, -18],\n\t            [5, -43],\n\t            [-2, -25],\n\t            [-8, -14],\n\t            [-1, -50],\n\t            [-11, -69],\n\t            [-14, -81],\n\t            [-17, -112],\n\t            [-11, -82],\n\t            [-12, -69],\n\t            [-23, -14],\n\t            [-24, -25],\n\t            [-16, 15],\n\t            [-22, 21],\n\t            [-8, 31],\n\t            [-2, 53],\n\t            [-10, 47],\n\t            [-2, 42],\n\t            [5, 43],\n\t            [13, 10],\n\t            [0, 20],\n\t            [13, 45],\n\t            [2, 37],\n\t            [-6, 28],\n\t            [-5, 38],\n\t            [-2, 54],\n\t            [9, 33],\n\t            [4, 38],\n\t            [14, 2],\n\t            [15, 12],\n\t            [11, 10],\n\t            [12, 1],\n\t            [16, 34],\n\t            [23, 36],\n\t            [8, 30],\n\t            [-4, 25],\n\t            [12, -7],\n\t            [15, 41],\n\t            [1, 36],\n\t            [9, 26],\n\t            [10, -25]\n\t        ],\n\t        [\n\t            [2301, 6586],\n\t            [-10, -52],\n\t            [-5, -43],\n\t            [-2, -79],\n\t            [-3, -29],\n\t            [5, -32],\n\t            [9, -29],\n\t            [5, -45],\n\t            [19, -44],\n\t            [6, -34],\n\t            [11, -29],\n\t            [29, -16],\n\t            [12, -25],\n\t            [24, 17],\n\t            [21, 6],\n\t            [21, 11],\n\t            [18, 10],\n\t            [17, 24],\n\t            [7, 34],\n\t            [2, 50],\n\t            [5, 17],\n\t            [19, 16],\n\t            [29, 13],\n\t            [25, -2],\n\t            [17, 5],\n\t            [6, -12],\n\t            [-1, -29],\n\t            [-15, -35],\n\t            [-6, -36],\n\t            [5, -10],\n\t            [-4, -26],\n\t            [-7, -46],\n\t            [-7, 15],\n\t            [-6, -1]\n\t        ],\n\t        [\n\t            [2438, 5916],\n\t            [-32, 64],\n\t            [-14, 19],\n\t            [-23, 16],\n\t            [-15, -5],\n\t            [-22, -22],\n\t            [-14, -6],\n\t            [-20, 16],\n\t            [-21, 11],\n\t            [-26, 27],\n\t            [-21, 8],\n\t            [-31, 28],\n\t            [-23, 28],\n\t            [-7, 16],\n\t            [-16, 3],\n\t            [-28, 19],\n\t            [-12, 27],\n\t            [-30, 34],\n\t            [-14, 37],\n\t            [-6, 29],\n\t            [9, 5],\n\t            [-3, 17],\n\t            [7, 16],\n\t            [0, 20],\n\t            [-10, 27],\n\t            [-2, 23],\n\t            [-9, 30],\n\t            [-25, 59],\n\t            [-28, 46],\n\t            [-13, 37],\n\t            [-24, 24],\n\t            [-5, 14],\n\t            [4, 37],\n\t            [-14, 13],\n\t            [-17, 29],\n\t            [-7, 41],\n\t            [-14, 5],\n\t            [-17, 31],\n\t            [-13, 29],\n\t            [-1, 19],\n\t            [-15, 44],\n\t            [-10, 45],\n\t            [1, 23],\n\t            [-20, 23],\n\t            [-10, -2],\n\t            [-15, 16],\n\t            [-5, -24],\n\t            [5, -28],\n\t            [2, -45],\n\t            [10, -24],\n\t            [21, -41],\n\t            [4, -14],\n\t            [4, -4],\n\t            [4, -20],\n\t            [5, 1],\n\t            [6, -38],\n\t            [8, -15],\n\t            [6, -21],\n\t            [17, -30],\n\t            [10, -55],\n\t            [8, -26],\n\t            [8, -28],\n\t            [1, -31],\n\t            [13, -2],\n\t            [12, -27],\n\t            [10, -26],\n\t            [-1, -11],\n\t            [-12, -21],\n\t            [-5, 0],\n\t            [-7, 36],\n\t            [-18, 33],\n\t            [-20, 29],\n\t            [-14, 15],\n\t            [1, 43],\n\t            [-5, 32],\n\t            [-13, 19],\n\t            [-19, 26],\n\t            [-4, -8],\n\t            [-7, 16],\n\t            [-17, 14],\n\t            [-16, 34],\n\t            [2, 5],\n\t            [11, -4],\n\t            [11, 22],\n\t            [1, 27],\n\t            [-22, 42],\n\t            [-16, 17],\n\t            [-10, 36],\n\t            [-11, 39],\n\t            [-12, 47],\n\t            [-12, 54]\n\t        ],\n\t        [\n\t            [1746, 6980],\n\t            [32, 4],\n\t            [35, 7],\n\t            [-2, -12],\n\t            [41, -29],\n\t            [64, -41],\n\t            [55, 0],\n\t            [22, 0],\n\t            [0, 24],\n\t            [48, 0],\n\t            [10, -20],\n\t            [15, -19],\n\t            [16, -26],\n\t            [9, -31],\n\t            [7, -32],\n\t            [15, -18],\n\t            [23, -18],\n\t            [17, 47],\n\t            [23, 1],\n\t            [19, -24],\n\t            [14, -40],\n\t            [10, -35],\n\t            [16, -34],\n\t            [6, -41],\n\t            [8, -28],\n\t            [22, -18],\n\t            [20, -13],\n\t            [10, 2]\n\t        ],\n\t        [\n\t            [5599, 7553],\n\t            [9, 4],\n\t            [13, 1]\n\t        ],\n\t        [\n\t            [4661, 5921],\n\t            [10, 11],\n\t            [4, 35],\n\t            [9, 1],\n\t            [20, -16],\n\t            [15, 11],\n\t            [11, -4],\n\t            [4, 13],\n\t            [112, 1],\n\t            [6, 42],\n\t            [-5, 7],\n\t            [-13, 255],\n\t            [-14, 255],\n\t            [43, 1]\n\t        ],\n\t        [\n\t            [5118, 6189],\n\t            [0, -136],\n\t            [-15, -39],\n\t            [-2, -37],\n\t            [-25, -9],\n\t            [-38, -5],\n\t            [-10, -21],\n\t            [-18, -3]\n\t        ],\n\t        [\n\t            [4680, 5793],\n\t            [1, 18],\n\t            [-2, 23],\n\t            [-11, 16],\n\t            [-5, 34],\n\t            [-2, 37]\n\t        ],\n\t        [\n\t            [7737, 5644],\n\t            [-3, 44],\n\t            [9, 45],\n\t            [-10, 35],\n\t            [3, 65],\n\t            [-12, 30],\n\t            [-9, 71],\n\t            [-5, 75],\n\t            [-12, 49],\n\t            [-18, -30],\n\t            [-32, -42],\n\t            [-15, 5],\n\t            [-17, 14],\n\t            [9, 73],\n\t            [-6, 56],\n\t            [-21, 68],\n\t            [3, 21],\n\t            [-16, 7],\n\t            [-20, 49]\n\t        ],\n\t        [\n\t            [7780, 6264],\n\t            [-16, -14],\n\t            [-16, -26],\n\t            [-20, -2],\n\t            [-12, -64],\n\t            [-12, -11],\n\t            [14, -52],\n\t            [17, -43],\n\t            [12, -39],\n\t            [-11, -51],\n\t            [-9, -11],\n\t            [6, -30],\n\t            [19, -47],\n\t            [3, -33],\n\t            [0, -27],\n\t            [11, -54],\n\t            [-16, -55],\n\t            [-13, -61]\n\t        ],\n\t        [\n\t            [5538, 7532],\n\t            [-6, 4],\n\t            [-8, 19],\n\t            [-12, 12]\n\t        ],\n\t        [\n\t            [5533, 7629],\n\t            [8, -10],\n\t            [4, -9],\n\t            [9, -6],\n\t            [10, -12],\n\t            [-2, -5]\n\t        ],\n\t        [\n\t            [7437, 7970],\n\t            [29, 10],\n\t            [53, 51],\n\t            [42, 28],\n\t            [24, -18],\n\t            [29, -1],\n\t            [19, -28],\n\t            [28, -2],\n\t            [40, -15],\n\t            [27, 41],\n\t            [-11, 35],\n\t            [28, 61],\n\t            [31, -24],\n\t            [26, -7],\n\t            [32, -15],\n\t            [6, -44],\n\t            [39, -25],\n\t            [26, 11],\n\t            [36, 7],\n\t            [27, -7],\n\t            [28, -29],\n\t            [16, -30],\n\t            [26, 1],\n\t            [35, -10],\n\t            [26, 15],\n\t            [36, 9],\n\t            [41, 42],\n\t            [17, -6],\n\t            [14, -20],\n\t            [33, 5]\n\t        ],\n\t        [\n\t            [5959, 4377],\n\t            [21, 5],\n\t            [34, -17],\n\t            [7, 8],\n\t            [19, 1],\n\t            [10, 18],\n\t            [17, -1],\n\t            [30, 23],\n\t            [22, 34]\n\t        ],\n\t        [\n\t            [6119, 4448],\n\t            [5, -26],\n\t            [-1, -59],\n\t            [3, -52],\n\t            [1, -92],\n\t            [5, -29],\n\t            [-8, -43],\n\t            [-11, -41],\n\t            [-18, -36],\n\t            [-25, -23],\n\t            [-31, -28],\n\t            [-32, -64],\n\t            [-10, -11],\n\t            [-20, -42],\n\t            [-11, -13],\n\t            [-3, -42],\n\t            [14, -45],\n\t            [5, -35],\n\t            [0, -17],\n\t            [5, 3],\n\t            [-1, -58],\n\t            [-4, -28],\n\t            [6, -10],\n\t            [-4, -25],\n\t            [-11, -21],\n\t            [-23, -20],\n\t            [-34, -32],\n\t            [-12, -21],\n\t            [3, -25],\n\t            [7, -4],\n\t            [-3, -31]\n\t        ],\n\t        [\n\t            [5911, 3478],\n\t            [-21, 0]\n\t        ],\n\t        [\n\t            [5890, 3478],\n\t            [-2, 26],\n\t            [-4, 27]\n\t        ],\n\t        [\n\t            [5884, 3531],\n\t            [-3, 21],\n\t            [5, 66],\n\t            [-7, 42],\n\t            [-13, 83]\n\t        ],\n\t        [\n\t            [5866, 3743],\n\t            [29, 67],\n\t            [7, 43],\n\t            [5, 5],\n\t            [3, 35],\n\t            [-5, 17],\n\t            [1, 44],\n\t            [6, 41],\n\t            [0, 75],\n\t            [-15, 19],\n\t            [-13, 4],\n\t            [-6, 15],\n\t            [-13, 12],\n\t            [-23, -1],\n\t            [-2, 22]\n\t        ],\n\t        [\n\t            [5840, 4141],\n\t            [-2, 42],\n\t            [84, 49]\n\t        ],\n\t        [\n\t            [5922, 4232],\n\t            [16, -28],\n\t            [8, 5],\n\t            [11, -15],\n\t            [1, -23],\n\t            [-6, -28],\n\t            [2, -42],\n\t            [19, -36],\n\t            [8, 41],\n\t            [12, 12],\n\t            [-2, 76],\n\t            [-12, 43],\n\t            [-10, 19],\n\t            [-10, -1],\n\t            [-7, 77],\n\t            [7, 45]\n\t        ],\n\t        [\n\t            [4661, 5921],\n\t            [-18, 41],\n\t            [-17, 43],\n\t            [-18, 16],\n\t            [-13, 17],\n\t            [-16, -1],\n\t            [-13, -12],\n\t            [-14, 5],\n\t            [-10, -19]\n\t        ],\n\t        [\n\t            [4542, 6011],\n\t            [-2, 32],\n\t            [8, 29],\n\t            [3, 55],\n\t            [-3, 59],\n\t            [-3, 29],\n\t            [2, 30],\n\t            [-7, 28],\n\t            [-14, 25]\n\t        ],\n\t        [\n\t            [4526, 6298],\n\t            [6, 20],\n\t            [108, -1],\n\t            [-5, 86],\n\t            [7, 30],\n\t            [26, 5],\n\t            [-1, 152],\n\t            [91, -4],\n\t            [0, 90]\n\t        ],\n\t        [\n\t            [5922, 4232],\n\t            [-15, 15],\n\t            [9, 55],\n\t            [9, 21],\n\t            [-6, 49],\n\t            [6, 48],\n\t            [5, 16],\n\t            [-7, 50],\n\t            [-14, 26]\n\t        ],\n\t        [\n\t            [5909, 4512],\n\t            [28, -11],\n\t            [5, -16],\n\t            [10, -28],\n\t            [7, -80]\n\t        ],\n\t        [\n\t            [7836, 5425],\n\t            [7, -5],\n\t            [16, -36],\n\t            [12, -40],\n\t            [2, -39],\n\t            [-3, -27],\n\t            [2, -21],\n\t            [2, -35],\n\t            [10, -16],\n\t            [11, -52],\n\t            [-1, -20],\n\t            [-19, -4],\n\t            [-27, 44],\n\t            [-32, 47],\n\t            [-4, 30],\n\t            [-16, 39],\n\t            [-4, 49],\n\t            [-10, 32],\n\t            [4, 43],\n\t            [-7, 25]\n\t        ],\n\t        [\n\t            [7779, 5439],\n\t            [5, 11],\n\t            [23, -26],\n\t            [2, -30],\n\t            [18, 7],\n\t            [9, 24]\n\t        ],\n\t        [\n\t            [8045, 5176],\n\t            [21, -20],\n\t            [21, 11],\n\t            [6, 50],\n\t            [12, 11],\n\t            [33, 13],\n\t            [20, 47],\n\t            [14, 37]\n\t        ],\n\t        [\n\t            [8206, 5379],\n\t            [22, 41],\n\t            [14, 47],\n\t            [11, 0],\n\t            [14, -30],\n\t            [1, -26],\n\t            [19, -16],\n\t            [23, -18],\n\t            [-2, -23],\n\t            [-19, -3],\n\t            [5, -29],\n\t            [-20, -20]\n\t        ],\n\t        [\n\t            [5453, 3369],\n\t            [-20, 45],\n\t            [-11, 43],\n\t            [-6, 58],\n\t            [-7, 42],\n\t            [-9, 91],\n\t            [-1, 71],\n\t            [-3, 32],\n\t            [-11, 25],\n\t            [-15, 48],\n\t            [-14, 71],\n\t            [-6, 37],\n\t            [-23, 58],\n\t            [-2, 45]\n\t        ],\n\t        [\n\t            [5644, 4022],\n\t            [23, 14],\n\t            [18, -4],\n\t            [11, -13],\n\t            [0, -5]\n\t        ],\n\t        [\n\t            [5552, 3594],\n\t            [0, -218],\n\t            [-25, -30],\n\t            [-15, -4],\n\t            [-17, 11],\n\t            [-13, 4],\n\t            [-4, 25],\n\t            [-11, 17],\n\t            [-14, -30]\n\t        ],\n\t        [\n\t            [9604, 3812],\n\t            [23, -36],\n\t            [14, -28],\n\t            [-10, -14],\n\t            [-16, 16],\n\t            [-19, 27],\n\t            [-18, 31],\n\t            [-19, 42],\n\t            [-4, 20],\n\t            [12, -1],\n\t            [16, -20],\n\t            [12, -20],\n\t            [9, -17]\n\t        ],\n\t        [\n\t            [5412, 6408],\n\t            [7, -92],\n\t            [10, -15],\n\t            [1, -19],\n\t            [11, -20],\n\t            [-6, -25],\n\t            [-11, -120],\n\t            [-1, -77],\n\t            [-35, -56],\n\t            [-12, -78],\n\t            [11, -22],\n\t            [0, -38],\n\t            [18, -1],\n\t            [-3, -28]\n\t        ],\n\t        [\n\t            [5393, 5795],\n\t            [-5, -1],\n\t            [-19, 64],\n\t            [-6, 3],\n\t            [-22, -33],\n\t            [-21, 17],\n\t            [-15, 3],\n\t            [-8, -8],\n\t            [-17, 2],\n\t            [-16, -25],\n\t            [-14, -2],\n\t            [-34, 31],\n\t            [-13, -15],\n\t            [-14, 1],\n\t            [-10, 23],\n\t            [-28, 22],\n\t            [-30, -7],\n\t            [-7, -13],\n\t            [-4, -34],\n\t            [-8, -24],\n\t            [-2, -53]\n\t        ],\n\t        [\n\t            [5236, 5339],\n\t            [-29, -21],\n\t            [-11, 3],\n\t            [-10, -13],\n\t            [-23, 1],\n\t            [-15, 37],\n\t            [-9, 43],\n\t            [-19, 39],\n\t            [-21, -1],\n\t            [-25, 0]\n\t        ],\n\t        [\n\t            [2619, 5713],\n\t            [-10, 18],\n\t            [-13, 24],\n\t            [-6, 20],\n\t            [-12, 19],\n\t            [-13, 26],\n\t            [3, 9],\n\t            [4, -9],\n\t            [2, 5]\n\t        ],\n\t        [\n\t            [2690, 5943],\n\t            [-2, -5],\n\t            [-2, -13],\n\t            [3, -22],\n\t            [-6, -20],\n\t            [-3, -24],\n\t            [-1, -26],\n\t            [1, -15],\n\t            [1, -27],\n\t            [-4, -6],\n\t            [-3, -25],\n\t            [2, -15],\n\t            [-6, -16],\n\t            [2, -16],\n\t            [4, -9]\n\t        ],\n\t        [\n\t            [5092, 8091],\n\t            [14, 16],\n\t            [24, 87],\n\t            [38, 25],\n\t            [23, -2]\n\t        ],\n\t        [\n\t            [5863, 9167],\n\t            [-47, -24],\n\t            [-22, -5]\n\t        ],\n\t        [\n\t            [5573, 9140],\n\t            [-17, -2],\n\t            [-4, -39],\n\t            [-53, 9],\n\t            [-7, -33],\n\t            [-27, 1],\n\t            [-18, -42],\n\t            [-28, -66],\n\t            [-43, -83],\n\t            [10, -20],\n\t            [-10, -24],\n\t            [-27, 1],\n\t            [-18, -55],\n\t            [2, -79],\n\t            [17, -29],\n\t            [-9, -70],\n\t            [-23, -40],\n\t            [-12, -34]\n\t        ],\n\t        [\n\t            [5306, 8535],\n\t            [-19, 36],\n\t            [-55, -69],\n\t            [-37, -13],\n\t            [-38, 30],\n\t            [-10, 63],\n\t            [-9, 137],\n\t            [26, 38],\n\t            [73, 49],\n\t            [55, 61],\n\t            [51, 82],\n\t            [66, 115],\n\t            [47, 44],\n\t            [76, 74],\n\t            [61, 26],\n\t            [46, -3],\n\t            [42, 49],\n\t            [51, -3],\n\t            [50, 12],\n\t            [87, -43],\n\t            [-36, -16],\n\t            [30, -37]\n\t        ],\n\t        [\n\t            [5686, 9657],\n\t            [-62, -24],\n\t            [-49, 13],\n\t            [19, 16],\n\t            [-16, 19],\n\t            [57, 11],\n\t            [11, -22],\n\t            [40, -13]\n\t        ],\n\t        [\n\t            [5506, 9766],\n\t            [92, -44],\n\t            [-70, -23],\n\t            [-15, -44],\n\t            [-25, -11],\n\t            [-13, -49],\n\t            [-34, -2],\n\t            [-59, 36],\n\t            [25, 21],\n\t            [-42, 17],\n\t            [-54, 50],\n\t            [-21, 46],\n\t            [75, 21],\n\t            [16, -20],\n\t            [39, 0],\n\t            [11, 21],\n\t            [40, 2],\n\t            [35, -21]\n\t        ],\n\t        [\n\t            [5706, 9808],\n\t            [55, -21],\n\t            [-41, -32],\n\t            [-81, -7],\n\t            [-82, 10],\n\t            [-5, 16],\n\t            [-40, 1],\n\t            [-30, 27],\n\t            [86, 17],\n\t            [40, -14],\n\t            [28, 17],\n\t            [70, -14]\n\t        ],\n\t        [\n\t            [9805, 2640],\n\t            [6, -24],\n\t            [20, 24],\n\t            [8, -25],\n\t            [0, -25],\n\t            [-10, -27],\n\t            [-18, -44],\n\t            [-14, -24],\n\t            [10, -28],\n\t            [-22, -1],\n\t            [-23, -22],\n\t            [-8, -39],\n\t            [-16, -60],\n\t            [-21, -26],\n\t            [-14, -17],\n\t            [-26, 1],\n\t            [-18, 20],\n\t            [-30, 4],\n\t            [-5, 22],\n\t            [15, 43],\n\t            [35, 59],\n\t            [18, 11],\n\t            [20, 22],\n\t            [24, 31],\n\t            [16, 31],\n\t            [13, 44],\n\t            [10, 15],\n\t            [5, 33],\n\t            [19, 27],\n\t            [6, -25]\n\t        ],\n\t        [\n\t            [9849, 2922],\n\t            [20, -63],\n\t            [1, 41],\n\t            [13, -16],\n\t            [4, -45],\n\t            [22, -19],\n\t            [19, -5],\n\t            [16, 22],\n\t            [14, -6],\n\t            [-7, -53],\n\t            [-8, -34],\n\t            [-22, 1],\n\t            [-7, -18],\n\t            [3, -25],\n\t            [-4, -11],\n\t            [-11, -32],\n\t            [-14, -41],\n\t            [-21, -23],\n\t            [-5, 15],\n\t            [-12, 9],\n\t            [16, 48],\n\t            [-9, 33],\n\t            [-30, 23],\n\t            [1, 22],\n\t            [20, 20],\n\t            [5, 46],\n\t            [-1, 38],\n\t            [-12, 40],\n\t            [1, 10],\n\t            [-13, 25],\n\t            [-22, 52],\n\t            [-12, 42],\n\t            [11, 4],\n\t            [15, -33],\n\t            [21, -15],\n\t            [8, -52]\n\t        ],\n\t        [\n\t            [6475, 6041],\n\t            [-9, 41],\n\t            [-22, 98]\n\t        ],\n\t        [\n\t            [6444, 6180],\n\t            [83, 59],\n\t            [19, 118],\n\t            [-13, 42]\n\t        ],\n\t        [\n\t            [6566, 6530],\n\t            [12, -40],\n\t            [16, -22],\n\t            [20, -8],\n\t            [17, -10],\n\t            [12, -34],\n\t            [8, -20],\n\t            [10, -7],\n\t            [0, -13],\n\t            [-10, -36],\n\t            [-5, -16],\n\t            [-12, -19],\n\t            [-10, -41],\n\t            [-13, 3],\n\t            [-5, -14],\n\t            [-5, -30],\n\t            [4, -39],\n\t            [-3, -7],\n\t            [-13, 0],\n\t            [-17, -22],\n\t            [-3, -29],\n\t            [-6, -12],\n\t            [-18, 0],\n\t            [-10, -15],\n\t            [0, -24],\n\t            [-14, -16],\n\t            [-15, 5],\n\t            [-19, -19],\n\t            [-12, -4]\n\t        ],\n\t        [\n\t            [6557, 6597],\n\t            [8, 20],\n\t            [3, -5],\n\t            [-2, -25],\n\t            [-4, -10]\n\t        ],\n\t        [\n\t            [6893, 6457],\n\t            [-20, 15],\n\t            [-9, 43],\n\t            [-21, 45],\n\t            [-51, -12],\n\t            [-45, -1],\n\t            [-39, -8]\n\t        ],\n\t        [\n\t            [2836, 5484],\n\t            [-9, 17],\n\t            [-6, 32],\n\t            [7, 16],\n\t            [-7, 4],\n\t            [-5, 20],\n\t            [-14, 16],\n\t            [-12, -4],\n\t            [-6, -20],\n\t            [-11, -15],\n\t            [-6, -2],\n\t            [-3, -13],\n\t            [13, -32],\n\t            [-7, -7],\n\t            [-4, -9],\n\t            [-13, -3],\n\t            [-5, 35],\n\t            [-4, -10],\n\t            [-9, 4],\n\t            [-5, 24],\n\t            [-12, 3],\n\t            [-7, 7],\n\t            [-12, 0],\n\t            [-1, -13],\n\t            [-3, 9]\n\t        ],\n\t        [\n\t            [2707, 5623],\n\t            [10, -22],\n\t            [-1, -12],\n\t            [11, -3],\n\t            [3, 5],\n\t            [8, -14],\n\t            [13, 4],\n\t            [12, 15],\n\t            [17, 12],\n\t            [9, 17],\n\t            [16, -3],\n\t            [-1, -6],\n\t            [15, -2],\n\t            [12, -10],\n\t            [10, -18],\n\t            [10, -16]\n\t        ],\n\t        [\n\t            [3045, 3974],\n\t            [-28, 33],\n\t            [-2, 25],\n\t            [-55, 59],\n\t            [-50, 65],\n\t            [-22, 36],\n\t            [-11, 49],\n\t            [4, 17],\n\t            [-23, 77],\n\t            [-28, 109],\n\t            [-26, 118],\n\t            [-11, 27],\n\t            [-9, 43],\n\t            [-21, 39],\n\t            [-20, 24],\n\t            [9, 26],\n\t            [-14, 57],\n\t            [9, 41],\n\t            [22, 37]\n\t        ],\n\t        [\n\t            [8510, 5555],\n\t            [2, -40],\n\t            [2, -33],\n\t            [-9, -54],\n\t            [-11, 60],\n\t            [-13, -30],\n\t            [9, -43],\n\t            [-8, -28],\n\t            [-32, 35],\n\t            [-8, 42],\n\t            [8, 28],\n\t            [-17, 28],\n\t            [-9, -24],\n\t            [-13, 2],\n\t            [-21, -33],\n\t            [-4, 17],\n\t            [11, 50],\n\t            [17, 17],\n\t            [15, 22],\n\t            [10, -27],\n\t            [21, 17],\n\t            [5, 26],\n\t            [19, 1],\n\t            [-1, 46],\n\t            [22, -28],\n\t            [3, -30],\n\t            [2, -21]\n\t        ],\n\t        [\n\t            [8443, 5665],\n\t            [-10, -20],\n\t            [-9, -37],\n\t            [-8, -17],\n\t            [-17, 40],\n\t            [5, 16],\n\t            [7, 17],\n\t            [3, 36],\n\t            [16, 4],\n\t            [-5, -40],\n\t            [21, 57],\n\t            [-3, -56]\n\t        ],\n\t        [\n\t            [8291, 5608],\n\t            [-37, -56],\n\t            [14, 41],\n\t            [20, 37],\n\t            [16, 41],\n\t            [15, 58],\n\t            [5, -48],\n\t            [-18, -33],\n\t            [-15, -40]\n\t        ],\n\t        [\n\t            [8385, 5760],\n\t            [16, -18],\n\t            [18, 0],\n\t            [0, -25],\n\t            [-13, -25],\n\t            [-18, -18],\n\t            [-1, 28],\n\t            [2, 30],\n\t            [-4, 28]\n\t        ],\n\t        [\n\t            [8485, 5776],\n\t            [8, -66],\n\t            [-21, 16],\n\t            [0, -20],\n\t            [7, -37],\n\t            [-13, -13],\n\t            [-1, 42],\n\t            [-9, 3],\n\t            [-4, 36],\n\t            [16, -5],\n\t            [0, 22],\n\t            [-17, 45],\n\t            [27, -1],\n\t            [7, -22]\n\t        ],\n\t        [\n\t            [8375, 5830],\n\t            [-7, -51],\n\t            [-12, 29],\n\t            [-15, 45],\n\t            [24, -2],\n\t            [10, -21]\n\t        ],\n\t        [\n\t            [8369, 6151],\n\t            [17, -17],\n\t            [9, 15],\n\t            [2, -15],\n\t            [-4, -24],\n\t            [9, -43],\n\t            [-7, -49],\n\t            [-16, -19],\n\t            [-5, -48],\n\t            [7, -47],\n\t            [14, -7],\n\t            [13, 7],\n\t            [34, -32],\n\t            [-2, -32],\n\t            [9, -15],\n\t            [-3, -27],\n\t            [-22, 29],\n\t            [-10, 31],\n\t            [-7, -22],\n\t            [-18, 36],\n\t            [-25, -9],\n\t            [-14, 13],\n\t            [1, 25],\n\t            [9, 15],\n\t            [-8, 13],\n\t            [-4, -21],\n\t            [-14, 34],\n\t            [-4, 26],\n\t            [-1, 56],\n\t            [11, -19],\n\t            [3, 92],\n\t            [9, 54],\n\t            [17, 0]\n\t        ],\n\t        [\n\t            [9329, 4655],\n\t            [-8, -6],\n\t            [-12, 22],\n\t            [-12, 38],\n\t            [-6, 45],\n\t            [4, 6],\n\t            [3, -18],\n\t            [8, -13],\n\t            [14, -38],\n\t            [13, -20],\n\t            [-4, -16]\n\t        ],\n\t        [\n\t            [9221, 4734],\n\t            [-15, -5],\n\t            [-4, -17],\n\t            [-15, -14],\n\t            [-15, -14],\n\t            [-14, 0],\n\t            [-23, 18],\n\t            [-16, 16],\n\t            [2, 18],\n\t            [25, -8],\n\t            [15, 4],\n\t            [5, 29],\n\t            [4, 1],\n\t            [2, -31],\n\t            [16, 4],\n\t            [8, 20],\n\t            [16, 21],\n\t            [-4, 35],\n\t            [17, 1],\n\t            [6, -9],\n\t            [-1, -33],\n\t            [-9, -36]\n\t        ],\n\t        [\n\t            [8916, 4904],\n\t            [48, -41],\n\t            [51, -34],\n\t            [19, -30],\n\t            [16, -30],\n\t            [4, -34],\n\t            [46, -37],\n\t            [7, -31],\n\t            [-25, -7],\n\t            [6, -39],\n\t            [25, -39],\n\t            [18, -62],\n\t            [15, 2],\n\t            [-1, -27],\n\t            [22, -10],\n\t            [-9, -11],\n\t            [30, -25],\n\t            [-3, -17],\n\t            [-18, -4],\n\t            [-7, 16],\n\t            [-24, 6],\n\t            [-28, 9],\n\t            [-22, 38],\n\t            [-16, 32],\n\t            [-14, 52],\n\t            [-36, 26],\n\t            [-24, -17],\n\t            [-17, -20],\n\t            [4, -43],\n\t            [-22, -20],\n\t            [-16, 9],\n\t            [-28, 3]\n\t        ],\n\t        [\n\t            [9253, 4792],\n\t            [-9, -16],\n\t            [-5, 35],\n\t            [-6, 23],\n\t            [-13, 19],\n\t            [-16, 25],\n\t            [-20, 18],\n\t            [8, 14],\n\t            [15, -17],\n\t            [9, -13],\n\t            [12, -14],\n\t            [11, -25],\n\t            [11, -19],\n\t            [3, -30]\n\t        ],\n\t        [\n\t            [5392, 8233],\n\t            [19, 18],\n\t            [43, 27],\n\t            [35, 20],\n\t            [28, -10],\n\t            [2, -14],\n\t            [27, -1]\n\t        ],\n\t        [\n\t            [5546, 8273],\n\t            [34, -7],\n\t            [51, 1]\n\t        ],\n\t        [\n\t            [5653, 8105],\n\t            [14, -52],\n\t            [-3, -17],\n\t            [-14, -6],\n\t            [-25, -50],\n\t            [7, -26],\n\t            [-6, 3]\n\t        ],\n\t        [\n\t            [5626, 7957],\n\t            [-26, 23],\n\t            [-20, -8],\n\t            [-13, 6],\n\t            [-17, -13],\n\t            [-14, 21],\n\t            [-11, -8],\n\t            [-2, 4]\n\t        ],\n\t        [\n\t            [3159, 6151],\n\t            [14, -5],\n\t            [5, -12],\n\t            [-7, -15],\n\t            [-21, 1],\n\t            [-17, -2],\n\t            [-1, 25],\n\t            [4, 9],\n\t            [23, -1]\n\t        ],\n\t        [\n\t            [8628, 7562],\n\t            [4, -10]\n\t        ],\n\t        [\n\t            [8632, 7552],\n\t            [-11, 3],\n\t            [-12, -20],\n\t            [-8, -20],\n\t            [1, -42],\n\t            [-14, -13],\n\t            [-5, -11],\n\t            [-11, -17],\n\t            [-18, -10],\n\t            [-12, -16],\n\t            [-1, -25],\n\t            [-3, -7],\n\t            [11, -9],\n\t            [15, -26]\n\t        ],\n\t        [\n\t            [8504, 7288],\n\t            [-13, 11],\n\t            [-4, -11],\n\t            [-8, -5],\n\t            [-1, 11],\n\t            [-7, 5],\n\t            [-8, 10],\n\t            [8, 26],\n\t            [7, 7],\n\t            [-3, 11],\n\t            [7, 31],\n\t            [-2, 10],\n\t            [-16, 7],\n\t            [-13, 15]\n\t        ],\n\t        [\n\t            [4792, 7249],\n\t            [-11, -15],\n\t            [-14, 8],\n\t            [-15, -6],\n\t            [5, 46],\n\t            [-3, 36],\n\t            [-12, 6],\n\t            [-7, 22],\n\t            [2, 39],\n\t            [11, 21],\n\t            [2, 24],\n\t            [6, 36],\n\t            [-1, 25],\n\t            [-5, 21],\n\t            [-1, 20]\n\t        ],\n\t        [\n\t            [6411, 6520],\n\t            [-2, 43],\n\t            [7, 31],\n\t            [8, 6],\n\t            [8, -18],\n\t            [1, -35],\n\t            [-6, -35]\n\t        ],\n\t        [\n\t            [6427, 6512],\n\t            [-8, -4],\n\t            [-8, 12]\n\t        ],\n\t        [\n\t            [5630, 7886],\n\t            [12, 13],\n\t            [17, -7],\n\t            [18, 0],\n\t            [13, -14],\n\t            [10, 9],\n\t            [20, 5],\n\t            [7, 14],\n\t            [12, 0]\n\t        ],\n\t        [\n\t            [5784, 7745],\n\t            [12, -11],\n\t            [13, 9],\n\t            [13, -10]\n\t        ],\n\t        [\n\t            [5822, 7733],\n\t            [0, -15],\n\t            [-13, -13],\n\t            [-9, 6],\n\t            [-7, -71]\n\t        ],\n\t        [\n\t            [5629, 7671],\n\t            [-5, 10],\n\t            [6, 10],\n\t            [-7, 7],\n\t            [-8, -13],\n\t            [-17, 17],\n\t            [-2, 25],\n\t            [-17, 14],\n\t            [-3, 18],\n\t            [-15, 24]\n\t        ],\n\t        [\n\t            [8989, 8056],\n\t            [28, -105],\n\t            [-41, 19],\n\t            [-17, -85],\n\t            [27, -61],\n\t            [-1, -41],\n\t            [-21, 36],\n\t            [-18, -46],\n\t            [-5, 50],\n\t            [3, 57],\n\t            [-3, 64],\n\t            [6, 45],\n\t            [2, 79],\n\t            [-17, 58],\n\t            [3, 80],\n\t            [25, 28],\n\t            [-11, 27],\n\t            [13, 8],\n\t            [7, -39],\n\t            [10, -57],\n\t            [-1, -58],\n\t            [11, -59]\n\t        ],\n\t        [\n\t            [5546, 8273],\n\t            [6, 26],\n\t            [38, 19]\n\t        ],\n\t        [\n\t            [0, 9132],\n\t            [68, -45],\n\t            [73, -59],\n\t            [-3, -37],\n\t            [19, -15],\n\t            [-6, 43],\n\t            [75, -8],\n\t            [55, -56],\n\t            [-28, -26],\n\t            [-46, -6],\n\t            [0, -57],\n\t            [-11, -13],\n\t            [-26, 2],\n\t            [-22, 21],\n\t            [-36, 17],\n\t            [-7, 26],\n\t            [-28, 9],\n\t            [-31, -7],\n\t            [-16, 20],\n\t            [6, 22],\n\t            [-33, -14],\n\t            [13, -28],\n\t            [-16, -25]\n\t        ],\n\t        [\n\t            [0, 8896],\n\t            [0, 236]\n\t        ],\n\t        [\n\t            [0, 9282],\n\t            [9999, -40],\n\t            [-30, -3],\n\t            [-5, 19],\n\t            [-9964, 24]\n\t        ],\n\t        [\n\t            [0, 9282],\n\t            [4, 3],\n\t            [23, 0],\n\t            [40, -17],\n\t            [-2, -8],\n\t            [-29, -14],\n\t            [-36, -4],\n\t            [0, 40]\n\t        ],\n\t        [\n\t            [8988, 9383],\n\t            [-42, -1],\n\t            [-57, 7],\n\t            [-5, 3],\n\t            [27, 23],\n\t            [34, 6],\n\t            [40, -23],\n\t            [3, -15]\n\t        ],\n\t        [\n\t            [9186, 9493],\n\t            [-32, -23],\n\t            [-44, 5],\n\t            [-52, 23],\n\t            [7, 20],\n\t            [51, -9],\n\t            [70, -16]\n\t        ],\n\t        [\n\t            [9029, 9522],\n\t            [-22, -44],\n\t            [-102, 1],\n\t            [-46, -14],\n\t            [-55, 39],\n\t            [15, 40],\n\t            [37, 11],\n\t            [73, -2],\n\t            [100, -31]\n\t        ],\n\t        [\n\t            [6598, 9235],\n\t            [-17, -5],\n\t            [-91, 8],\n\t            [-7, 26],\n\t            [-50, 16],\n\t            [-4, 32],\n\t            [28, 13],\n\t            [-1, 32],\n\t            [55, 50],\n\t            [-25, 7],\n\t            [66, 52],\n\t            [-7, 27],\n\t            [62, 31],\n\t            [91, 38],\n\t            [93, 11],\n\t            [48, 22],\n\t            [54, 8],\n\t            [19, -23],\n\t            [-19, -19],\n\t            [-98, -29],\n\t            [-85, -28],\n\t            [-86, -57],\n\t            [-42, -57],\n\t            [-43, -57],\n\t            [5, -49],\n\t            [54, -49]\n\t        ],\n\t        [\n\t            [0, 8896],\n\t            [9963, -26],\n\t            [-36, 4],\n\t            [25, -31],\n\t            [17, -49],\n\t            [13, -16],\n\t            [3, -24],\n\t            [-7, -16],\n\t            [-52, 13],\n\t            [-78, -44],\n\t            [-25, -7],\n\t            [-42, -42],\n\t            [-40, -36],\n\t            [-11, -27],\n\t            [-39, 41],\n\t            [-73, -46],\n\t            [-12, 22],\n\t            [-27, -26],\n\t            [-37, 8],\n\t            [-9, -38],\n\t            [-33, -58],\n\t            [1, -24],\n\t            [31, -13],\n\t            [-4, -86],\n\t            [-25, -2],\n\t            [-12, -49],\n\t            [11, -26],\n\t            [-48, -30],\n\t            [-10, -67],\n\t            [-41, -15],\n\t            [-9, -60],\n\t            [-40, -55],\n\t            [-10, 41],\n\t            [-12, 86],\n\t            [-15, 131],\n\t            [13, 82],\n\t            [23, 35],\n\t            [2, 28],\n\t            [43, 13],\n\t            [50, 75],\n\t            [47, 60],\n\t            [50, 48],\n\t            [23, 83],\n\t            [-34, -5],\n\t            [-17, -49],\n\t            [-70, -65],\n\t            [-23, 73],\n\t            [-72, -20],\n\t            [-69, -99],\n\t            [23, -36],\n\t            [-62, -16],\n\t            [-43, -6],\n\t            [2, 43],\n\t            [-43, 9],\n\t            [-35, -29],\n\t            [-85, 10],\n\t            [-91, -18],\n\t            [-90, -115],\n\t            [-106, -139],\n\t            [43, -8],\n\t            [14, -37],\n\t            [27, -13],\n\t            [18, 30],\n\t            [30, -4],\n\t            [40, -65],\n\t            [1, -50],\n\t            [-21, -59],\n\t            [-3, -71],\n\t            [-12, -94],\n\t            [-42, -86],\n\t            [-9, -41],\n\t            [-38, -69],\n\t            [-38, -68],\n\t            [-18, -35],\n\t            [-37, -34],\n\t            [-17, -1],\n\t            [-17, 29],\n\t            [-38, -44],\n\t            [-4, -19]\n\t        ],\n\t        [\n\t            [6363, 7799],\n\t            [-12, -35],\n\t            [-27, -10],\n\t            [-28, -61],\n\t            [25, -56],\n\t            [-2, -40],\n\t            [30, -70]\n\t        ],\n\t        [\n\t            [6109, 7624],\n\t            [-35, 49],\n\t            [-32, 23],\n\t            [-24, 34],\n\t            [20, 10],\n\t            [23, 49],\n\t            [-15, 24],\n\t            [41, 24],\n\t            [-1, 13],\n\t            [-25, -10]\n\t        ],\n\t        [\n\t            [6061, 7840],\n\t            [1, 26],\n\t            [14, 17],\n\t            [27, 4],\n\t            [5, 20],\n\t            [-7, 33],\n\t            [12, 30],\n\t            [-1, 18],\n\t            [-41, 19],\n\t            [-16, -1],\n\t            [-17, 28],\n\t            [-21, -9],\n\t            [-35, 20],\n\t            [0, 12],\n\t            [-10, 26],\n\t            [-22, 3],\n\t            [-2, 18],\n\t            [7, 12],\n\t            [-18, 33],\n\t            [-29, -5],\n\t            [-8, 3],\n\t            [-7, -14],\n\t            [-11, 3]\n\t        ],\n\t        [\n\t            [5777, 8571],\n\t            [31, 33],\n\t            [-29, 28]\n\t        ],\n\t        [\n\t            [5863, 9167],\n\t            [29, 20],\n\t            [46, -35],\n\t            [76, -14],\n\t            [105, -67],\n\t            [21, -28],\n\t            [2, -40],\n\t            [-31, -31],\n\t            [-45, -15],\n\t            [-124, 44],\n\t            [-21, -7],\n\t            [45, -43],\n\t            [2, -28],\n\t            [2, -60],\n\t            [36, -18],\n\t            [22, -15],\n\t            [3, 28],\n\t            [-17, 26],\n\t            [18, 22],\n\t            [67, -37],\n\t            [24, 15],\n\t            [-19, 43],\n\t            [65, 58],\n\t            [25, -4],\n\t            [26, -20],\n\t            [16, 40],\n\t            [-23, 35],\n\t            [14, 36],\n\t            [-21, 36],\n\t            [78, -18],\n\t            [16, -34],\n\t            [-35, -7],\n\t            [0, -33],\n\t            [22, -20],\n\t            [43, 13],\n\t            [7, 38],\n\t            [58, 28],\n\t            [97, 50],\n\t            [20, -3],\n\t            [-27, -35],\n\t            [35, -7],\n\t            [19, 21],\n\t            [52, 1],\n\t            [42, 25],\n\t            [31, -36],\n\t            [32, 39],\n\t            [-29, 35],\n\t            [14, 19],\n\t            [82, -18],\n\t            [39, -18],\n\t            [100, -68],\n\t            [19, 31],\n\t            [-28, 31],\n\t            [-1, 13],\n\t            [-34, 6],\n\t            [10, 28],\n\t            [-15, 46],\n\t            [-1, 19],\n\t            [51, 53],\n\t            [18, 54],\n\t            [21, 11],\n\t            [74, -15],\n\t            [5, -33],\n\t            [-26, -48],\n\t            [17, -19],\n\t            [9, -41],\n\t            [-6, -81],\n\t            [31, -36],\n\t            [-12, -40],\n\t            [-55, -84],\n\t            [32, -8],\n\t            [11, 21],\n\t            [31, 15],\n\t            [7, 29],\n\t            [24, 29],\n\t            [-16, 33],\n\t            [13, 39],\n\t            [-31, 5],\n\t            [-6, 33],\n\t            [22, 59],\n\t            [-36, 48],\n\t            [50, 40],\n\t            [-7, 42],\n\t            [14, 2],\n\t            [15, -33],\n\t            [-11, -57],\n\t            [29, -11],\n\t            [-12, 43],\n\t            [46, 23],\n\t            [58, 3],\n\t            [51, -34],\n\t            [-25, 49],\n\t            [-2, 63],\n\t            [48, 12],\n\t            [67, -2],\n\t            [60, 7],\n\t            [-23, 31],\n\t            [33, 39],\n\t            [31, 2],\n\t            [54, 29],\n\t            [74, 8],\n\t            [9, 16],\n\t            [73, 6],\n\t            [23, -14],\n\t            [62, 32],\n\t            [51, -1],\n\t            [8, 25],\n\t            [26, 25],\n\t            [66, 25],\n\t            [48, -19],\n\t            [-38, -15],\n\t            [63, -9],\n\t            [7, -29],\n\t            [25, 14],\n\t            [82, -1],\n\t            [62, -29],\n\t            [23, -22],\n\t            [-7, -30],\n\t            [-31, -18],\n\t            [-73, -33],\n\t            [-21, -17],\n\t            [35, -8],\n\t            [41, -15],\n\t            [25, 11],\n\t            [14, -38],\n\t            [12, 15],\n\t            [44, 10],\n\t            [90, -10],\n\t            [6, -28],\n\t            [116, -9],\n\t            [2, 46],\n\t            [59, -11],\n\t            [44, 1],\n\t            [45, -32],\n\t            [13, -37],\n\t            [-17, -25],\n\t            [35, -47],\n\t            [44, -24],\n\t            [27, 62],\n\t            [44, -26],\n\t            [48, 16],\n\t            [53, -18],\n\t            [21, 16],\n\t            [45, -8],\n\t            [-20, 55],\n\t            [37, 25],\n\t            [251, -38],\n\t            [24, -35],\n\t            [72, -45],\n\t            [112, 11],\n\t            [56, -10],\n\t            [23, -24],\n\t            [-4, -44],\n\t            [35, -16],\n\t            [37, 12],\n\t            [49, 1],\n\t            [52, -11],\n\t            [53, 6],\n\t            [49, -52],\n\t            [34, 19],\n\t            [-23, 37],\n\t            [13, 27],\n\t            [88, -17],\n\t            [58, 4],\n\t            [80, -29],\n\t            [-9960, -25]\n\t        ],\n\t        [\n\t            [7918, 9684],\n\t            [-157, -23],\n\t            [51, 77],\n\t            [23, 7],\n\t            [21, -4],\n\t            [70, -33],\n\t            [-8, -24]\n\t        ],\n\t        [\n\t            [6420, 9816],\n\t            [-37, -8],\n\t            [-25, -4],\n\t            [-4, -10],\n\t            [-33, -10],\n\t            [-30, 14],\n\t            [16, 19],\n\t            [-62, 2],\n\t            [54, 10],\n\t            [43, 1],\n\t            [5, -16],\n\t            [16, 14],\n\t            [26, 10],\n\t            [42, -13],\n\t            [-11, -9]\n\t        ],\n\t        [\n\t            [7775, 9718],\n\t            [-60, -8],\n\t            [-78, 17],\n\t            [-46, 23],\n\t            [-21, 42],\n\t            [-38, 12],\n\t            [72, 40],\n\t            [60, 14],\n\t            [54, -30],\n\t            [64, -57],\n\t            [-7, -53]\n\t        ],\n\t        [\n\t            [5844, 4990],\n\t            [11, -33],\n\t            [-1, -35],\n\t            [-8, -7]\n\t        ],\n\t        [\n\t            [5821, 4978],\n\t            [7, -6],\n\t            [16, 18]\n\t        ],\n\t        [\n\t            [4526, 6298],\n\t            [1, 25]\n\t        ],\n\t        [\n\t            [6188, 6023],\n\t            [-4, 26],\n\t            [-8, 17],\n\t            [-2, 24],\n\t            [-15, 21],\n\t            [-15, 50],\n\t            [-7, 48],\n\t            [-20, 40],\n\t            [-12, 10],\n\t            [-18, 56],\n\t            [-4, 41],\n\t            [2, 35],\n\t            [-16, 66],\n\t            [-13, 23],\n\t            [-15, 12],\n\t            [-10, 34],\n\t            [2, 13],\n\t            [-8, 31],\n\t            [-8, 13],\n\t            [-11, 44],\n\t            [-17, 48],\n\t            [-14, 40],\n\t            [-14, 0],\n\t            [5, 33],\n\t            [1, 20],\n\t            [3, 24]\n\t        ],\n\t        [\n\t            [6344, 6744],\n\t            [11, -51],\n\t            [14, -13],\n\t            [5, -21],\n\t            [18, -25],\n\t            [2, -24],\n\t            [-3, -20],\n\t            [4, -20],\n\t            [8, -16],\n\t            [4, -20],\n\t            [4, -14]\n\t        ],\n\t        [\n\t            [6427, 6512],\n\t            [5, -22]\n\t        ],\n\t        [\n\t            [6444, 6180],\n\t            [-80, -23],\n\t            [-26, -26],\n\t            [-20, -62],\n\t            [-13, -10],\n\t            [-7, 20],\n\t            [-11, -3],\n\t            [-27, 6],\n\t            [-5, 5],\n\t            [-32, -1],\n\t            [-7, -5],\n\t            [-12, 15],\n\t            [-7, -29],\n\t            [3, -25],\n\t            [-12, -19]\n\t        ],\n\t        [\n\t            [5943, 5617],\n\t            [-4, 1],\n\t            [0, 29],\n\t            [-3, 20],\n\t            [-14, 24],\n\t            [-4, 42],\n\t            [4, 44],\n\t            [-13, 4],\n\t            [-2, -13],\n\t            [-17, -3],\n\t            [7, -17],\n\t            [2, -36],\n\t            [-15, -32],\n\t            [-14, -43],\n\t            [-14, -6],\n\t            [-23, 34],\n\t            [-11, -12],\n\t            [-3, -17],\n\t            [-14, -11],\n\t            [-1, -12],\n\t            [-28, 0],\n\t            [-3, 12],\n\t            [-20, 2],\n\t            [-10, -10],\n\t            [-8, 5],\n\t            [-14, 34],\n\t            [-5, 17],\n\t            [-20, -9],\n\t            [-8, -27],\n\t            [-7, -53],\n\t            [-10, -11],\n\t            [-8, -6]\n\t        ],\n\t        [\n\t            [5663, 5567],\n\t            [-2, 2]\n\t        ],\n\t        [\n\t            [5635, 5716],\n\t            [0, 14],\n\t            [-10, 17],\n\t            [-1, 35],\n\t            [-5, 23],\n\t            [-10, -4],\n\t            [3, 22],\n\t            [7, 25],\n\t            [-3, 24],\n\t            [9, 18],\n\t            [-6, 14],\n\t            [7, 36],\n\t            [13, 44],\n\t            [24, -4],\n\t            [-1, 234]\n\t        ],\n\t        [\n\t            [6023, 6357],\n\t            [9, -58],\n\t            [-6, -10],\n\t            [4, -61],\n\t            [11, -71],\n\t            [10, -14],\n\t            [15, -22]\n\t        ],\n\t        [\n\t            [5943, 5624],\n\t            [0, -7]\n\t        ],\n\t        [\n\t            [5943, 5617],\n\t            [0, -46]\n\t        ],\n\t        [\n\t            [5944, 5309],\n\t            [-17, -28],\n\t            [-20, 1],\n\t            [-22, -14],\n\t            [-18, 13],\n\t            [-11, -16]\n\t        ],\n\t        [\n\t            [5682, 5544],\n\t            [-19, 23]\n\t        ],\n\t        [\n\t            [4535, 5861],\n\t            [-11, 46],\n\t            [-14, 21],\n\t            [12, 11],\n\t            [14, 41],\n\t            [6, 31]\n\t        ],\n\t        [\n\t            [4536, 5789],\n\t            [-4, 45]\n\t        ],\n\t        [\n\t            [9502, 4438],\n\t            [8, -20],\n\t            [-19, 0],\n\t            [-11, 37],\n\t            [17, -15],\n\t            [5, -2]\n\t        ],\n\t        [\n\t            [9467, 4474],\n\t            [-11, -1],\n\t            [-17, 6],\n\t            [-5, 9],\n\t            [1, 23],\n\t            [19, -9],\n\t            [9, -12],\n\t            [4, -16]\n\t        ],\n\t        [\n\t            [9490, 4490],\n\t            [-4, -11],\n\t            [-21, 52],\n\t            [-5, 35],\n\t            [9, 0],\n\t            [10, -47],\n\t            [11, -29]\n\t        ],\n\t        [\n\t            [9440, 4565],\n\t            [1, -12],\n\t            [-22, 25],\n\t            [-15, 21],\n\t            [-10, 20],\n\t            [4, 6],\n\t            [13, -14],\n\t            [23, -27],\n\t            [6, -19]\n\t        ],\n\t        [\n\t            [9375, 4623],\n\t            [-5, -3],\n\t            [-13, 14],\n\t            [-11, 24],\n\t            [1, 10],\n\t            [17, -25],\n\t            [11, -20]\n\t        ],\n\t        [\n\t            [4682, 5458],\n\t            [-8, 5],\n\t            [-20, 24],\n\t            [-14, 31],\n\t            [-5, 22],\n\t            [-3, 43]\n\t        ],\n\t        [\n\t            [2561, 5848],\n\t            [-3, -14],\n\t            [-16, 1],\n\t            [-10, 6],\n\t            [-12, 12],\n\t            [-15, 3],\n\t            [-8, 13]\n\t        ],\n\t        [\n\t            [6198, 5735],\n\t            [9, -11],\n\t            [5, -25],\n\t            [13, -24],\n\t            [14, -1],\n\t            [26, 16],\n\t            [30, 7],\n\t            [25, 18],\n\t            [13, 4],\n\t            [10, 11],\n\t            [16, 2]\n\t        ],\n\t        [\n\t            [6359, 5732],\n\t            [0, -1],\n\t            [0, -25],\n\t            [0, -59],\n\t            [0, -31],\n\t            [-13, -36],\n\t            [-19, -50]\n\t        ],\n\t        [\n\t            [6359, 5732],\n\t            [9, 1],\n\t            [13, 9],\n\t            [14, 6],\n\t            [14, 20],\n\t            [10, 0],\n\t            [1, -16],\n\t            [-3, -35],\n\t            [0, -31],\n\t            [-6, -21],\n\t            [-7, -64],\n\t            [-14, -66],\n\t            [-17, -75],\n\t            [-24, -87],\n\t            [-23, -66],\n\t            [-33, -81],\n\t            [-28, -48],\n\t            [-42, -58],\n\t            [-25, -45],\n\t            [-31, -72],\n\t            [-6, -31],\n\t            [-6, -14]\n\t        ],\n\t        [\n\t            [3412, 5410],\n\t            [34, -11],\n\t            [2, 10],\n\t            [23, 4],\n\t            [30, -15]\n\t        ],\n\t        [\n\t            [3489, 5306],\n\t            [10, -35],\n\t            [-4, -25]\n\t        ],\n\t        [\n\t            [5626, 7957],\n\t            [-8, -15],\n\t            [-5, -24]\n\t        ],\n\t        [\n\t            [5380, 7746],\n\t            [7, 5]\n\t        ],\n\t        [\n\t            [5663, 8957],\n\t            [-47, -17],\n\t            [-27, -41],\n\t            [4, -36],\n\t            [-44, -48],\n\t            [-54, -50],\n\t            [-20, -84],\n\t            [20, -41],\n\t            [26, -33],\n\t            [-25, -67],\n\t            [-29, -14],\n\t            [-11, -99],\n\t            [-15, -55],\n\t            [-34, 6],\n\t            [-16, -47],\n\t            [-32, -3],\n\t            [-9, 56],\n\t            [-23, 67],\n\t            [-21, 84]\n\t        ],\n\t        [\n\t            [5890, 3478],\n\t            [-5, -26],\n\t            [-17, -6],\n\t            [-16, 32],\n\t            [0, 20],\n\t            [7, 22],\n\t            [3, 17],\n\t            [8, 5],\n\t            [14, -11]\n\t        ],\n\t        [\n\t            [5999, 7104],\n\t            [-2, 45],\n\t            [7, 25]\n\t        ],\n\t        [\n\t            [6004, 7174],\n\t            [7, 13],\n\t            [7, 13],\n\t            [2, 33],\n\t            [9, -12],\n\t            [31, 17],\n\t            [14, -12],\n\t            [23, 1],\n\t            [32, 22],\n\t            [15, -1],\n\t            [32, 9]\n\t        ],\n\t        [\n\t            [5051, 5420],\n\t            [-22, -12]\n\t        ],\n\t        [\n\t            [7849, 5777],\n\t            [-25, 28],\n\t            [-24, -2],\n\t            [4, 47],\n\t            [-24, 0],\n\t            [-2, -65],\n\t            [-15, -87],\n\t            [-10, -52],\n\t            [2, -43],\n\t            [18, -2],\n\t            [12, -53],\n\t            [5, -52],\n\t            [15, -33],\n\t            [17, -7],\n\t            [14, -31]\n\t        ],\n\t        [\n\t            [7779, 5439],\n\t            [-11, 23],\n\t            [-4, 29],\n\t            [-15, 34],\n\t            [-14, 28],\n\t            [-4, -35],\n\t            [-5, 33],\n\t            [3, 37],\n\t            [8, 56]\n\t        ],\n\t        [\n\t            [6883, 7252],\n\t            [16, 60],\n\t            [-6, 44],\n\t            [-20, 14],\n\t            [7, 26],\n\t            [23, -3],\n\t            [13, 33],\n\t            [9, 38],\n\t            [37, 13],\n\t            [-6, -27],\n\t            [4, -17],\n\t            [12, 2]\n\t        ],\n\t        [\n\t            [6497, 7255],\n\t            [-5, 42],\n\t            [4, 62],\n\t            [-22, 20],\n\t            [8, 40],\n\t            [-19, 4],\n\t            [6, 49],\n\t            [26, -14],\n\t            [25, 19],\n\t            [-20, 35],\n\t            [-8, 34],\n\t            [-23, -15],\n\t            [-3, -43],\n\t            [-8, 38]\n\t        ],\n\t        [\n\t            [6554, 7498],\n\t            [31, 1],\n\t            [-4, 29],\n\t            [24, 21],\n\t            [23, 34],\n\t            [37, -31],\n\t            [3, -47],\n\t            [11, -12],\n\t            [30, 2],\n\t            [9, -10],\n\t            [14, -61],\n\t            [32, -41],\n\t            [18, -28],\n\t            [29, -29],\n\t            [37, -25],\n\t            [-1, -36]\n\t        ],\n\t        [\n\t            [8471, 4532],\n\t            [3, 14],\n\t            [24, 13],\n\t            [19, 2],\n\t            [9, 8],\n\t            [10, -8],\n\t            [-10, -16],\n\t            [-29, -25],\n\t            [-23, -17]\n\t        ],\n\t        [\n\t            [3286, 5693],\n\t            [16, 8],\n\t            [6, -2],\n\t            [-1, -44],\n\t            [-23, -7],\n\t            [-5, 6],\n\t            [8, 16],\n\t            [-1, 23]\n\t        ],\n\t        [\n\t            [5233, 7240],\n\t            [31, 24],\n\t            [19, -7],\n\t            [-1, -30],\n\t            [24, 22],\n\t            [2, -12],\n\t            [-14, -29],\n\t            [0, -27],\n\t            [9, -15],\n\t            [-3, -51],\n\t            [-19, -29],\n\t            [6, -33],\n\t            [14, -1],\n\t            [7, -28],\n\t            [11, -9]\n\t        ],\n\t        [\n\t            [6004, 7174],\n\t            [-11, 27],\n\t            [11, 22],\n\t            [-17, -5],\n\t            [-23, 13],\n\t            [-19, -34],\n\t            [-43, -6],\n\t            [-22, 31],\n\t            [-30, 2],\n\t            [-6, -24],\n\t            [-20, -7],\n\t            [-26, 31],\n\t            [-31, -1],\n\t            [-16, 59],\n\t            [-21, 33],\n\t            [14, 46],\n\t            [-18, 28],\n\t            [31, 56],\n\t            [43, 3],\n\t            [12, 45],\n\t            [53, -8],\n\t            [33, 38],\n\t            [32, 17],\n\t            [46, 1],\n\t            [49, -42],\n\t            [40, -22],\n\t            [32, 9],\n\t            [24, -6],\n\t            [33, 31]\n\t        ],\n\t        [\n\t            [5777, 7539],\n\t            [3, -23],\n\t            [25, -19],\n\t            [-5, -14],\n\t            [-33, -3],\n\t            [-12, -19],\n\t            [-23, -31],\n\t            [-9, 27],\n\t            [0, 12]\n\t        ],\n\t        [\n\t            [8382, 6499],\n\t            [-17, -95],\n\t            [-12, -49],\n\t            [-14, 50],\n\t            [-4, 44],\n\t            [17, 58],\n\t            [22, 45],\n\t            [13, -18],\n\t            [-5, -35]\n\t        ],\n\t        [\n\t            [6088, 4781],\n\t            [-12, -73],\n\t            [1, -33],\n\t            [18, -22],\n\t            [1, -15],\n\t            [-8, -36],\n\t            [2, -18],\n\t            [-2, -28],\n\t            [10, -37],\n\t            [11, -58],\n\t            [10, -13]\n\t        ],\n\t        [\n\t            [5909, 4512],\n\t            [-15, 18],\n\t            [-18, 10],\n\t            [-11, 10],\n\t            [-12, 15]\n\t        ],\n\t        [\n\t            [5844, 4990],\n\t            [10, 8],\n\t            [31, -1],\n\t            [56, 4]\n\t        ],\n\t        [\n\t            [6061, 7840],\n\t            [-22, -5],\n\t            [-18, -19],\n\t            [-26, -3],\n\t            [-24, -22],\n\t            [1, -37],\n\t            [14, -14],\n\t            [28, 4],\n\t            [-5, -21],\n\t            [-31, -11],\n\t            [-37, -34],\n\t            [-16, 12],\n\t            [6, 28],\n\t            [-30, 17],\n\t            [5, 12],\n\t            [26, 19],\n\t            [-8, 14],\n\t            [-43, 15],\n\t            [-2, 22],\n\t            [-25, -8],\n\t            [-11, -32],\n\t            [-21, -44]\n\t        ],\n\t        [\n\t            [3517, 3063],\n\t            [-12, -38],\n\t            [-31, -32],\n\t            [-21, 11],\n\t            [-15, -6],\n\t            [-26, 25],\n\t            [-18, -1],\n\t            [-17, 32]\n\t        ],\n\t        [\n\t            [679, 6185],\n\t            [-4, -10],\n\t            [-7, 8],\n\t            [1, 17],\n\t            [-4, 21],\n\t            [1, 7],\n\t            [5, 10],\n\t            [-2, 11],\n\t            [1, 6],\n\t            [3, -1],\n\t            [10, -10],\n\t            [5, -5],\n\t            [5, -8],\n\t            [7, -21],\n\t            [-1, -3],\n\t            [-11, -13],\n\t            [-9, -9]\n\t        ],\n\t        [\n\t            [664, 6277],\n\t            [-9, -4],\n\t            [-5, 12],\n\t            [-3, 5],\n\t            [0, 4],\n\t            [3, 5],\n\t            [9, -6],\n\t            [8, -9],\n\t            [-3, -7]\n\t        ],\n\t        [\n\t            [646, 6309],\n\t            [-1, -7],\n\t            [-15, 2],\n\t            [2, 7],\n\t            [14, -2]\n\t        ],\n\t        [\n\t            [621, 6317],\n\t            [-2, -3],\n\t            [-2, 1],\n\t            [-9, 2],\n\t            [-4, 13],\n\t            [-1, 2],\n\t            [7, 8],\n\t            [3, -3],\n\t            [8, -20]\n\t        ],\n\t        [\n\t            [574, 6356],\n\t            [-4, -6],\n\t            [-9, 11],\n\t            [1, 4],\n\t            [5, 6],\n\t            [6, -1],\n\t            [1, -14]\n\t        ],\n\t        [\n\t            [3135, 7724],\n\t            [5, -19],\n\t            [-30, -29],\n\t            [-29, -20],\n\t            [-29, -18],\n\t            [-15, -35],\n\t            [-4, -13],\n\t            [-1, -31],\n\t            [10, -32],\n\t            [11, -1],\n\t            [-3, 21],\n\t            [8, -13],\n\t            [-2, -17],\n\t            [-19, -9],\n\t            [-13, 1],\n\t            [-20, -10],\n\t            [-12, -3],\n\t            [-17, -3],\n\t            [-23, -17],\n\t            [41, 11],\n\t            [8, -11],\n\t            [-39, -18],\n\t            [-17, 0],\n\t            [0, 7],\n\t            [-8, -16],\n\t            [8, -3],\n\t            [-6, -43],\n\t            [-20, -45],\n\t            [-2, 15],\n\t            [-6, 3],\n\t            [-9, 15],\n\t            [5, -32],\n\t            [7, -10],\n\t            [1, -23],\n\t            [-9, -23],\n\t            [-16, -47],\n\t            [-2, 3],\n\t            [8, 40],\n\t            [-14, 22],\n\t            [-3, 49],\n\t            [-5, -25],\n\t            [5, -38],\n\t            [-18, 10],\n\t            [19, -19],\n\t            [1, -57],\n\t            [8, -4],\n\t            [3, -20],\n\t            [4, -59],\n\t            [-17, -44],\n\t            [-29, -18],\n\t            [-18, -34],\n\t            [-14, -4],\n\t            [-14, -22],\n\t            [-4, -20],\n\t            [-31, -38],\n\t            [-16, -28],\n\t            [-13, -35],\n\t            [-4, -42],\n\t            [5, -41],\n\t            [9, -51],\n\t            [13, -41],\n\t            [0, -26],\n\t            [13, -69],\n\t            [-1, -39],\n\t            [-1, -23],\n\t            [-7, -36],\n\t            [-8, -8],\n\t            [-14, 7],\n\t            [-4, 26],\n\t            [-11, 14],\n\t            [-15, 51],\n\t            [-13, 45],\n\t            [-4, 23],\n\t            [6, 39],\n\t            [-8, 33],\n\t            [-22, 49],\n\t            [-10, 9],\n\t            [-28, -27],\n\t            [-5, 3],\n\t            [-14, 28],\n\t            [-17, 14],\n\t            [-32, -7],\n\t            [-24, 7],\n\t            [-21, -5],\n\t            [-12, -9],\n\t            [5, -15],\n\t            [0, -24],\n\t            [5, -12],\n\t            [-5, -8],\n\t            [-10, 9],\n\t            [-11, -11],\n\t            [-20, 2],\n\t            [-20, 31],\n\t            [-25, -8],\n\t            [-20, 14],\n\t            [-17, -4],\n\t            [-24, -14],\n\t            [-25, -44],\n\t            [-27, -25],\n\t            [-16, -28],\n\t            [-6, -27],\n\t            [0, -41],\n\t            [1, -28],\n\t            [5, -20]\n\t        ],\n\t        [\n\t            [1746, 6980],\n\t            [-4, 30],\n\t            [-18, 34],\n\t            [-13, 7],\n\t            [-3, 17],\n\t            [-16, 3],\n\t            [-10, 16],\n\t            [-26, 6],\n\t            [-7, 9],\n\t            [-3, 32],\n\t            [-27, 60],\n\t            [-23, 82],\n\t            [1, 14],\n\t            [-13, 19],\n\t            [-21, 50],\n\t            [-4, 48],\n\t            [-15, 32],\n\t            [6, 49],\n\t            [-1, 51],\n\t            [-8, 45],\n\t            [10, 56],\n\t            [4, 53],\n\t            [3, 54],\n\t            [-5, 79],\n\t            [-9, 51],\n\t            [-8, 27],\n\t            [4, 12],\n\t            [40, -20],\n\t            [15, -56],\n\t            [7, 15],\n\t            [-5, 49],\n\t            [-9, 48]\n\t        ],\n\t        [\n\t            [750, 8432],\n\t            [-28, -23],\n\t            [-14, 15],\n\t            [-4, 28],\n\t            [25, 21],\n\t            [15, 9],\n\t            [18, -4],\n\t            [12, -18],\n\t            [-24, -28]\n\t        ],\n\t        [\n\t            [401, 8597],\n\t            [-18, -9],\n\t            [-18, 11],\n\t            [-17, 16],\n\t            [28, 10],\n\t            [22, -6],\n\t            [3, -22]\n\t        ],\n\t        [\n\t            [230, 8826],\n\t            [17, -12],\n\t            [17, 6],\n\t            [23, -15],\n\t            [27, -8],\n\t            [-2, -7],\n\t            [-21, -12],\n\t            [-21, 13],\n\t            [-11, 11],\n\t            [-24, -4],\n\t            [-7, 5],\n\t            [2, 23]\n\t        ],\n\t        [\n\t            [1374, 8295],\n\t            [-15, 22],\n\t            [-25, 19],\n\t            [-8, 52],\n\t            [-36, 47],\n\t            [-15, 56],\n\t            [-26, 4],\n\t            [-44, 2],\n\t            [-33, 17],\n\t            [-57, 61],\n\t            [-27, 11],\n\t            [-49, 21],\n\t            [-38, -5],\n\t            [-55, 27],\n\t            [-33, 25],\n\t            [-30, -12],\n\t            [5, -41],\n\t            [-15, -4],\n\t            [-32, -12],\n\t            [-25, -20],\n\t            [-30, -13],\n\t            [-4, 35],\n\t            [12, 58],\n\t            [30, 18],\n\t            [-8, 15],\n\t            [-35, -33],\n\t            [-19, -39],\n\t            [-40, -42],\n\t            [20, -29],\n\t            [-26, -42],\n\t            [-30, -25],\n\t            [-28, -18],\n\t            [-7, -26],\n\t            [-43, -31],\n\t            [-9, -28],\n\t            [-32, -25],\n\t            [-20, 5],\n\t            [-25, -17],\n\t            [-29, -20],\n\t            [-23, -20],\n\t            [-47, -16],\n\t            [-5, 9],\n\t            [31, 28],\n\t            [27, 18],\n\t            [29, 33],\n\t            [35, 6],\n\t            [14, 25],\n\t            [38, 35],\n\t            [6, 12],\n\t            [21, 21],\n\t            [5, 44],\n\t            [14, 35],\n\t            [-32, -18],\n\t            [-9, 11],\n\t            [-15, -22],\n\t            [-18, 30],\n\t            [-8, -21],\n\t            [-10, 29],\n\t            [-28, -23],\n\t            [-17, 0],\n\t            [-3, 35],\n\t            [5, 21],\n\t            [-17, 22],\n\t            [-37, -12],\n\t            [-23, 28],\n\t            [-19, 14],\n\t            [0, 34],\n\t            [-22, 25],\n\t            [11, 34],\n\t            [23, 33],\n\t            [10, 30],\n\t            [22, 4],\n\t            [19, -9],\n\t            [23, 28],\n\t            [20, -5],\n\t            [21, 19],\n\t            [-5, 27],\n\t            [-16, 10],\n\t            [21, 23],\n\t            [-17, -1],\n\t            [-30, -13],\n\t            [-8, -13],\n\t            [-22, 13],\n\t            [-39, -6],\n\t            [-41, 14],\n\t            [-12, 24],\n\t            [-35, 34],\n\t            [39, 25],\n\t            [62, 29],\n\t            [23, 0],\n\t            [-4, -30],\n\t            [59, 2],\n\t            [-23, 37],\n\t            [-34, 23],\n\t            [-20, 29],\n\t            [-26, 25],\n\t            [-38, 19],\n\t            [15, 31],\n\t            [49, 2],\n\t            [35, 27],\n\t            [7, 29],\n\t            [28, 28],\n\t            [28, 6],\n\t            [52, 27],\n\t            [26, -4],\n\t            [42, 31],\n\t            [42, -12],\n\t            [21, -27],\n\t            [12, 11],\n\t            [47, -3],\n\t            [-2, -14],\n\t            [43, -10],\n\t            [28, 6],\n\t            [59, -18],\n\t            [53, -6],\n\t            [21, -8],\n\t            [37, 10],\n\t            [42, -18],\n\t            [31, -8]\n\t        ],\n\t        [\n\t            [3018, 5753],\n\t            [-1, -14],\n\t            [-16, -7],\n\t            [9, -26],\n\t            [0, -31],\n\t            [-12, -35],\n\t            [10, -47],\n\t            [12, 4],\n\t            [6, 43],\n\t            [-8, 21],\n\t            [-2, 45],\n\t            [35, 24],\n\t            [-4, 27],\n\t            [10, 19],\n\t            [10, -41],\n\t            [19, -1],\n\t            [18, -33],\n\t            [1, -20],\n\t            [25, 0],\n\t            [30, 6],\n\t            [16, -27],\n\t            [21, -7],\n\t            [16, 18],\n\t            [0, 15],\n\t            [34, 4],\n\t            [34, 1],\n\t            [-24, -18],\n\t            [10, -28],\n\t            [22, -4],\n\t            [21, -29],\n\t            [4, -48],\n\t            [15, 2],\n\t            [11, -14]\n\t        ],\n\t        [\n\t            [8001, 6331],\n\t            [-37, -51],\n\t            [-24, -56],\n\t            [-6, -41],\n\t            [22, -62],\n\t            [25, -77],\n\t            [26, -37],\n\t            [17, -47],\n\t            [12, -109],\n\t            [-3, -104],\n\t            [-24, -39],\n\t            [-31, -38],\n\t            [-23, -49],\n\t            [-35, -55],\n\t            [-10, 37],\n\t            [8, 40],\n\t            [-21, 34]\n\t        ],\n\t        [\n\t            [9661, 4085],\n\t            [-9, -8],\n\t            [-9, 26],\n\t            [1, 16],\n\t            [17, -34]\n\t        ],\n\t        [\n\t            [9641, 4175],\n\t            [4, -47],\n\t            [-7, 7],\n\t            [-6, -3],\n\t            [-4, 16],\n\t            [0, 45],\n\t            [13, -18]\n\t        ],\n\t        [\n\t            [6475, 6041],\n\t            [-21, -16],\n\t            [-5, -26],\n\t            [-1, -20],\n\t            [-27, -25],\n\t            [-45, -28],\n\t            [-24, -41],\n\t            [-13, -3],\n\t            [-8, 3],\n\t            [-16, -25],\n\t            [-18, -11],\n\t            [-23, -3],\n\t            [-7, -3],\n\t            [-6, -16],\n\t            [-8, -4],\n\t            [-4, -15],\n\t            [-14, 1],\n\t            [-9, -8],\n\t            [-19, 3],\n\t            [-7, 35],\n\t            [1, 32],\n\t            [-5, 17],\n\t            [-5, 44],\n\t            [-8, 24],\n\t            [5, 3],\n\t            [-2, 27],\n\t            [3, 12],\n\t            [-1, 25]\n\t        ],\n\t        [\n\t            [5817, 3752],\n\t            [11, 0],\n\t            [14, -10],\n\t            [9, 7],\n\t            [15, -6]\n\t        ],\n\t        [\n\t            [5911, 3478],\n\t            [-7, -43],\n\t            [-3, -49],\n\t            [-7, -27],\n\t            [-19, -30],\n\t            [-5, -8],\n\t            [-12, -30],\n\t            [-8, -31],\n\t            [-16, -42],\n\t            [-31, -61],\n\t            [-20, -36],\n\t            [-21, -26],\n\t            [-29, -23],\n\t            [-14, -3],\n\t            [-3, -17],\n\t            [-17, 9],\n\t            [-14, -11],\n\t            [-30, 11],\n\t            [-17, -7],\n\t            [-12, 3],\n\t            [-28, -23],\n\t            [-24, -10],\n\t            [-17, -22],\n\t            [-13, -1],\n\t            [-11, 21],\n\t            [-10, 1],\n\t            [-12, 26],\n\t            [-1, -8],\n\t            [-4, 16],\n\t            [0, 34],\n\t            [-9, 40],\n\t            [9, 11],\n\t            [0, 45],\n\t            [-19, 55],\n\t            [-14, 50],\n\t            [0, 1],\n\t            [-20, 76]\n\t        ],\n\t        [\n\t            [5840, 4141],\n\t            [-21, -8],\n\t            [-15, -23],\n\t            [-4, -21],\n\t            [-10, -4],\n\t            [-24, -49],\n\t            [-15, -38],\n\t            [-10, -2],\n\t            [-9, 7],\n\t            [-31, 7]\n\t        ]\n\t    ],\n\t    \"transform\": {\n\t        \"scale\": [0.036003600360036005, 0.016927109510951093],\n\t        \"translate\": [-180, -85.609038]\n\t    }\n\t}\n\t;\n\t  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\t\n\t  /**************************************\n\t                Utilities\n\t  ***************************************/\n\t\n\t  //convert lat/lng coords to X / Y coords\n\t  Datamap.prototype.latLngToXY = function(lat, lng) {\n\t     return this.projection([lng, lat]);\n\t  };\n\t\n\t  //add <g> layer to root SVG\n\t  Datamap.prototype.addLayer = function( className, id, first ) {\n\t    var layer;\n\t    if ( first ) {\n\t      layer = this.svg.insert('g', ':first-child')\n\t    }\n\t    else {\n\t      layer = this.svg.append('g')\n\t    }\n\t    return layer.attr('id', id || '')\n\t      .attr('class', className || '');\n\t  };\n\t\n\t  Datamap.prototype.updateChoropleth = function(data) {\n\t    var svg = this.svg;\n\t    for ( var subunit in data ) {\n\t      if ( data.hasOwnProperty(subunit) ) {\n\t        var color;\n\t        var subunitData = data[subunit]\n\t        if ( ! subunit ) {\n\t          continue;\n\t        }\n\t        else if ( typeof subunitData === \"string\" ) {\n\t          color = subunitData;\n\t        }\n\t        else if ( typeof subunitData.color === \"string\" ) {\n\t          color = subunitData.color;\n\t        }\n\t        else {\n\t          color = this.options.fills[ subunitData.fillKey ];\n\t        }\n\t        //if it's an object, overriding the previous data\n\t        if ( subunitData === Object(subunitData) ) {\n\t          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n\t          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n\t        }\n\t        svg\n\t          .selectAll('.' + subunit)\n\t          .transition()\n\t            .style('fill', color);\n\t      }\n\t    }\n\t  };\n\t\n\t  Datamap.prototype.updatePopup = function (element, d, options) {\n\t    var self = this;\n\t    element.on('mousemove', null);\n\t    element.on('mousemove', function() {\n\t      var position = d3.mouse(self.options.element);\n\t      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n\t        .style('top', ( (position[1] + 30)) + \"px\")\n\t        .html(function() {\n\t          var data = JSON.parse(element.attr('data-info'));\n\t          //if ( !data ) return '';\n\t          return options.popupTemplate(d, data);\n\t        })\n\t        .style('left', ( position[0]) + \"px\");\n\t    });\n\t\n\t    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n\t  };\n\t\n\t  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n\t    var self = this;\n\t    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n\t      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n\t        var layer;\n\t        if ( typeof createNewLayer === \"undefined\" ) {\n\t          createNewLayer = false;\n\t        }\n\t\n\t        if ( typeof options === 'function' ) {\n\t          callback = options;\n\t          options = undefined;\n\t        }\n\t\n\t        options = defaults(options || {}, self.options[name + 'Config']);\n\t\n\t        //add a single layer, reuse the old layer\n\t        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n\t          layer = this.options[name + 'Layer'];\n\t          options = options || this.options[name + 'Options'];\n\t        }\n\t        else {\n\t          layer = this.addLayer(name);\n\t          this.options[name + 'Layer'] = layer;\n\t          this.options[name + 'Options'] = options;\n\t        }\n\t        pluginFn.apply(this, [layer, data, options]);\n\t        if ( callback ) {\n\t          callback(layer);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  // expose library\n\t  if ( true ) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) { d3 = __webpack_require__(262); topojson = __webpack_require__(263); return Datamap; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  else {\n\t    window.Datamap = window.Datamaps = Datamap;\n\t  }\n\t\n\t  if ( window.jQuery ) {\n\t    window.jQuery.fn.datamaps = function(options, callback) {\n\t      options = options || {};\n\t      options.element = this[0];\n\t      var datamap = new Datamap(options);\n\t      if ( typeof callback === \"function\" ) {\n\t        callback(datamap, options);\n\t      }\n\t      return this;\n\t    };\n\t  }\n\t})();\n\n\n/***/ },\n\n/***/ 262:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 263:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction noop() {}\n\t\n\tfunction transformAbsolute(transform) {\n\t  if (!transform) return noop;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(point, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    point[0] = (x0 += point[0]) * kx + dx;\n\t    point[1] = (y0 += point[1]) * ky + dy;\n\t  };\n\t}\n\t\n\tfunction transformRelative(transform) {\n\t  if (!transform) return noop;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(point, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var x1 = Math.round((point[0] - dx) / kx),\n\t        y1 = Math.round((point[1] - dy) / ky);\n\t    point[0] = x1 - x0;\n\t    point[1] = y1 - y0;\n\t    x0 = x1;\n\t    y0 = y1;\n\t  };\n\t}\n\t\n\tfunction reverse(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t}\n\t\n\tfunction bisect(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t}\n\t\n\tfunction feature(topology, o) {\n\t  return o.type === \"GeometryCollection\" ? {\n\t    type: \"FeatureCollection\",\n\t    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n\t  } : feature$1(topology, o);\n\t}\n\t\n\tfunction feature$1(topology, o) {\n\t  var f = {\n\t    type: \"Feature\",\n\t    id: o.id,\n\t    properties: o.properties || {},\n\t    geometry: object(topology, o)\n\t  };\n\t  if (o.id == null) delete f.id;\n\t  return f;\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var absolute = transformAbsolute(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n\t      points.push(p = a[k].slice());\n\t      absolute(p, k);\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    p = p.slice();\n\t    absolute(p, 0);\n\t    return p;\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0].slice());\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0].slice());\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var t = o.type;\n\t    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n\t        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n\t        : null;\n\t  }\n\t\n\t  var geometryType = {\n\t    Point: function(o) { return point(o.coordinates); },\n\t    MultiPoint: function(o) { return o.coordinates.map(point); },\n\t    LineString: function(o) { return line(o.arcs); },\n\t    MultiLineString: function(o) { return o.arcs.map(line); },\n\t    Polygon: function(o) { return polygon(o.arcs); },\n\t    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n\t  };\n\t\n\t  return geometry(o);\n\t}\n\t\n\tfunction stitchArcs(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t}\n\t\n\tfunction mesh(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t}\n\t\n\tfunction meshArcs(topology, o, filter) {\n\t  var arcs = [];\n\t\n\t  function arc(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function line(arcs) {\n\t    arcs.forEach(arc);\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    arcs.forEach(line);\n\t  }\n\t\n\t  function geometry(o) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n\t    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n\t  }\n\t\n\t  if (arguments.length > 1) {\n\t    var geomsByArc = [],\n\t        geom;\n\t\n\t    var geometryType = {\n\t      LineString: line,\n\t      MultiLineString: polygon,\n\t      Polygon: polygon,\n\t      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n\t    };\n\t\n\t    geometry(o);\n\t\n\t    geomsByArc.forEach(arguments.length < 3\n\t        ? function(geoms) { arcs.push(geoms[0].i); }\n\t        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t  } else {\n\t    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n\t  }\n\t\n\t  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n\t}\n\t\n\tfunction cartesianTriangleArea(triangle) {\n\t  var a = triangle[0], b = triangle[1], c = triangle[2];\n\t  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n\t}\n\t\n\tfunction ring(ring) {\n\t  var i = -1,\n\t      n = ring.length,\n\t      a,\n\t      b = ring[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = ring[i];\n\t    area += a[0] * b[1] - a[1] * b[0];\n\t  }\n\t\n\t  return area / 2;\n\t}\n\t\n\tfunction merge(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t}\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      components = [];\n\t\n\t  objects.forEach(function(o) {\n\t    if (o.type === \"Polygon\") register(o.arcs);\n\t    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n\t  });\n\t\n\t  function register(polygon) {\n\t    polygon.forEach(function(ring$$) {\n\t      ring$$.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring$$) {\n\t    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var component = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      components.push(component);\n\t      while (polygon = neighbors.pop()) {\n\t        component.push(polygon);\n\t        polygon.forEach(function(ring$$) {\n\t          ring$$.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: components.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring$$) {\n\t          ring$$.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitchArcs(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tfunction neighbors(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t}\n\t\n\tfunction compareArea(a, b) {\n\t  return a[1][2] - b[1][2];\n\t}\n\t\n\tfunction minAreaHeap() {\n\t  var heap = {},\n\t      array = [],\n\t      size = 0;\n\t\n\t  heap.push = function(object) {\n\t    up(array[object._ = size] = object, size++);\n\t    return size;\n\t  };\n\t\n\t  heap.pop = function() {\n\t    if (size <= 0) return;\n\t    var removed = array[0], object;\n\t    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t    return removed;\n\t  };\n\t\n\t  heap.remove = function(removed) {\n\t    var i = removed._, object;\n\t    if (array[i] !== removed) return; // invalid request\n\t    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t    return i;\n\t  };\n\t\n\t  function up(object, i) {\n\t    while (i > 0) {\n\t      var j = ((i + 1) >> 1) - 1,\n\t          parent = array[j];\n\t      if (compareArea(object, parent) >= 0) break;\n\t      array[parent._ = i] = parent;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  function down(object, i) {\n\t    while (true) {\n\t      var r = (i + 1) << 1,\n\t          l = r - 1,\n\t          j = i,\n\t          child = array[j];\n\t      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n\t      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n\t      if (j === i) break;\n\t      array[child._ = i] = child;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  return heap;\n\t}\n\t\n\tfunction presimplify(topology, triangleArea) {\n\t  var absolute = transformAbsolute(topology.transform),\n\t      relative = transformRelative(topology.transform),\n\t      heap = minAreaHeap();\n\t\n\t  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var triangles = [],\n\t        maxArea = 0,\n\t        triangle,\n\t        i,\n\t        n,\n\t        p;\n\t\n\t    // To store each point’s effective area, we create a new array rather than\n\t    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n\t    // stuck in smi mode). For midpoints, the initial effective area of\n\t    // Infinity will be computed in the next step.\n\t    for (i = 0, n = arc.length; i < n; ++i) {\n\t      p = arc[i];\n\t      absolute(arc[i] = [p[0], p[1], Infinity], i);\n\t    }\n\t\n\t    for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t      triangle = arc.slice(i - 1, i + 2);\n\t      triangle[1][2] = triangleArea(triangle);\n\t      triangles.push(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    for (i = 0, n = triangles.length; i < n; ++i) {\n\t      triangle = triangles[i];\n\t      triangle.previous = triangles[i - 1];\n\t      triangle.next = triangles[i + 1];\n\t    }\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the area of the current point is less than that of the previous point\n\t      // to be eliminated, use the latter's area instead. This ensures that the\n\t      // current point cannot be eliminated without eliminating previously-\n\t      // eliminated points.\n\t      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n\t      else maxArea = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    arc.forEach(relative);\n\t  });\n\t\n\t  function update(triangle) {\n\t    heap.remove(triangle);\n\t    triangle[1][2] = triangleArea(triangle);\n\t    heap.push(triangle);\n\t  }\n\t\n\t  return topology;\n\t}\n\t\n\tvar version = \"1.6.27\";\n\t\n\texports.version = version;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.feature = feature;\n\texports.neighbors = neighbors;\n\texports.presimplify = presimplify;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n/***/ },\n\n/***/ 264:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// bulbs-datamap.js","/* global Datamap */\nimport * as d3 from 'd3';\nimport topojson from 'topojson'\nimport Datamap from 'datamaps'\n\nimport {\n  registerElement,\n  BulbsHTMLElement,\n} from 'bulbs-elements/register';\nimport './bulbs-datamap.scss';\n\nclass BulbsDatamap extends BulbsHTMLElement {\n  createdCallback () {\n    this.innerHTML = '<div class=\"bulbs-datamap\"></div>';\n    let mapContainer = this.firstChild;\n    let that = this;\n\n    this.map = new Datamap({\n      element: mapContainer,\n      scope: 'usa',\n      responsive: true,\n      fills: {\n        defaultFill: '',\n      },\n      geographyConfig: {\n        highlightOnHover: false,\n      },\n    });\n\n    window.addEventListener('resize', this.resizeMap.bind(this));\n\n    d3.select(mapContainer).selectAll('svg .datamaps-subunit').on('click', function (stateObj) {\n      that.stateClicked(this, stateObj, mapContainer);\n    });\n  }\n\n  stateClicked (path, stateObj, mapContainer) {\n    d3.select(mapContainer)\n      .selectAll('svg .datamaps-subunit')\n      .classed('selected', false);\n    d3.select(path).classed('selected', true);\n\n    let event = new CustomEvent('bulbs-datamap:selected', { 'detail': stateObj });\n    mapContainer.dispatchEvent(event);\n  }\n\n  resizeMap () {\n    this.map.resize();\n  }\n}\n\nregisterElement('bulbs-datamap', BulbsDatamap);\n\nexport default BulbsDatamap;\n\n\n\n// WEBPACK FOOTER //\n// ./elements/bulbs-datamap/bulbs-datamap.js","require(\"./d3\");\nmodule.exports = d3;\n(function () { delete this.d3; })(); // unset global\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/index-browserify.js\n// module id = 228\n// module chunks = 5 16 17","d3 = function() {\n  var d3 = {\n    version: \"3.3.13\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  };\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n  d3.mean = function(array, f) {\n    var n = array.length, a, m = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n    } else {\n      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n    }\n    return j ? m : undefined;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n  };\n  d3.bisector = function(f) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  };\n  var d3_bisector = d3.bisector(function(d) {\n    return d;\n  });\n  d3.bisectLeft = d3_bisector.left;\n  d3.bisect = d3.bisectRight = d3_bisector.right;\n  d3.shuffle = function(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n  d3.map = function(object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function(key, value) {\n      map.set(key, value);\n    }); else for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  function d3_Map() {}\n  d3_class(d3_Map, {\n    has: function(key) {\n      return d3_map_prefix + key in this;\n    },\n    get: function(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: function(key) {\n      key = d3_map_prefix + key;\n      return key in this && delete this[key];\n    },\n    keys: function() {\n      var keys = [];\n      this.forEach(function(key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      this.forEach(function(key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    forEach: function(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, key.substring(1), this[key]);\n        }\n      }\n    }\n  });\n  var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {}\n  d3_class(d3_Set, {\n    has: function(value) {\n      return d3_map_prefix + value in this;\n    },\n    add: function(value) {\n      this[d3_map_prefix + value] = true;\n      return value;\n    },\n    remove: function(value) {\n      value = d3_map_prefix + value;\n      return value in this && delete this[value];\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(value) {\n        values.push(value);\n      });\n      return values;\n    },\n    forEach: function(f) {\n      for (var value in this) {\n        if (value.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, value.substring(1));\n        }\n      }\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = function(s, n) {\n      return Sizzle.uniqueSort(Sizzle(s, n));\n    };\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return name.trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n        for (i = -1; ++i < n; ) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues.push(keyValue);\n        }\n        for (i = -1; ++i < m; ) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n          if (node = nodeByKeyValue.get(keyValue)) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          } else if (!dataByKeyValue.has(keyValue)) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n          dataByKeyValue.set(keyValue, nodeData);\n          nodeByKeyValue.remove(keyValue);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3.ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    this.each(function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3_selectionPrototype.transition = function() {\n    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_selectionPrototype.interrupt = function() {\n    return this.each(d3_selection_interrupt);\n  };\n  function d3_selection_interrupt() {\n    var lock = this.__transition__;\n    if (lock) ++lock.active;\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.substring(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        function off() {\n          w.on(click, null);\n        }\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function touchid() {\n      return d3.event.changedTouches[0].identifier;\n    }\n    function touchposition(parent, id) {\n      return d3.touches(parent).filter(function(p) {\n        return p.identifier === id;\n      })[0];\n    }\n    function dragstart(id, position, move, end) {\n      return function() {\n        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n        if (origin) {\n          offset = origin.apply(target, arguments);\n          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n        } else {\n          offset = [ 0, 0 ];\n        }\n        event_({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n          dragged |= dx | dy;\n          origin_ = p;\n          event_({\n            type: \"drag\",\n            x: p[0] + offset[0],\n            y: p[1] + offset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n          dragRestore(dragged && d3.event.target === eventTarget);\n          event_({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(event_);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(event_);\n            };\n          }).each(\"end.zoom\", function() {\n            zoomended(event_);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(event_);\n          zoomed(event_);\n          zoomended(event_);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(event) {\n      event({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(event) {\n      rescale();\n      event({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(event) {\n      event({\n        type: \"zoomend\"\n      });\n    }\n    function mousedowned() {\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      zoomstarted(event_);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(target), l);\n        zoomed(event_);\n      }\n      function ended() {\n        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === eventTarget);\n        zoomended(event_);\n      }\n    }\n    function touchstarted() {\n      var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(target);\n      started();\n      zoomstarted(event_);\n      function relocate() {\n        var touches = d3.touches(target);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0], l = locations0[p.identifier];\n            scaleTo(view.k * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            zoomed(event_);\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(target), p0, l0, p1, l1;\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(event_);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        w.on(touchmove, null).on(touchend, null);\n        t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(event_);\n      }\n    }\n    function mousewheeled() {\n      var event_ = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      zoomstarted(event_);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(event_);\n      }, 50);\n      d3_eventPreventDefault();\n      var point = center || d3.mouse(this);\n      if (!translate0) translate0 = location(point);\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(point, translate0);\n      zoomed(event_);\n    }\n    function mousewheelreset() {\n      translate0 = null;\n    }\n    function dblclicked() {\n      var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n      zoomstarted(event_);\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      zoomed(event_);\n      zoomended(event_);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  function d3_Color() {}\n  d3_Color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = function(h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = function(h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n  d3_hclPrototype.brighter = function(k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = function(l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n  d3_labPrototype.brighter = function(k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = function(r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n  function d3_rgbNumber(value) {\n    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, name;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n    if (format != null && format.charAt(0) === \"#\") {\n      if (format.length === 4) {\n        r = format.charAt(1);\n        r += r;\n        g = format.charAt(2);\n        g += g;\n        b = format.charAt(3);\n        b += b;\n      } else if (format.length === 7) {\n        r = format.substring(1, 3);\n        g = format.substring(3, 5);\n        b = format.substring(5, 7);\n      }\n      r = parseInt(r, 16);\n      g = parseInt(g, 16);\n      b = parseInt(b, 16);\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.substring(j, I - k);\n        }\n        return text.substring(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  d3.format = function(specifier) {\n    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n    if (precision) precision = +precision.substring(1);\n    if (zfill || fill === \"0\" && align === \"=\") {\n      zfill = fill = \"0\";\n      align = \"=\";\n      if (comma) width -= Math.floor((width - 1) / 4);\n    }\n    switch (type) {\n     case \"n\":\n      comma = true;\n      type = \"g\";\n      break;\n\n     case \"%\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"f\";\n      break;\n\n     case \"p\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"r\";\n      break;\n\n     case \"b\":\n     case \"o\":\n     case \"x\":\n     case \"X\":\n      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\n     case \"c\":\n     case \"d\":\n      integer = true;\n      precision = 0;\n      break;\n\n     case \"s\":\n      scale = -1;\n      type = \"r\";\n      break;\n    }\n    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n    if (type == \"r\" && !precision) type = \"g\";\n    if (precision != null) {\n      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n    }\n    type = d3_format_types.get(type) || d3_format_typeDefault;\n    var zcomma = zfill && comma;\n    return function(value) {\n      if (integer && value % 1) return \"\";\n      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n      if (scale < 0) {\n        var prefix = d3.formatPrefix(value, precision);\n        value = prefix.scale(value);\n        suffix = prefix.symbol;\n      } else {\n        value *= scale;\n      }\n      value = type(value, precision);\n      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n      if (!zfill && comma) before = d3_format_group(before);\n      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n      if (zcomma) before = d3_format_group(padding + before);\n      negative += symbol;\n      value = before + after;\n      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n    };\n  };\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_format_group = d3_identity;\n  if (d3_format_grouping) {\n    var d3_format_groupingLength = d3_format_grouping.length;\n    d3_format_group = function(value) {\n      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n      while (i > 0 && g > 0) {\n        t.push(value.substring(i -= g, i + g));\n        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n      }\n      return t.reverse().join(d3_format_thousandsSeparator);\n    };\n  }\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n          listener.polygonStart();\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          listener.polygonEnd();\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          listener.lineStart();\n          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n          listener.lineEnd();\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n        polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function isLeft(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return projection.rotate([ 0, 0 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n      if (fx === d3_geom_pointX && y === d3_geom_pointY) vertices = data; else for (i = 0, \n      vertices = []; i < n; ++i) {\n        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n      }\n      for (i = 1; i < n; ++i) {\n        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n      }\n      for (i = 0; i < n; ++i) {\n        if (i === h) continue;\n        y1 = vertices[i][1] - vertices[h][1];\n        x1 = vertices[i][0] - vertices[h][0];\n        points.push({\n          angle: Math.atan2(y1, x1),\n          index: i\n        });\n      }\n      points.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      a = points[0].angle;\n      v = points[0].index;\n      u = 0;\n      for (i = 1; i < plen; ++i) {\n        j = points[i].index;\n        if (a == points[i].angle) {\n          x1 = vertices[v][0] - vertices[h][0];\n          y1 = vertices[v][1] - vertices[h][1];\n          x2 = vertices[j][0] - vertices[h][0];\n          y2 = vertices[j][1] - vertices[h][1];\n          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n            points[i].index = -1;\n            continue;\n          } else {\n            points[u].index = -1;\n          }\n        }\n        a = points[i].angle;\n        u = i;\n        v = j;\n      }\n      stack.push(h);\n      for (i = 0, j = 0; i < 2; ++j) {\n        if (points[j].index > -1) {\n          stack.push(points[j].index);\n          i++;\n        }\n      }\n      sp = stack.length;\n      for (;j < plen; ++j) {\n        if (points[j].index < 0) continue;\n        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n          --sp;\n        }\n        stack[sp++] = points[j].index;\n      }\n      var poly = [];\n      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n      return poly;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullCCW(i1, i2, i3, v) {\n    var t, a, b, c, d, e, f;\n    t = v[i1];\n    a = t[0];\n    b = t[1];\n    t = v[i2];\n    c = t[0];\n    d = t[1];\n    t = v[i3];\n    e = t[0];\n    f = t[1];\n    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx; else x2 = sx;\n        if (bottom) y1 = sy; else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    b -= a = +a;\n    return function(t) {\n      return a + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n    a = a + \"\", b = b + \"\";\n    d3_interpolate_number.lastIndex = 0;\n    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n      if (m.index) s.push(b.substring(s0, s1 = m.index));\n      q.push({\n        i: s.length,\n        x: m[0]\n      });\n      s.push(null);\n      s0 = d3_interpolate_number.lastIndex;\n    }\n    if (s0 < b.length) s.push(b.substring(s0));\n    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n      o = q[i];\n      if (o.x == m[0]) {\n        if (o.i) {\n          if (s[o.i + 1] == null) {\n            s[o.i - 1] += o.x;\n            s.splice(o.i, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          } else {\n            s[o.i - 1] += o.x + s[o.i + 1];\n            s.splice(o.i, 2);\n            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n          }\n        } else {\n          if (s[o.i + 1] == null) {\n            s[o.i] = o.x;\n          } else {\n            s[o.i] = o.x + s[o.i + 1];\n            s.splice(o.i + 1, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          }\n        }\n        q.splice(i, 1);\n        n--;\n        i--;\n      } else {\n        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n      }\n    }\n    while (i < n) {\n      o = q.pop();\n      if (s[o.i + 1] == null) {\n        s[o.i] = o.x;\n      } else {\n        s[o.i] = o.x + s[o.i + 1];\n        s.splice(o.i + 1, 1);\n      }\n      n--;\n    }\n    if (s.length === 1) {\n      return s[0] == null ? (o = q[0].x, function(t) {\n        return o(t) + \"\";\n      }) : function() {\n        return b;\n      };\n    }\n    return function(t) {\n      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return (x - a) * b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n          if ((x2 - x1) * dn < theta) {\n            var k = quad.charge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n            return true;\n          }\n          if (quad.point && isFinite(dn)) {\n            var k = quad.pointCharge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return theta;\n      theta = +x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function recurse(node, depth, nodes) {\n      var childs = children.call(hierarchy, node, depth);\n      node.depth = depth;\n      nodes.push(node);\n      if (childs && (n = childs.length)) {\n        var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n        while (++i < n) {\n          d = c[i] = recurse(childs[i], j, nodes);\n          d.parent = node;\n          v += d.value;\n        }\n        if (sort) c.sort(sort);\n        if (value) node.value = v;\n      } else {\n        delete node.children;\n        if (value) {\n          node.value = +value.call(hierarchy, node, depth) || 0;\n        }\n      }\n      return node;\n    }\n    function revalue(node, depth) {\n      var children = node.children, v = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n, j = depth + 1;\n        while (++i < n) v += revalue(children[i], j);\n      } else if (value) {\n        v = +value.call(hierarchy, node, depth) || 0;\n      }\n      if (value) node.value = v;\n      return v;\n    }\n    function hierarchy(d) {\n      var nodes = [];\n      recurse(d, 0, nodes);\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      revalue(root, 0);\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n    function pie(data) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length, m = series[0].length, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      function firstWalk(node, previousSibling) {\n        var children = node.children, layout = node._tree;\n        if (children && (n = children.length)) {\n          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n          while (++i < n) {\n            child = children[i];\n            firstWalk(child, previousChild);\n            ancestor = apportion(child, previousChild, ancestor);\n            previousChild = child;\n          }\n          d3_layout_treeShift(node);\n          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n            layout.mod = layout.prelim - midpoint;\n          } else {\n            layout.prelim = midpoint;\n          }\n        } else {\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n          }\n        }\n      }\n      function secondWalk(node, x) {\n        node.x = node._tree.prelim + x;\n        var children = node.children;\n        if (children && (n = children.length)) {\n          var i = -1, n;\n          x += node._tree.mod;\n          while (++i < n) {\n            secondWalk(children[i], x);\n          }\n        }\n      }\n      function apportion(node, previousSibling, ancestor) {\n        if (previousSibling) {\n          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n            vom = d3_layout_treeLeft(vom);\n            vop = d3_layout_treeRight(vop);\n            vop._tree.ancestor = node;\n            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n            if (shift > 0) {\n              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n              sip += shift;\n              sop += shift;\n            }\n            sim += vim._tree.mod;\n            sip += vip._tree.mod;\n            som += vom._tree.mod;\n            sop += vop._tree.mod;\n          }\n          if (vim && !d3_layout_treeRight(vop)) {\n            vop._tree.thread = vim;\n            vop._tree.mod += sim - sop;\n          }\n          if (vip && !d3_layout_treeLeft(vom)) {\n            vom._tree.thread = vip;\n            vom._tree.mod += sip - som;\n            ancestor = node;\n          }\n        }\n        return ancestor;\n      }\n      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n        node._tree = {\n          ancestor: node,\n          prelim: 0,\n          mod: 0,\n          change: 0,\n          shift: 0,\n          number: previousSibling ? previousSibling._tree.number + 1 : 0\n        };\n      });\n      firstWalk(root);\n      secondWalk(root, -root._tree.prelim);\n      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x *= size[0];\n        node.y = node.depth * size[1];\n        delete node._tree;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = node.depth / y1 * size[1];\n        delete node._tree;\n      });\n      return nodes;\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(node) {\n    var children = node.children;\n    return children && children.length ? children[0] : node._tree.thread;\n  }\n  function d3_layout_treeRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n  }\n  function d3_layout_treeSearch(node, compare) {\n    var children = node.children;\n    if (children && (n = children.length)) {\n      var child, n, i = -1;\n      while (++i < n) {\n        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n          node = child;\n        }\n      }\n    }\n    return node;\n  }\n  function d3_layout_treeRightmost(a, b) {\n    return a.x - b.x;\n  }\n  function d3_layout_treeLeftmost(a, b) {\n    return b.x - a.x;\n  }\n  function d3_layout_treeDeepest(a, b) {\n    return a.depth - b.depth;\n  }\n  function d3_layout_treeVisitAfter(node, callback) {\n    function visit(node, previousSibling) {\n      var children = node.children;\n      if (children && (n = children.length)) {\n        var child, previousChild = null, i = -1, n;\n        while (++i < n) {\n          child = children[i];\n          visit(child, previousChild);\n          previousChild = child;\n        }\n      }\n      callback(node, previousSibling);\n    }\n    visit(node, null);\n  }\n  function d3_layout_treeShift(node) {\n    var shift = 0, change = 0, children = node.children, i = children.length, child;\n    while (--i >= 0) {\n      child = children[i]._tree;\n      child.prelim += shift;\n      child.mod += shift;\n      shift += child.shift + (change += child.change);\n    }\n  }\n  function d3_layout_treeMove(ancestor, node, shift) {\n    ancestor = ancestor._tree;\n    node = node._tree;\n    var change = shift / (node.number - ancestor.number);\n    ancestor.change += change;\n    node.change -= change;\n    node.shift += shift;\n    node.prelim += shift;\n    node.mod += shift;\n  }\n  function d3_layout_treeAncestor(vim, node, ancestor) {\n    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_treeVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_treeVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n      return [ b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j ].join(\"\");\n    }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(function(d) {\n        return !isNaN(d);\n      }).sort(d3.ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node.__transition__[id].tween.remove(name);\n    } : function(node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function(node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id1);\n  };\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, d, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n        switch (orient) {\n         case \"bottom\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", innerTickSize);\n            textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n            break;\n          }\n\n         case \"top\":\n          {\n            tickTransform = d3_svg_axisX;\n            lineEnter.attr(\"y2\", -innerTickSize);\n            textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n            break;\n          }\n\n         case \"left\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", -innerTickSize);\n            textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n            pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n            break;\n          }\n\n         case \"right\":\n          {\n            tickTransform = d3_svg_axisY;\n            lineEnter.attr(\"x2\", innerTickSize);\n            textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n            pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n            break;\n          }\n        }\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1);\n        }\n        tickEnter.call(tickTransform, scale0);\n        tickUpdate.call(tickTransform, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time = d3.time = {}, d3_date = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  d3_time_daySymbols.forEach(function(day, i) {\n    day = day.toLowerCase();\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  d3_time.format = d3_time_format;\n  function d3_time_format(template) {\n    var n = template.length;\n    function format(date) {\n      var string = [], i = -1, j = 0, c, p, f;\n      while (++i < n) {\n        if (template.charCodeAt(i) === 37) {\n          string.push(template.substring(j, i));\n          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n      string.push(template.substring(j, i));\n      return string.join(\"\");\n    }\n    format.parse = function(string) {\n      var d = {\n        y: 1900,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0,\n        Z: null\n      }, i = d3_time_parse(d, template, string, 0);\n      if (i != string.length) return null;\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n      var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n        date.setFullYear(d.y, 0, 1);\n        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n      } else date.setFullYear(d.y, d.m, d.d);\n      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n      return localZ ? date._ : date;\n    };\n    format.toString = function() {\n      return template;\n    };\n    return format;\n  }\n  function d3_time_parse(date, template, string, j) {\n    var c, p, t, i = 0, n = template.length, m = string.length;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = template.charCodeAt(i++);\n      if (c === 37) {\n        t = template.charAt(i++);\n        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n        if (!p || (j = p(date, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  };\n  var d3_time_formats = {\n    a: function(d) {\n      return d3_time_dayAbbreviations[d.getDay()];\n    },\n    A: function(d) {\n      return d3_time_days[d.getDay()];\n    },\n    b: function(d) {\n      return d3_time_monthAbbreviations[d.getMonth()];\n    },\n    B: function(d) {\n      return d3_time_months[d.getMonth()];\n    },\n    c: d3_time_format(d3_time_formatDateTime),\n    d: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    e: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    H: function(d, p) {\n      return d3_time_formatPad(d.getHours(), p, 2);\n    },\n    I: function(d, p) {\n      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n    },\n    j: function(d, p) {\n      return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n    },\n    L: function(d, p) {\n      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n    },\n    m: function(d, p) {\n      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n    },\n    M: function(d, p) {\n      return d3_time_formatPad(d.getMinutes(), p, 2);\n    },\n    p: function(d) {\n      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n    },\n    S: function(d, p) {\n      return d3_time_formatPad(d.getSeconds(), p, 2);\n    },\n    U: function(d, p) {\n      return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n    },\n    w: function(d) {\n      return d.getDay();\n    },\n    W: function(d, p) {\n      return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n    },\n    x: d3_time_format(d3_time_formatDate),\n    X: d3_time_format(d3_time_formatTime),\n    y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n    },\n    Y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n    },\n    Z: d3_time_zone,\n    \"%\": function() {\n      return \"%\";\n    }\n  };\n  var d3_time_parsers = {\n    a: d3_time_parseWeekdayAbbrev,\n    A: d3_time_parseWeekday,\n    b: d3_time_parseMonthAbbrev,\n    B: d3_time_parseMonth,\n    c: d3_time_parseLocaleFull,\n    d: d3_time_parseDay,\n    e: d3_time_parseDay,\n    H: d3_time_parseHour24,\n    I: d3_time_parseHour24,\n    j: d3_time_parseDayOfYear,\n    L: d3_time_parseMilliseconds,\n    m: d3_time_parseMonthNumber,\n    M: d3_time_parseMinutes,\n    p: d3_time_parseAmPm,\n    S: d3_time_parseSeconds,\n    U: d3_time_parseWeekNumberSunday,\n    w: d3_time_parseWeekdayNumber,\n    W: d3_time_parseWeekNumberMonday,\n    x: d3_time_parseLocaleDate,\n    X: d3_time_parseLocaleTime,\n    y: d3_time_parseYear,\n    Y: d3_time_parseFullYear,\n    Z: d3_time_parseZone,\n    \"%\": d3_time_parseLiteralPercent\n  };\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\n    d3_time_dayAbbrevRe.lastIndex = 0;\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekday(date, string, i) {\n    d3_time_dayRe.lastIndex = 0;\n    var n = d3_time_dayRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMonthAbbrev(date, string, i) {\n    d3_time_monthAbbrevRe.lastIndex = 0;\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseMonth(date, string, i) {\n    d3_time_monthRe.lastIndex = 0;\n    var n = d3_time_monthRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseLocaleFull(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n  }\n  function d3_time_parseLocaleDate(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n  }\n  function d3_time_parseLocaleTime(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  var d3_time_numberRe = /^\\s*\\d+/;\n  function d3_time_parseAmPm(date, string, i) {\n    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n    return n == null ? -1 : (date.p = n, i);\n  }\n  var d3_time_amPmLookup = d3.map({\n    am: 0,\n    pm: 1\n  });\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  d3_time_format.utc = d3_time_formatUtc;\n  function d3_time_formatUtc(template) {\n    var local = d3_time_format(template);\n    function format(date) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date();\n        utc._ = date;\n        return local(utc);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    format.parse = function(string) {\n      try {\n        d3_date = d3_date_utc;\n        var date = local.parse(string);\n        return date && date._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n    format.toString = local.toString;\n    return format;\n  }\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  function d3_time_scaleFormat(formats) {\n    return function(date) {\n      var i = formats.length - 1, f = formats[i];\n      while (!f[1](date)) f = formats[--i];\n      return f[0](date);\n    };\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormats = [ [ d3_time_format(\"%Y\"), d3_true ], [ d3_time_format(\"%B\"), function(d) {\n    return d.getMonth();\n  } ], [ d3_time_format(\"%b %d\"), function(d) {\n    return d.getDate() != 1;\n  } ], [ d3_time_format(\"%a %d\"), function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ d3_time_format(\"%I %p\"), function(d) {\n    return d.getHours();\n  } ], [ d3_time_format(\"%I:%M\"), function(d) {\n    return d.getMinutes();\n  } ], [ d3_time_format(\":%S\"), function(d) {\n    return d.getSeconds();\n  } ], [ d3_time_format(\".%L\"), function(d) {\n    return d.getMilliseconds();\n  } ] ];\n  var d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUTCFormats = [ [ d3_time_formatUtc(\"%Y\"), d3_true ], [ d3_time_formatUtc(\"%B\"), function(d) {\n    return d.getUTCMonth();\n  } ], [ d3_time_formatUtc(\"%b %d\"), function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%a %d\"), function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ d3_time_formatUtc(\"%I %p\"), function(d) {\n    return d.getUTCHours();\n  } ], [ d3_time_formatUtc(\"%I:%M\"), function(d) {\n    return d.getUTCMinutes();\n  } ], [ d3_time_formatUtc(\":%S\"), function(d) {\n    return d.getUTCSeconds();\n  } ], [ d3_time_formatUtc(\".%L\"), function(d) {\n    return d.getUTCMilliseconds();\n  } ] ];\n  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n  d3_time_scaleUTCMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  return d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 229\n// module chunks = 5 16 17","var topojson = module.exports = require(\"./topojson\");\ntopojson.topology = require(\"./lib/topojson/topology\");\ntopojson.simplify = require(\"./lib/topojson/simplify\");\ntopojson.clockwise = require(\"./lib/topojson/clockwise\");\ntopojson.filter = require(\"./lib/topojson/filter\");\ntopojson.prune = require(\"./lib/topojson/prune\");\ntopojson.bind = require(\"./lib/topojson/bind\");\ntopojson.stitch = require(\"./lib/topojson/stitch\");\ntopojson.scale = require(\"./lib/topojson/scale\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/index.js\n// module id = 230\n// module chunks = 5 17","!function() {\n  var topojson = {\n    version: \"1.6.9\",\n    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n    meshArcs: meshArcs,\n    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n    mergeArcs: mergeArcs,\n    feature: featureOrCollection,\n    neighbors: neighbors,\n    presimplify: presimplify\n  };\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1;\n\n    // Stitch empty arcs first, since they may be subsumed by other arcs.\n    arcs.forEach(function(i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i], t;\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n\n    arcs.forEach(function(i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f, g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n      else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n    return fragments;\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n\n      function arc(i) {\n        var j = i < 0 ? ~i : i;\n        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n      }\n\n      function line(arcs) {\n        arcs.forEach(arc);\n      }\n\n      function polygon(arcs) {\n        arcs.forEach(line);\n      }\n\n      function geometry(o) {\n        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n      }\n\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n      };\n\n      geometry(o);\n\n      geomsByArc.forEach(arguments.length < 3\n          ? function(geoms) { arcs.push(geoms[0].i); }\n          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n    }\n\n    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n\n    objects.forEach(function(o) {\n      if (o.type === \"Polygon\") register(o.arcs);\n      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function(ring) {\n        ring.forEach(function(arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function exterior(ring) {\n      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n    }\n\n    polygons.forEach(function(polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n\n    polygons.forEach(function(polygon) {\n      delete polygon._;\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function(polygons) {\n        var arcs = [];\n\n        // Extract the exterior (unique) arcs.\n        polygons.forEach(function(polygon) {\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        });\n\n        // Stitch the arcs into one or more rings.\n        arcs = stitchArcs(topology, arcs);\n\n        // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // this exterior ring has the same winding order\n        // as any exterior ring in the original polygons.\n        if ((n = arcs.length) > 1) {\n          var sgn = exterior(polygons[0][0]);\n          for (var i = 0, t; i < n; ++i) {\n            if (sgn === exterior(arcs[i])) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n              break;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function featureOrCollection(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function(o) { return feature(topology, o); })\n    } : feature(topology, o);\n  }\n\n  function feature(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute = transformAbsolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute(p, k);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n      while (points.length < 4) points.push(points[0].slice());\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n          : null;\n    }\n\n    var geometryType = {\n      Point: function(o) { return point(o.coordinates); },\n      MultiPoint: function(o) { return o.coordinates.map(point); },\n      LineString: function(o) { return line(o.arcs); },\n      MultiLineString: function(o) { return o.arcs.map(line); },\n      Polygon: function(o) { return polygon(o.arcs); },\n      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n    };\n\n    return geometry(o);\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  function bisect(a, x) {\n    var lo = 0, hi = a.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {}, // arc index -> array of object indexes\n        neighbors = objects.map(function() { return []; });\n\n    function line(arcs, i) {\n      arcs.forEach(function(a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);\n        else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function(arc) { line(arc, i); });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n    };\n\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j], ik = indexes[k], n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute = transformAbsolute(topology.transform),\n        relative = transformRelative(topology.transform),\n        heap = minAreaHeap(),\n        maxArea = 0,\n        triangle;\n\n    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n    topology.arcs.forEach(function(arc) {\n      var triangles = [];\n\n      arc.forEach(absolute);\n\n      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      // Always keep the arc endpoints!\n      arc[0][2] = arc[n][2] = Infinity;\n\n      for (var i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n    });\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    topology.arcs.forEach(function(arc) {\n      arc.forEach(relative);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  };\n\n  function cartesianRingArea(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area * .5;\n  }\n\n  function cartesianTriangleArea(triangle) {\n    var a = triangle[0], b = triangle[1], c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function(object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function() {\n      if (size <= 0) return;\n      var removed = array[0], object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function(removed) {\n      var i = removed._, object;\n      if (array[i] !== removed) return; // invalid request\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = ((i + 1) >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = (i + 1) << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function transformAbsolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function transformRelative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = (point[0] - dx) / kx | 0,\n          y1 = (point[1] - dy) / ky | 0;\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function noop() {}\n\n  if (typeof define === \"function\" && define.amd) define(topojson);\n  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n  else this.topojson = topojson;\n}();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/topojson.js\n// module id = 231\n// module chunks = 5 17","var type = require(\"./type\"),\n    stitch = require(\"./stitch\"),\n    systems = require(\"./coordinate-systems\"),\n    topologize = require(\"./topology/index\"),\n    delta = require(\"./delta\"),\n    geomify = require(\"./geomify\"),\n    prequantize = require(\"./pre-quantize\"),\n    postquantize = require(\"./post-quantize\"),\n    bounds = require(\"./bounds\"),\n    computeId = require(\"./compute-id\"),\n    transformProperties = require(\"./transform-properties\");\n\nvar ε = 1e-6;\n\nmodule.exports = function(objects, options) {\n  var Q0 = 1e4, // precision of pre-quantization\n      Q1 = 1e4, // precision of post-quantization (must be divisor of Q0)\n      id = function(d) { return d.id; }, // function to compute object id\n      propertyTransform = function() {}, // function to transform properties\n      transform,\n      minimumArea = 0,\n      stitchPoles = true,\n      verbose = false,\n      system = null;\n\n  if (options)\n    \"verbose\" in options && (verbose = !!options[\"verbose\"]),\n    \"stitch-poles\" in options && (stitchPoles = !!options[\"stitch-poles\"]),\n    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]),\n    \"minimum-area\" in options && (minimumArea = +options[\"minimum-area\"]),\n    \"quantization\" in options && (Q0 = Q1 = +options[\"quantization\"]),\n    \"pre-quantization\" in options && (Q0 = +options[\"pre-quantization\"]),\n    \"post-quantization\" in options && (Q1 = +options[\"post-quantization\"]),\n    \"id\" in options && (id = options[\"id\"]),\n    \"property-transform\" in options && (propertyTransform = options[\"property-transform\"]);\n\n  if (Q0 / Q1 % 1) throw new Error(\"post-quantization is not a divisor of pre-quantization\");\n  if (Q0 && !Q1) throw new Error(\"post-quantization is required when input is already quantized\");\n\n  // Compute the new feature id and transform properties.\n  computeId(objects, id);\n  transformProperties(objects, propertyTransform);\n\n  // Convert to geometry objects.\n  geomify(objects);\n\n  // Compute initial bounding box.\n  var bbox = bounds(objects);\n\n  // For automatic coordinate system determination, consider the bounding box.\n  var oversize = bbox[0] < -180 - ε\n      || bbox[1] < -90 - ε\n      || bbox[2] > 180 + ε\n      || bbox[3] > 90 + ε;\n  if (!system) {\n    system = systems[oversize ? \"cartesian\" : \"spherical\"];\n    if (options) options[\"coordinate-system\"] = system.name;\n  }\n\n  if (system === systems.spherical) {\n    if (oversize) throw new Error(\"spherical coordinates outside of [±180°, ±90°]\");\n\n    // When near the spherical coordinate limits, clamp to nice round values.\n    // This avoids quantized coordinates that are slightly outside the limits.\n    if (bbox[0] < -180 + ε) bbox[0] = -180;\n    if (bbox[1] < -90 + ε) bbox[1] = -90;\n    if (bbox[2] > 180 - ε) bbox[2] = 180;\n    if (bbox[3] > 90 - ε) bbox[3] = 90;\n  }\n\n  if (verbose) {\n    console.warn(\"bounds: \" + bbox.join(\" \") + \" (\" + system.name + \")\");\n  }\n\n  // Pre-topology quantization.\n  if (Q0) {\n    transform = prequantize(objects, bbox, Q0, Q1);\n    if (verbose) {\n      console.warn(\"pre-quantization: \" + transform.scale.map(function(k) { return system.formatDistance(k); }).join(\" \"));\n    }\n  }\n\n  // Remove any antimeridian cuts and restitch.\n  if (system === systems.spherical && stitchPoles) {\n    stitch(objects, transform);\n  }\n\n  // Compute the topology.\n  var topology = topologize(objects);\n  if (Q0) topology.transform = transform;\n  topology.bbox = bbox;\n  if (verbose) {\n    console.warn(\"topology: \" + topology.arcs.length + \" arcs, \" + topology.arcs.reduce(function(p, v) { return p + v.length; }, 0) + \" points\");\n  }\n\n  // Post-topology quantization.\n  if (Q1 && Q1 !== Q0) {\n    postquantize(topology, Q0, Q1);\n    transform = topology.transform;\n    if (verbose) {\n      console.warn(\"post-quantization: \" + transform.scale.map(function(k) { return system.formatDistance(k); }).join(\" \"));\n    }\n  }\n\n  // Convert to delta-encoding.\n  if (Q1) {\n    delta(topology);\n  }\n\n  return topology;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology.js\n// module id = 232\n// module chunks = 5 17","module.exports = function(types) {\n  for (var type in typeDefaults) {\n    if (!(type in types)) {\n      types[type] = typeDefaults[type];\n    }\n  }\n  types.defaults = typeDefaults;\n  return types;\n};\n\nvar typeDefaults = {\n\n  Feature: function(feature) {\n    if (feature.geometry) this.geometry(feature.geometry);\n  },\n\n  FeatureCollection: function(collection) {\n    var features = collection.features, i = -1, n = features.length;\n    while (++i < n) this.Feature(features[i]);\n  },\n\n  GeometryCollection: function(collection) {\n    var geometries = collection.geometries, i = -1, n = geometries.length;\n    while (++i < n) this.geometry(geometries[i]);\n  },\n\n  LineString: function(lineString) {\n    this.line(lineString.coordinates);\n  },\n\n  MultiLineString: function(multiLineString) {\n    var coordinates = multiLineString.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) this.line(coordinates[i]);\n  },\n\n  MultiPoint: function(multiPoint) {\n    var coordinates = multiPoint.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) this.point(coordinates[i]);\n  },\n\n  MultiPolygon: function(multiPolygon) {\n    var coordinates = multiPolygon.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) this.polygon(coordinates[i]);\n  },\n\n  Point: function(point) {\n    this.point(point.coordinates);\n  },\n\n  Polygon: function(polygon) {\n    this.polygon(polygon.coordinates);\n  },\n\n  object: function(object) {\n    return object == null ? null\n        : typeObjects.hasOwnProperty(object.type) ? this[object.type](object)\n        : this.geometry(object);\n  },\n\n  geometry: function(geometry) {\n    return geometry == null ? null\n        : typeGeometries.hasOwnProperty(geometry.type) ? this[geometry.type](geometry)\n        : null;\n  },\n\n  point: function() {},\n\n  line: function(coordinates) {\n    var i = -1, n = coordinates.length;\n    while (++i < n) this.point(coordinates[i]);\n  },\n\n  polygon: function(coordinates) {\n    var i = -1, n = coordinates.length;\n    while (++i < n) this.line(coordinates[i]);\n  }\n};\n\nvar typeGeometries = {\n  LineString: 1,\n  MultiLineString: 1,\n  MultiPoint: 1,\n  MultiPolygon: 1,\n  Point: 1,\n  Polygon: 1,\n  GeometryCollection: 1\n};\n\nvar typeObjects = {\n  Feature: 1,\n  FeatureCollection: 1\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/type.js\n// module id = 233\n// module chunks = 5 17","var type = require(\"./type\");\n\nmodule.exports = function(objects, transform) {\n  var ε = 1e-2,\n      x0 = -180, x0e = x0 + ε,\n      x1 = 180, x1e = x1 - ε,\n      y0 = -90, y0e = y0 + ε,\n      y1 = 90, y1e = y1 - ε;\n\n  if (transform) {\n    var kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n\n    x0 = Math.round((x0 - dx) / kx);\n    x1 = Math.round((x1 - dx) / kx);\n    y0 = Math.round((y0 - dy) / ky);\n    y1 = Math.round((y1 - dy) / ky);\n    x0e = Math.round((x0e - dx) / kx);\n    x1e = Math.round((x1e - dx) / kx);\n    y0e = Math.round((y0e - dy) / ky);\n    y1e = Math.round((y1e - dy) / ky);\n  }\n\n  function normalizePoint(y) {\n    return y <= y0e ? [0, y0] // south pole\n        : y >= y1e ? [0, y1] // north pole\n        : [x0, y]; // antimeridian\n  }\n\n  function stitchPolygons(polygons) {\n    var fragments = [];\n\n    for (var p = 0, np = polygons.length; p < np; ++p) {\n      var polygon = polygons[p];\n\n      // For each ring, detect where it crosses the antimeridian or pole.\n      for (var j = 0, m = polygon.length; j < m; ++j) {\n        var ring = polygon[j];\n        ring.polygon = polygon;\n\n        // By default, assume that this ring doesn’t need any stitching.\n        fragments.push(ring);\n\n        for (var i = 0, n = ring.length; i < n; ++i) {\n          var point = ring[i],\n              x = point[0],\n              y = point[1];\n\n          // If this is an antimeridian or polar point…\n          if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n\n            // Advance through any antimeridian or polar points…\n            for (var k = i + 1; k < n; ++k) {\n              var pointk = ring[k],\n                  xk = pointk[0],\n                  yk = pointk[1];\n              if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n            }\n\n            // If this was just a single antimeridian or polar point,\n            // we don’t need to cut this ring into a fragment;\n            // we can just leave it as-is.\n            if (k === i + 1) continue;\n\n            // Otherwise, if this is not the first point in the ring,\n            // cut the current fragment so that it ends at the current point.\n            // The current point is also normalized for later joining.\n            if (i) {\n              var fragmentBefore = ring.slice(0, i + 1);\n              fragmentBefore.polygon = polygon;\n              fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n              fragments[fragments.length - 1] = fragmentBefore;\n            }\n\n            // If the ring started with an antimeridian fragment,\n            // we can ignore that fragment entirely.\n            else {\n              fragments.pop();\n            }\n\n            // If the remainder of the ring is an antimeridian fragment,\n            // move on to the next ring.\n            if (k >= n) break;\n\n            // Otherwise, add the remaining ring fragment and continue.\n            fragments.push(ring = ring.slice(k - 1));\n            ring[0] = normalizePoint(ring[0][1]);\n            ring.polygon = polygon;\n            i = -1;\n            n = ring.length;\n          }\n        }\n      }\n      polygon.length = 0;\n    }\n\n    // Now stitch the fragments back together into rings.\n    // To connect the fragments start-to-end, create a simple index by end.\n    var fragmentByStart = {},\n        fragmentByEnd = {};\n\n    // For each fragment…\n    for (var i = 0, n = fragments.length; i < n; ++i) {\n      var fragment = fragments[i],\n          start = fragment[0],\n          end = fragment[fragment.length - 1];\n\n      // If this fragment is closed, add it as a standalone ring.\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment);\n        fragments[i] = null;\n        continue;\n      }\n\n      fragment.index = i;\n      fragmentByStart[start] = fragmentByEnd[end] = fragment;\n    }\n\n    // For each open fragment…\n    for (var i = 0; i < n; ++i) {\n      var fragment = fragments[i];\n      if (fragment) {\n\n        var start = fragment[0],\n            end = fragment[fragment.length - 1],\n            startFragment = fragmentByEnd[start],\n            endFragment = fragmentByStart[end];\n\n        delete fragmentByStart[start];\n        delete fragmentByEnd[end];\n\n        // If this fragment is closed, add it as a standalone ring.\n        if (start[0] === end[0] && start[1] === end[1]) {\n          fragment.polygon.push(fragment);\n          continue;\n        }\n\n        if (startFragment) {\n          delete fragmentByEnd[start];\n          delete fragmentByStart[startFragment[0]];\n          startFragment.pop(); // drop the shared coordinate\n          fragments[startFragment.index] = null;\n          fragment = startFragment.concat(fragment);\n          fragment.polygon = startFragment.polygon;\n\n          if (startFragment === endFragment) {\n            // Connect both ends to this single fragment to create a ring.\n            fragment.polygon.push(fragment);\n          } else {\n            fragment.index = n++;\n            fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n          }\n        } else if (endFragment) {\n          delete fragmentByStart[end];\n          delete fragmentByEnd[endFragment[endFragment.length - 1]];\n          fragment.pop(); // drop the shared coordinate\n          fragment = fragment.concat(endFragment);\n          fragment.polygon = endFragment.polygon;\n          fragment.index = n++;\n          fragments[endFragment.index] = null;\n          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n        } else {\n          fragment.push(fragment[0]); // close ring\n          fragment.polygon.push(fragment);\n        }\n      }\n    }\n    // TODO remove empty polygons.\n  }\n\n  var stitch = type({\n    Polygon: function(polygon) { stitchPolygons([polygon.coordinates]); },\n    MultiPolygon: function(multiPolygon) { stitchPolygons(multiPolygon.coordinates); }\n  });\n\n  for (var key in objects) {\n    stitch.object(objects[key]);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/stitch.js\n// module id = 234\n// module chunks = 5 17","module.exports = {\n  cartesian: require(\"./cartesian\"),\n  spherical: require(\"./spherical\")\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/coordinate-systems.js\n// module id = 235\n// module chunks = 5 17","exports.name = \"cartesian\";\nexports.formatDistance = formatDistance;\nexports.ringArea = ringArea;\nexports.absoluteArea = Math.abs;\nexports.triangleArea = triangleArea;\nexports.distance = distance;\n\nfunction formatDistance(d) {\n  return d.toString();\n}\n\nfunction ringArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area * .5;\n}\n\nfunction triangleArea(triangle) {\n  return Math.abs(\n    (triangle[0][0] - triangle[2][0]) * (triangle[1][1] - triangle[0][1])\n    - (triangle[0][0] - triangle[1][0]) * (triangle[2][1] - triangle[0][1])\n  );\n}\n\nfunction distance(x0, y0, x1, y1) {\n  var dx = x0 - x1, dy = y0 - y1;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/cartesian.js\n// module id = 236\n// module chunks = 5 17","var π = Math.PI,\n    π_4 = π / 4,\n    radians = π / 180;\n\nexports.name = \"spherical\";\nexports.formatDistance = formatDistance;\nexports.ringArea = ringArea;\nexports.absoluteArea = absoluteArea;\nexports.triangleArea = triangleArea;\nexports.distance = haversinDistance; // XXX why two implementations?\n\nfunction formatDistance(k) {\n  var km = k * radians * 6371;\n  return (km > 1 ? km.toFixed(3) + \"km\" : (km * 1000).toPrecision(3) + \"m\") + \" (\" + k.toPrecision(3) + \"°)\";\n}\n\nfunction ringArea(ring) {\n  if (!ring.length) return 0;\n  var area = 0,\n      p = ring[0],\n      λ = p[0] * radians,\n      φ = p[1] * radians / 2 + π_4,\n      λ0 = λ,\n      cosφ0 = Math.cos(φ),\n      sinφ0 = Math.sin(φ);\n\n  for (var i = 1, n = ring.length; i < n; ++i) {\n    p = ring[i], λ = p[0] * radians, φ = p[1] * radians / 2 + π_4;\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    var dλ = λ - λ0,\n        cosφ = Math.cos(φ),\n        sinφ = Math.sin(φ),\n        k = sinφ0 * sinφ,\n        u = cosφ0 * cosφ + k * Math.cos(dλ),\n        v = k * Math.sin(dλ);\n    area += Math.atan2(v, u);\n\n    // Advance the previous point.\n    λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n  }\n\n  return 2 * (area > π ? area - 2 * π : area < -π ? area + 2 * π : area);\n}\n\nfunction absoluteArea(a) {\n  return a < 0 ? a + 4 * π : a;\n}\n\nfunction triangleArea(t) {\n  var a = distance(t[0], t[1]),\n      b = distance(t[1], t[2]),\n      c = distance(t[2], t[0]),\n      s = (a + b + c) / 2;\n  return 4 * Math.atan(Math.sqrt(Math.max(0, Math.tan(s / 2) * Math.tan((s - a) / 2) * Math.tan((s - b) / 2) * Math.tan((s - c) / 2))));\n}\n\nfunction distance(a, b) {\n  var Δλ = (b[0] - a[0]) * radians,\n      sinΔλ = Math.sin(Δλ),\n      cosΔλ = Math.cos(Δλ),\n      sinφ0 = Math.sin(a[1] * radians),\n      cosφ0 = Math.cos(a[1] * radians),\n      sinφ1 = Math.sin(b[1] * radians),\n      cosφ1 = Math.cos(b[1] * radians),\n      _;\n  return Math.atan2(Math.sqrt((_ = cosφ1 * sinΔλ) * _ + (_ = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * _), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n}\n\nfunction haversinDistance(x0, y0, x1, y1) {\n  x0 *= radians, y0 *= radians, x1 *= radians, y1 *= radians;\n  return 2 * Math.asin(Math.sqrt(haversin(y1 - y0) + Math.cos(y0) * Math.cos(y1) * haversin(x1 - x0)));\n}\n\nfunction haversin(x) {\n  return (x = Math.sin(x / 2)) * x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/spherical.js\n// module id = 237\n// module chunks = 5 17","var hashmap = require(\"./hashmap\"),\n    extract = require(\"./extract\"),\n    cut = require(\"./cut\"),\n    dedup = require(\"./dedup\");\n\n// Constructs the TopoJSON Topology for the specified hash of geometries.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nmodule.exports = function(objects) {\n  var topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/index.js\n// module id = 238\n// module chunks = 5 17","module.exports = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1,\n      free = size;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    --free;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    --free;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/hashmap.js\n// module id = 239\n// module chunks = 5 17","// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nmodule.exports = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.coordinates); delete o.coordinates; },\n    MultiLineString: function(o) { o.arcs = o.coordinates.map(extractLine); delete o.coordinates; },\n    Polygon: function(o) { o.arcs = o.coordinates.map(extractRing); delete o.coordinates; },\n    MultiPolygon: function(o) { o.arcs = o.coordinates.map(extractMultiRing); delete o.coordinates; }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/extract.js\n// module id = 240\n// module chunks = 5 17","var join = require(\"./join\");\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nmodule.exports = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings;\n\n  for (var i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        var next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (var i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          var next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\n\nfunction reverse(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/cut.js\n// module id = 241\n// module chunks = 5 17","var hashset = require(\"./hashset\"),\n    hashmap = require(\"./hashmap\"),\n    hashPoint = require(\"./point-hash\"),\n    equalPoint = require(\"./point-equal\");\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nmodule.exports = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0; // upper bound on number of junctions\n\n  for (var i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (var i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1],\n        previousIndex,\n        currentIndex = indexes[lineStart],\n        nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (var i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (var i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1],\n        previousIndex = indexes[ringEnd - 1],\n        currentIndex = indexes[ringStart - 1],\n        nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint);\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (var i = 0, n = coordinates.length, j; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/join.js\n// module id = 242\n// module chunks = 5 17","module.exports = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1,\n      free = size;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    --free;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/hashset.js\n// module id = 243\n// module chunks = 5 17","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nmodule.exports = function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/point-hash.js\n// module id = 244\n// module chunks = 5 17","module.exports = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/point-equal.js\n// module id = 245\n// module chunks = 5 17","var join = require(\"./join\"),\n    hashmap = require(\"./hashmap\"),\n    hashPoint = require(\"./point-hash\"),\n    equalPoint = require(\"./point-equal\");\n\n// Given a cut topology, combines duplicate arcs.\nmodule.exports = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      arcCount = lines.length + rings.length;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (var i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (var i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (var i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (var i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs,\n        endArcs;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (var i = 0, n = startArcs.length; i < n; ++i) {\n        var startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (var i = 0, n = endArcs.length; i < n; ++i) {\n        var endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (var i = 0, n = endArcs.length; i < n; ++i) {\n        var endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (var i = 0, n = endArcs.length; i < n; ++i) {\n        var endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/topology/dedup.js\n// module id = 246\n// module chunks = 5 17","// Given a TopoJSON topology in absolute (quantized) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given topology!\nmodule.exports = function(topology) {\n  var arcs = topology.arcs,\n      i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n    while (++j < m) {\n      point = arc[j];\n      x1 = point[0];\n      y1 = point[1];\n      arc[j] = [x1 - x0, y1 - y0];\n      x0 = x1;\n      y0 = y1;\n    }\n  }\n\n  return topology;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/delta.js\n// module id = 247\n// module chunks = 5 17","// Given a hash of GeoJSON objects, replaces Features with geometry objects.\n// This is a destructive operation that modifies the input objects!\nmodule.exports = function(objects) {\n\n  function geomifyObject(object) {\n    return (object && geomifyObjectType.hasOwnProperty(object.type)\n        ? geomifyObjectType[object.type]\n        : geomifyGeometry)(object);\n  }\n\n  function geomifyFeature(feature) {\n    var geometry = feature.geometry;\n    if (geometry == null) {\n      feature.type = null;\n    } else {\n      geomifyGeometry(geometry);\n      feature.type = geometry.type;\n      if (geometry.geometries) feature.geometries = geometry.geometries;\n      else if (geometry.coordinates) feature.coordinates = geometry.coordinates;\n    }\n    delete feature.geometry;\n    return feature;\n  }\n\n  function geomifyGeometry(geometry) {\n    if (!geometry) return {type: null};\n    if (geomifyGeometryType.hasOwnProperty(geometry.type)) geomifyGeometryType[geometry.type](geometry);\n    return geometry;\n  }\n\n  var geomifyObjectType = {\n    Feature: geomifyFeature,\n    FeatureCollection: function(collection) {\n      collection.type = \"GeometryCollection\";\n      collection.geometries = collection.features;\n      collection.features.forEach(geomifyFeature);\n      delete collection.features;\n      return collection;\n    }\n  };\n\n  var geomifyGeometryType = {\n    GeometryCollection: function(o) {\n      var geometries = o.geometries, i = -1, n = geometries.length;\n      while (++i < n) geometries[i] = geomifyGeometry(geometries[i]);\n    },\n    MultiPoint: function(o) {\n      if (!o.coordinates.length) {\n        o.type = null;\n        delete o.coordinates;\n      } else if (o.coordinates.length < 2) {\n        o.type = \"Point\";\n        o.coordinates = o.coordinates[0];\n      }\n    },\n    LineString: function(o) {\n      if (!o.coordinates.length) {\n        o.type = null;\n        delete o.coordinates;\n      }\n    },\n    MultiLineString: function(o) {\n      for (var lines = o.coordinates, i = 0, N = 0, n = lines.length; i < n; ++i) {\n        var line = lines[i];\n        if (line.length) lines[N++] = line;\n      }\n      if (!N) {\n        o.type = null;\n        delete o.coordinates;\n      } else if (N < 2) {\n        o.type = \"LineString\";\n        o.coordinates = lines[0];\n      } else {\n        o.coordinates.length = N;\n      }\n    },\n    Polygon: function(o) {\n      for (var rings = o.coordinates, i = 0, N = 0, n = rings.length; i < n; ++i) {\n        var ring = rings[i];\n        if (ring.length) rings[N++] = ring;\n      }\n      if (!N) {\n        o.type = null;\n        delete o.coordinates;\n      } else {\n        o.coordinates.length = N;\n      }\n    },\n    MultiPolygon: function(o) {\n      for (var polygons = o.coordinates, j = 0, M = 0, m = polygons.length; j < m; ++j) {\n        for (var rings = polygons[j], i = 0, N = 0, n = rings.length; i < n; ++i) {\n          var ring = rings[i];\n          if (ring.length) rings[N++] = ring;\n        }\n        if (N) {\n          rings.length = N;\n          polygons[M++] = rings;\n        }\n      }\n      if (!M) {\n        o.type = null;\n        delete o.coordinates;\n      } else if (M < 2) {\n        o.type = \"Polygon\";\n        o.coordinates = polygons[0];\n      } else {\n        polygons.length = M;\n      }\n    }\n  };\n\n  for (var key in objects) {\n    objects[key] = geomifyObject(objects[key]);\n  }\n\n  return objects;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/geomify.js\n// module id = 248\n// module chunks = 5 17","var quantize = require(\"./quantize\");\n\nmodule.exports = function(objects, bbox, Q0, Q1) {\n  if (arguments.length < 4) Q1 = Q0;\n\n  var x0 = isFinite(bbox[0]) ? bbox[0] : 0,\n      y0 = isFinite(bbox[1]) ? bbox[1] : 0,\n      x1 = isFinite(bbox[2]) ? bbox[2] : 0,\n      y1 = isFinite(bbox[3]) ? bbox[3] : 0,\n      kx = x1 - x0 ? (Q1 - 1) / (x1 - x0) * Q0 / Q1 : 1,\n      ky = y1 - y0 ? (Q1 - 1) / (y1 - y0) * Q0 / Q1 : 1,\n      q = quantize(-x0, -y0, kx, ky);\n\n  function quantizeGeometry(geometry) {\n    if (geometry && quantizeGeometryType.hasOwnProperty(geometry.type)) quantizeGeometryType[geometry.type](geometry);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { q.point(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(q.point); },\n    LineString: function(o) {\n      var line = o.coordinates;\n      q.line(line);\n      if (line.length < 2) line[1] = line[0]; // must have 2+\n    },\n    MultiLineString: function(o) {\n      for (var lines = o.coordinates, i = 0, n = lines.length; i < n; ++i) {\n        var line = lines[i];\n        q.line(line);\n        if (line.length < 2) line[1] = line[0]; // must have 2+\n      }\n    },\n    Polygon: function(o) {\n      for (var rings = o.coordinates, i = 0, n = rings.length; i < n; ++i) {\n        var ring = rings[i];\n        q.line(ring);\n        while (ring.length < 4) ring.push(ring[0]); // must have 4+\n      }\n    },\n    MultiPolygon: function(o) {\n      for (var polygons = o.coordinates, i = 0, n = polygons.length; i < n; ++i) {\n        for (var rings = polygons[i], j = 0, m = rings.length; j < m; ++j) {\n          var ring = rings[j];\n          q.line(ring);\n          while (ring.length < 4) ring.push(ring[0]); // must have 4+\n        }\n      }\n    }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return q.transform;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/pre-quantize.js\n// module id = 249\n// module chunks = 5 17","module.exports = function(dx, dy, kx, ky) {\n\n  function quantizePoint(coordinates) {\n    coordinates[0] = Math.round((coordinates[0] + dx) * kx);\n    coordinates[1] = Math.round((coordinates[1] + dy) * ky);\n    return coordinates;\n  }\n\n  function quantizeLine(coordinates) {\n    var i = 0,\n        j = 1,\n        n = coordinates.length,\n        pi = quantizePoint(coordinates[0]),\n        pj,\n        px = pi[0],\n        py = pi[1],\n        x,\n        y;\n\n    while (++i < n) {\n      pi = quantizePoint(coordinates[i]);\n      x = pi[0];\n      y = pi[1];\n      if (x !== px || y !== py) { // skip coincident points\n        pj = coordinates[j++];\n        pj[0] = px = x;\n        pj[1] = py = y;\n      }\n    }\n\n    coordinates.length = j;\n  }\n\n  return {\n    point: quantizePoint,\n    line: quantizeLine,\n    transform: {\n      scale: [1 / kx, 1 / ky],\n      translate: [-dx, -dy]\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/quantize.js\n// module id = 250\n// module chunks = 5 17","var quantize = require(\"./quantize\");\n\nmodule.exports = function(topology, Q0, Q1) {\n  if (Q0) {\n    if (Q1 === Q0 || !topology.bbox.every(isFinite)) return topology;\n    var k = Q1 / Q0,\n        q = quantize(0, 0, k, k);\n\n    topology.transform.scale[0] /= k;\n    topology.transform.scale[1] /= k;\n  } else {\n    var bbox = topology.bbox,\n        x0 = isFinite(bbox[0]) ? bbox[0] : 0,\n        y0 = isFinite(bbox[1]) ? bbox[1] : 0,\n        x1 = isFinite(bbox[2]) ? bbox[2] : 0,\n        y1 = isFinite(bbox[3]) ? bbox[3] : 0,\n        kx = x1 - x0 ? (Q1 - 1) / (x1 - x0) : 1,\n        ky = y1 - y0 ? (Q1 - 1) / (y1 - y0) : 1,\n        q = quantize(-x0, -y0, kx, ky);\n\n    topology.transform = q.transform;\n  }\n\n  function quantizeGeometry(geometry) {\n    if (geometry && quantizeGeometryType.hasOwnProperty(geometry.type)) quantizeGeometryType[geometry.type](geometry);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { q.point(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(q.point); }\n  };\n\n  for (var key in topology.objects) {\n    quantizeGeometry(topology.objects[key]);\n  }\n\n  // XXX shared points are bad mmkay\n  topology.arcs = topology.arcs.map(function(arc) {\n    q.line(arc = arc.map(function(point) { return point.slice(); }));\n    if (arc.length < 2) arc.push(arc[0]); // arcs must have at least two points\n    return arc;\n  });\n\n  return topology;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/post-quantize.js\n// module id = 251\n// module chunks = 5 17","\n// Computes the bounding box of the specified hash of GeoJSON objects.\nmodule.exports = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.coordinates); },\n    MultiLineString: function(o) { o.coordinates.forEach(boundLine); },\n    Polygon: function(o) { o.coordinates.forEach(boundLine); },\n    MultiPolygon: function(o) { o.coordinates.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/bounds.js\n// module id = 252\n// module chunks = 5 17","// Given a hash of GeoJSON objects and an id function, invokes the id function\n// to compute a new id for each object that is a feature. The function is passed\n// the feature and is expected to return the new feature id, or null if the\n// feature should not have an id.\nmodule.exports = function(objects, id) {\n  if (arguments.length < 2) id = function(d) { return d.id; };\n\n  function idObject(object) {\n    if (object && idObjectType.hasOwnProperty(object.type)) idObjectType[object.type](object);\n  }\n\n  function idFeature(feature) {\n    var i = id(feature);\n    if (i == null) delete feature.id;\n    else feature.id = i;\n  }\n\n  var idObjectType = {\n    Feature: idFeature,\n    FeatureCollection: function(collection) { collection.features.forEach(idFeature); }\n  };\n\n  for (var key in objects) {\n    idObject(objects[key]);\n  }\n\n  return objects;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/compute-id.js\n// module id = 253\n// module chunks = 5 17","// Given a hash of GeoJSON objects, transforms any properties on features using\n// the specified transform function. The function is invoked for each existing\n// property on the current feature, being passed the new properties hash, the\n// property name, and the property value. The function is then expected to\n// assign a new value to the given property hash if the feature is to be\n// retained and return true. Or, to skip the property, do nothing and return\n// false. If no properties are propagated to the new properties hash, the\n// properties hash will be deleted from the current feature.\nmodule.exports = function(objects, propertyTransform) {\n  if (arguments.length < 2) propertyTransform = function() {};\n\n  function transformObject(object) {\n    if (object && transformObjectType.hasOwnProperty(object.type)) transformObjectType[object.type](object);\n  }\n\n  function transformFeature(feature) {\n    if (feature.properties) {\n      var properties0 = feature.properties,\n          properties1 = {},\n          empty = true;\n\n      for (var key0 in properties0) {\n        if (propertyTransform(properties1, key0, properties0[key0])) {\n          empty = false;\n        }\n      }\n\n      if (empty) delete feature.properties;\n      else feature.properties = properties1;\n    }\n  }\n\n  var transformObjectType = {\n    Feature: transformFeature,\n    FeatureCollection: function(collection) { collection.features.forEach(transformFeature); }\n  };\n\n  for (var key in objects) {\n    transformObject(objects[key]);\n  }\n\n  return objects;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/transform-properties.js\n// module id = 254\n// module chunks = 5 17","var topojson = require(\"../../\"),\n    systems = require(\"./coordinate-systems\");\n\nmodule.exports = function(topology, options) {\n  var minimumArea = 0,\n      retainProportion,\n      verbose = false,\n      system = null,\n      N = topology.arcs.reduce(function(p, v) { return p + v.length; }, 0),\n      M = 0;\n\n  if (options)\n    \"minimum-area\" in options && (minimumArea = +options[\"minimum-area\"]),\n    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]),\n    \"retain-proportion\" in options && (retainProportion = +options[\"retain-proportion\"]),\n    \"verbose\" in options && (verbose = !!options[\"verbose\"]);\n\n  topojson.presimplify(topology, system.triangleArea);\n\n  if (retainProportion) {\n    var areas = [];\n    topology.arcs.forEach(function(arc) {\n      arc.forEach(function(point) {\n        if (isFinite(point[2])) areas.push(point[2]); // ignore endpoints\n      });\n    });\n    options[\"minimum-area\"] = minimumArea = N ? areas.sort(function(a, b) { return b - a; })[Math.ceil((N - 1) * retainProportion)] : 0;\n    if (verbose) console.warn(\"simplification: effective minimum area \" + minimumArea.toPrecision(3));\n  }\n\n  topology.arcs.forEach(topology.transform ? function(arc) {\n    var dx = 0,\n        dy = 0, // accumulate removed points\n        i = -1,\n        j = -1,\n        n = arc.length,\n        source,\n        target;\n\n    while (++i < n) {\n      source = arc[i];\n      if (source[2] >= minimumArea) {\n        target = arc[++j];\n        target[0] = source[0] + dx;\n        target[1] = source[1] + dy;\n        dx = dy = 0;\n      } else {\n        dx += source[0];\n        dy += source[1];\n      }\n    }\n\n    arc.length = ++j;\n  } : function(arc) {\n    var i = -1,\n        j = -1,\n        n = arc.length,\n        point;\n\n    while (++i < n) {\n      point = arc[i];\n      if (point[2] >= minimumArea) {\n        arc[++j] = point;\n      }\n    }\n\n    arc.length = ++j;\n  });\n\n  // Remove computed area (z) for each point, and remove coincident points.\n  // This is done as a separate pass because some coordinates may be shared\n  // between arcs (such as the last point and first point of a cut line).\n  // If the entire arc is empty, retain at least two points (per spec).\n  topology.arcs.forEach(topology.transform ? function(arc) {\n    var i = 0,\n        j = 0,\n        n = arc.length,\n        p = arc[0];\n    p.length = 2;\n    while (++i < n) {\n      p = arc[i];\n      p.length = 2;\n      if (p[0] || p[1]) arc[++j] = p;\n    }\n    M += arc.length = (j || 1) + 1;\n  } : function(arc) {\n    var i = 0,\n        j = 0,\n        n = arc.length,\n        p = arc[0],\n        x0 = p[0],\n        y0 = p[1],\n        x1,\n        y1;\n    p.length = 2;\n    while (++i < n) {\n      p = arc[i], x1 = p[0], y1 = p[1];\n      p.length = 2;\n      if (x0 !== x1 || y0 !== y1) arc[++j] = p, x0 = x1, y0 = y1;\n    }\n    M += arc.length = (j || 1) + 1;\n  });\n\n  if (verbose) console.warn(\"simplification: retained \" + M + \" / \" + N + \" points (\" + Math.round((M / N) * 100) + \"%)\");\n\n  return topology;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/simplify.js\n// module id = 255\n// module chunks = 5 17","var type = require(\"./type\"),\n    systems = require(\"./coordinate-systems\"),\n    topojson = require(\"../../\");\n\nmodule.exports = function(object, options) {\n  if (object.type === \"Topology\") clockwiseTopology(object, options);\n  else clockwiseGeometry(object, options);\n};\n\nfunction clockwiseGeometry(object, options) {\n  var system = null;\n\n  if (options)\n    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]);\n\n  var clockwisePolygon = clockwisePolygonSystem(system.ringArea, reverse);\n\n  type({\n    LineString: noop,\n    MultiLineString: noop,\n    Point: noop,\n    MultiPoint: noop,\n    Polygon: function(polygon) { clockwisePolygon(polygon.coordinates); },\n    MultiPolygon: function(multiPolygon) { multiPolygon.coordinates.forEach(clockwisePolygon); }\n  }).object(object);\n\n  function reverse(array) { array.reverse(); }\n}\n\nfunction clockwiseTopology(topology, options) {\n  var system = null;\n\n  if (options)\n    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]);\n\n  var clockwisePolygon = clockwisePolygonSystem(ringArea, reverse);\n\n  var clockwise = type({\n    LineString: noop,\n    MultiLineString: noop,\n    Point: noop,\n    MultiPoint: noop,\n    Polygon: function(polygon) { clockwisePolygon(polygon.arcs); },\n    MultiPolygon: function(multiPolygon) { multiPolygon.arcs.forEach(clockwisePolygon); }\n  });\n\n  for (var key in topology.objects) {\n    clockwise.object(topology.objects[key]);\n  }\n\n  function ringArea(ring) {\n    return system.ringArea(topojson.feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0]);\n  }\n\n  // TODO It might be slightly more compact to reverse the arc.\n  function reverse(ring) {\n    var i = -1, n = ring.length;\n    ring.reverse();\n    while (++i < n) ring[i] = ~ring[i];\n  }\n};\n\nfunction clockwisePolygonSystem(ringArea, reverse) {\n  return function(rings) {\n    if (!(n = rings.length)) return;\n    var n,\n        areas = new Array(n),\n        max = -Infinity,\n        best,\n        area,\n        t;\n    // Find the largest absolute ring area; this should be the exterior ring.\n    for (var i = 0; i < n; ++i) {\n      var area = Math.abs(areas[i] = ringArea(rings[i]));\n      if (area > max) max = area, best = i;\n    }\n    // Ensure the largest ring appears first.\n    if (best) {\n      t = rings[best], rings[best] = rings[0], rings[0] = t;\n      t = areas[best], areas[best] = areas[0], areas[0] = t;\n    }\n    if (areas[0] < 0) reverse(rings[0]);\n    for (var i = 1; i < n; ++i) {\n      if (areas[i] > 0) reverse(rings[i]);\n    }\n  };\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/clockwise.js\n// module id = 256\n// module chunks = 5 17","var type = require(\"./type\"),\n    prune = require(\"./prune\"),\n    clockwise = require(\"./clockwise\"),\n    systems = require(\"./coordinate-systems\"),\n    topojson = require(\"../../\");\n\nmodule.exports = function(topology, options) {\n  var system = null,\n      forceClockwise = true, // force exterior rings to be clockwise?\n      preserveAttached = true, // e.g., remove islands but not small counties\n      preserveRing = preserveNone,\n      minimumArea;\n\n  if (options)\n    \"coordinate-system\" in options && (system = systems[options[\"coordinate-system\"]]),\n    \"minimum-area\" in options && (minimumArea = +options[\"minimum-area\"]),\n    \"preserve-attached\" in options && (preserveAttached = !!options[\"preserve-attached\"]),\n    \"force-clockwise\" in options && (forceClockwise = !!options[\"force-clockwise\"]);\n\n  if (forceClockwise) clockwise(topology, options); // deprecated; for backwards-compatibility\n\n  if (!(minimumArea > 0)) minimumArea = Number.MIN_VALUE;\n\n  if (preserveAttached) {\n    var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n        ringIndex = 0;\n\n    var checkAttachment = type({\n      LineString: noop,\n      MultiLineString: noop,\n      Point: noop,\n      MultiPoint: noop,\n      MultiPolygon: function(multiPolygon) {\n        var arcs = multiPolygon.arcs, i = -1, n = arcs.length;\n        while (++i < n) this.polygon(arcs[i]);\n      },\n      Polygon: function(polygon) {\n        this.polygon(polygon.arcs);\n      },\n      polygon: function(arcs) {\n        for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n          for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n            var arc = ring[j];\n            if (arc < 0) arc = ~arc;\n            var uniqueRing = uniqueRingByArc[arc];\n            if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n            else uniqueRingByArc[arc] = ringIndex;\n          }\n        }\n      }\n    });\n\n    preserveRing = function(ring) {\n      for (var j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n          return true;\n        }\n      }\n    };\n\n    for (var key in topology.objects) {\n      checkAttachment.object(topology.objects[key]);\n    }\n  }\n\n  var filter = type({\n    LineString: noop, // TODO remove empty lines\n    MultiLineString: noop,\n    Point: noop,\n    MultiPoint: noop,\n    Polygon: function(polygon) {\n      polygon.arcs = filterPolygon(polygon.arcs);\n      if (!polygon.arcs || !polygon.arcs.length) {\n        polygon.type = null;\n        delete polygon.arcs;\n      }\n    },\n    MultiPolygon: function(multiPolygon) {\n      multiPolygon.arcs = multiPolygon.arcs\n          .map(filterPolygon)\n          .filter(function(polygon) { return polygon && polygon.length; });\n      if (!multiPolygon.arcs.length) {\n        multiPolygon.type = null;\n        delete multiPolygon.arcs;\n      }\n    },\n    GeometryCollection: function(collection) {\n      this.defaults.GeometryCollection.call(this, collection);\n      collection.geometries = collection.geometries.filter(function(geometry) { return geometry.type != null; });\n      if (!collection.geometries.length) {\n        collection.type = null;\n        delete collection.geometries;\n      }\n    }\n  });\n\n  for (var key in topology.objects) {\n    filter.object(topology.objects[key]);\n  }\n\n  prune(topology, options);\n\n  function filterPolygon(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs.shift()].concat(arcs.filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return preserveRing(ring) || system.absoluteArea(ringArea(ring)) >= minimumArea;\n  }\n\n  function filterInteriorRing(ring) {\n    return preserveRing(ring) || system.absoluteArea(-ringArea(ring)) >= minimumArea;\n  }\n\n  function ringArea(ring) {\n    return system.ringArea(topojson.feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0]);\n  }\n};\n\nfunction noop() {}\n\nfunction preserveNone() {\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/filter.js\n// module id = 257\n// module chunks = 5 17","module.exports = function(topology, options) {\n  var verbose = false,\n      objects = topology.objects,\n      oldArcs = topology.arcs,\n      oldArcCount = oldArcs.length,\n      newArcs = topology.arcs = [],\n      newArcCount = 0,\n      newIndexByOldIndex = new Array(oldArcs.length);\n\n  if (options)\n    \"verbose\" in options && (verbose = !!options[\"verbose\"]);\n\n  function pruneGeometry(geometry) {\n    if (geometry && pruneGeometryType.hasOwnProperty(geometry.type)) pruneGeometryType[geometry.type](geometry);\n  }\n\n  var pruneGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(pruneGeometry); },\n    LineString: function(o) { pruneArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(pruneArcs); },\n    Polygon: function(o) { o.arcs.forEach(pruneArcs); },\n    MultiPolygon: function(o) { o.arcs.forEach(pruneMultiArcs); }\n  };\n\n  function pruneArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      var oldIndex = arcs[i],\n          oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true),\n          newIndex;\n\n      // If this is the first instance of this arc,\n      // record it under its new index.\n      if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n        newIndexByOldIndex[oldIndex] = newIndex = newArcCount++;\n        newArcs[newIndex] = oldArcs[oldIndex];\n      }\n\n      arcs[i] = oldReverse ? ~newIndex : newIndex;\n    }\n  }\n\n  function pruneMultiArcs(arcs) {\n    arcs.forEach(pruneArcs);\n  }\n\n  for (var key in objects) {\n    pruneGeometry(objects[key]);\n  }\n\n  if (verbose) console.warn(\"prune: retained \" + newArcCount + \" / \" + oldArcCount + \" arcs (\" + Math.round(newArcCount / oldArcCount * 100) + \"%)\");\n\n  return topology;\n};\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/prune.js\n// module id = 258\n// module chunks = 5 17","var type = require(\"./type\"),\n    topojson = require(\"../../\");\n\nmodule.exports = function(topology, propertiesById) {\n  var bind = type({\n    geometry: function(geometry) {\n      var properties0 = geometry.properties,\n          properties1 = propertiesById[geometry.id];\n      if (properties1) {\n        if (properties0) for (var k in properties1) properties0[k] = properties1[k];\n        else for (var k in properties1) { geometry.properties = properties1; break; }\n      }\n      this.defaults.geometry.call(this, geometry);\n    },\n    LineString: noop,\n    MultiLineString: noop,\n    Point: noop,\n    MultiPoint: noop,\n    Polygon: noop,\n    MultiPolygon: noop\n  });\n\n  for (var key in topology.objects) {\n    bind.object(topology.objects[key]);\n  }\n};\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/bind.js\n// module id = 259\n// module chunks = 5 17","var type = require(\"./type\");\n\nmodule.exports = function(topology, options) {\n  var width,\n      height,\n      margin = 0,\n      invert = true;\n\n  if (options)\n    \"width\" in options && (width = +options[\"width\"]),\n    \"height\" in options && (height = +options[\"height\"]),\n    \"margin\" in options && (margin = +options[\"margin\"]),\n    \"invert\" in options && (invert = !!options[\"invert\"]);\n\n  var bx = topology.bbox,\n      dx = bx[2] - bx[0],\n      dy = bx[3] - bx[1],\n      cx = (bx[2] + bx[0]) / 2,\n      cy = (bx[3] + bx[1]) / 2,\n      kx;\n\n  width = Math.max(0, width - margin * 2);\n  height = Math.max(0, height - margin * 2);\n\n  if (width && height) {\n    kx = Math.min(width / dx, height / dy);\n  } else if (width) {\n    kx = width / dx;\n    height = kx * dy;\n  } else {\n    kx = height / dy;\n    width = kx * dx;\n  }\n\n  var ky = invert ? -kx : kx,\n      lt = scalePoint([bx[0], bx[1]]),\n      rb = scalePoint([bx[2], bx[3]]),\n      tx;\n\n  topology.bbox = invert\n      ? [lt[0], rb[1], rb[0], lt[1]]\n      : [lt[0], lt[1], rb[0], rb[1]];\n\n  function scalePoint(point) {\n    return [\n      point[0] * kx + (width / 2 - cx * kx) + margin,\n      point[1] * ky + (height / 2 - cy * ky) + margin\n    ];\n  }\n\n  if (tx = topology.transform) {\n    tx.scale[0] *= kx;\n    tx.scale[1] *= ky;\n    tx.translate[0] = width / 2 + margin - (cx - tx.translate[0]) * kx;\n    tx.translate[1] = height / 2 + margin - (cy - tx.translate[1]) * ky;\n  } else {\n    var scale = type({\n      LineString: noop,\n      MultiLineString: noop,\n      Point: function(point) { point.coordinates = scalePoint(point.coordinates); },\n      MultiPoint: function(multipoint) { multipoint.coordinates = multipoint.coordinates.map(scalePoint); },\n      Polygon: noop,\n      MultiPolygon: noop\n    });\n\n    for (var key in topology.objects) {\n      scale.object(topology.objects[key]);\n    }\n\n    topology.arcs = topology.arcs.map(function(arc) {\n      return arc.map(scalePoint);\n    });\n  }\n\n  return topology;\n};\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/lib/topojson/scale.js\n// module id = 260\n// module chunks = 5 17","(function() {\n  var svg;\n\n  //save off default references\n  var d3 = window.d3, topojson = window.topojson;\n  \n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        borderWidth: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': '60%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n    \n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n    \n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        //if fillKey - use that\n        //otherwise check 'fill'\n        //otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n        \n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            //as per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n    \n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  //plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path); \n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n            var originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            var destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n        layer.append(\"text\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .style(\"font-size\", (options.fontSize || 10) + 'px')\n          .style(\"font-family\", options.fontFamily || \"Verdana\")\n          .style(\"fill\", options.labelColor || \"#000\")\n          .text( d.id );\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, JSON.stringify );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n          }\n          if ( latLng ) return latLng[1];;\n        })\n        .attr('r', 0) //for animation purposes\n        .attr('data-info', function(d) {\n          return JSON.stringify(d);\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            //reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition().duration(400)\n          .attr('r', function ( datum ) {\n            return val(datum.radius, options.radius, datum);\n          });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n\n  }\n\n  //stolen from underscore.js\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    //set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    //add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    /* Add core plugins to this instance */\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    //append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var prefix = '-webkit-transform' in document.body.style ? '-webkit-' : '-moz-transform' in document.body.style ? '-moz-' : '-ms-transform' in document.body.style ? '-ms-' : '',\n          newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').style(prefix + 'transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    //save off in a closure\n    var self = this;\n    var options = self.options;\n\n    //set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(self, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    //if custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // if fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          //allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            //in the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              } \n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        //fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = {\n    \"type\": \"Topology\",\n    \"objects\": {\n        \"world\": {\n            \"type\": \"GeometryCollection\",\n            \"geometries\": [{\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Afghanistan\"\n                },\n                \"id\": \"AFG\",\n                \"arcs\": [\n                    [0, 1, 2, 3, 4, 5]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Angola\"\n                },\n                \"id\": \"AGO\",\n                \"arcs\": [\n                    [\n                        [6, 7, 8, 9]\n                    ],\n                    [\n                        [10, 11, 12]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Albania\"\n                },\n                \"id\": \"ALB\",\n                \"arcs\": [\n                    [13, 14, 15, 16, 17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Arab Emirates\"\n                },\n                \"id\": \"ARE\",\n                \"arcs\": [\n                    [18, 19, 20, 21, 22]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Argentina\"\n                },\n                \"id\": \"ARG\",\n                \"arcs\": [\n                    [\n                        [23, 24]\n                    ],\n                    [\n                        [25, 26, 27, 28, 29, 30]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Armenia\"\n                },\n                \"id\": \"ARM\",\n                \"arcs\": [\n                    [31, 32, 33, 34, 35]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Antarctica\"\n                },\n                \"id\": \"ATA\",\n                \"arcs\": [\n                    [\n                        [36]\n                    ],\n                    [\n                        [37]\n                    ],\n                    [\n                        [38]\n                    ],\n                    [\n                        [39]\n                    ],\n                    [\n                        [40]\n                    ],\n                    [\n                        [41]\n                    ],\n                    [\n                        [42]\n                    ],\n                    [\n                        [43]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Southern and Antarctic Lands\"\n                },\n                \"id\": \"ATF\",\n                \"arcs\": [\n                    [44]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Australia\"\n                },\n                \"id\": \"AUS\",\n                \"arcs\": [\n                    [\n                        [45]\n                    ],\n                    [\n                        [46]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Austria\"\n                },\n                \"id\": \"AUT\",\n                \"arcs\": [\n                    [47, 48, 49, 50, 51, 52, 53]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Azerbaijan\"\n                },\n                \"id\": \"AZE\",\n                \"arcs\": [\n                    [\n                        [54, -35]\n                    ],\n                    [\n                        [55, 56, -33, 57, 58]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burundi\"\n                },\n                \"id\": \"BDI\",\n                \"arcs\": [\n                    [59, 60, 61]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belgium\"\n                },\n                \"id\": \"BEL\",\n                \"arcs\": [\n                    [62, 63, 64, 65, 66]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Benin\"\n                },\n                \"id\": \"BEN\",\n                \"arcs\": [\n                    [67, 68, 69, 70, 71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burkina Faso\"\n                },\n                \"id\": \"BFA\",\n                \"arcs\": [\n                    [72, 73, 74, -70, 75, 76]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bangladesh\"\n                },\n                \"id\": \"BGD\",\n                \"arcs\": [\n                    [77, 78, 79]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bulgaria\"\n                },\n                \"id\": \"BGR\",\n                \"arcs\": [\n                    [80, 81, 82, 83, 84, 85]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"The Bahamas\"\n                },\n                \"id\": \"BHS\",\n                \"arcs\": [\n                    [\n                        [86]\n                    ],\n                    [\n                        [87]\n                    ],\n                    [\n                        [88]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bosnia and Herzegovina\"\n                },\n                \"id\": \"BIH\",\n                \"arcs\": [\n                    [89, 90, 91]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belarus\"\n                },\n                \"id\": \"BLR\",\n                \"arcs\": [\n                    [92, 93, 94, 95, 96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belize\"\n                },\n                \"id\": \"BLZ\",\n                \"arcs\": [\n                    [97, 98, 99]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bolivia\"\n                },\n                \"id\": \"BOL\",\n                \"arcs\": [\n                    [100, 101, 102, 103, -31]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brazil\"\n                },\n                \"id\": \"BRA\",\n                \"arcs\": [\n                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brunei\"\n                },\n                \"id\": \"BRN\",\n                \"arcs\": [\n                    [113, 114]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bhutan\"\n                },\n                \"id\": \"BTN\",\n                \"arcs\": [\n                    [115, 116]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Botswana\"\n                },\n                \"id\": \"BWA\",\n                \"arcs\": [\n                    [117, 118, 119, 120]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Central African Republic\"\n                },\n                \"id\": \"CAF\",\n                \"arcs\": [\n                    [121, 122, 123, 124, 125, 126, 127]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Canada\"\n                },\n                \"id\": \"CAN\",\n                \"arcs\": [\n                    [\n                        [128]\n                    ],\n                    [\n                        [129]\n                    ],\n                    [\n                        [130]\n                    ],\n                    [\n                        [131]\n                    ],\n                    [\n                        [132]\n                    ],\n                    [\n                        [133]\n                    ],\n                    [\n                        [134]\n                    ],\n                    [\n                        [135]\n                    ],\n                    [\n                        [136]\n                    ],\n                    [\n                        [137]\n                    ],\n                    [\n                        [138, 139, 140, 141]\n                    ],\n                    [\n                        [142]\n                    ],\n                    [\n                        [143]\n                    ],\n                    [\n                        [144]\n                    ],\n                    [\n                        [145]\n                    ],\n                    [\n                        [146]\n                    ],\n                    [\n                        [147]\n                    ],\n                    [\n                        [148]\n                    ],\n                    [\n                        [149]\n                    ],\n                    [\n                        [150]\n                    ],\n                    [\n                        [151]\n                    ],\n                    [\n                        [152]\n                    ],\n                    [\n                        [153]\n                    ],\n                    [\n                        [154]\n                    ],\n                    [\n                        [155]\n                    ],\n                    [\n                        [156]\n                    ],\n                    [\n                        [157]\n                    ],\n                    [\n                        [158]\n                    ],\n                    [\n                        [159]\n                    ],\n                    [\n                        [160]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Switzerland\"\n                },\n                \"id\": \"CHE\",\n                \"arcs\": [\n                    [-51, 161, 162, 163]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Chile\"\n                },\n                \"id\": \"CHL\",\n                \"arcs\": [\n                    [\n                        [-24, 164]\n                    ],\n                    [\n                        [-30, 165, 166, -101]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"China\"\n                },\n                \"id\": \"CHN\",\n                \"arcs\": [\n                    [\n                        [167]\n                    ],\n                    [\n                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ivory Coast\"\n                },\n                \"id\": \"CIV\",\n                \"arcs\": [\n                    [184, 185, 186, 187, -73, 188]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cameroon\"\n                },\n                \"id\": \"CMR\",\n                \"arcs\": [\n                    [189, 190, 191, 192, 193, 194, -128, 195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Democratic Republic of the Congo\"\n                },\n                \"id\": \"COD\",\n                \"arcs\": [\n                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of the Congo\"\n                },\n                \"id\": \"COG\",\n                \"arcs\": [\n                    [-12, 203, 204, -196, -127, -202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Colombia\"\n                },\n                \"id\": \"COL\",\n                \"arcs\": [\n                    [205, 206, 207, 208, 209, -107, 210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Costa Rica\"\n                },\n                \"id\": \"CRI\",\n                \"arcs\": [\n                    [211, 212, 213, 214]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cuba\"\n                },\n                \"id\": \"CUB\",\n                \"arcs\": [\n                    [215]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Northern Cyprus\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [216, 217]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cyprus\"\n                },\n                \"id\": \"CYP\",\n                \"arcs\": [\n                    [218, -218]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Czech Republic\"\n                },\n                \"id\": \"CZE\",\n                \"arcs\": [\n                    [-53, 219, 220, 221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Germany\"\n                },\n                \"id\": \"DEU\",\n                \"arcs\": [\n                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Djibouti\"\n                },\n                \"id\": \"DJI\",\n                \"arcs\": [\n                    [229, 230, 231, 232]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Denmark\"\n                },\n                \"id\": \"DNK\",\n                \"arcs\": [\n                    [\n                        [233]\n                    ],\n                    [\n                        [-229, 234]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Dominican Republic\"\n                },\n                \"id\": \"DOM\",\n                \"arcs\": [\n                    [235, 236]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Algeria\"\n                },\n                \"id\": \"DZA\",\n                \"arcs\": [\n                    [237, 238, 239, 240, 241, 242, 243, 244]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ecuador\"\n                },\n                \"id\": \"ECU\",\n                \"arcs\": [\n                    [245, -206, 246]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Egypt\"\n                },\n                \"id\": \"EGY\",\n                \"arcs\": [\n                    [247, 248, 249, 250, 251]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Eritrea\"\n                },\n                \"id\": \"ERI\",\n                \"arcs\": [\n                    [252, 253, 254, -233]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Spain\"\n                },\n                \"id\": \"ESP\",\n                \"arcs\": [\n                    [255, 256, 257, 258]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Estonia\"\n                },\n                \"id\": \"EST\",\n                \"arcs\": [\n                    [259, 260, 261]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ethiopia\"\n                },\n                \"id\": \"ETH\",\n                \"arcs\": [\n                    [-232, 262, 263, 264, 265, 266, 267, -253]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Finland\"\n                },\n                \"id\": \"FIN\",\n                \"arcs\": [\n                    [268, 269, 270, 271]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Fiji\"\n                },\n                \"id\": \"FJI\",\n                \"arcs\": [\n                    [\n                        [272]\n                    ],\n                    [\n                        [273, 274]\n                    ],\n                    [\n                        [275, -275]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Falkland Islands\"\n                },\n                \"id\": \"FLK\",\n                \"arcs\": [\n                    [276]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"France\"\n                },\n                \"id\": \"FRA\",\n                \"arcs\": [\n                    [\n                        [277]\n                    ],\n                    [\n                        [278, -225, -163, 279, 280, -257, 281, -66]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Guiana\"\n                },\n                \"id\": \"GUF\",\n                \"arcs\": [\n                    [282, 283, 284, 285, -111]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gabon\"\n                },\n                \"id\": \"GAB\",\n                \"arcs\": [\n                    [286, 287, -190, -205]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United Kingdom\"\n                },\n                \"id\": \"GBR\",\n                \"arcs\": [\n                    [\n                        [288, 289]\n                    ],\n                    [\n                        [290]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Georgia\"\n                },\n                \"id\": \"GEO\",\n                \"arcs\": [\n                    [291, 292, -58, -32, 293]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ghana\"\n                },\n                \"id\": \"GHA\",\n                \"arcs\": [\n                    [294, -189, -77, 295]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea\"\n                },\n                \"id\": \"GIN\",\n                \"arcs\": [\n                    [296, 297, 298, 299, 300, 301, -187]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gambia\"\n                },\n                \"id\": \"GMB\",\n                \"arcs\": [\n                    [302, 303]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea Bissau\"\n                },\n                \"id\": \"GNB\",\n                \"arcs\": [\n                    [304, 305, -300]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Equatorial Guinea\"\n                },\n                \"id\": \"GNQ\",\n                \"arcs\": [\n                    [306, -191, -288]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Greece\"\n                },\n                \"id\": \"GRC\",\n                \"arcs\": [\n                    [\n                        [307]\n                    ],\n                    [\n                        [308, -15, 309, -84, 310]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Greenland\"\n                },\n                \"id\": \"GRL\",\n                \"arcs\": [\n                    [311]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guatemala\"\n                },\n                \"id\": \"GTM\",\n                \"arcs\": [\n                    [312, 313, -100, 314, 315, 316]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guyana\"\n                },\n                \"id\": \"GUY\",\n                \"arcs\": [\n                    [317, 318, -109, 319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Honduras\"\n                },\n                \"id\": \"HND\",\n                \"arcs\": [\n                    [320, 321, -316, 322, 323]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Croatia\"\n                },\n                \"id\": \"HRV\",\n                \"arcs\": [\n                    [324, -92, 325, 326, 327, 328]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Haiti\"\n                },\n                \"id\": \"HTI\",\n                \"arcs\": [\n                    [-237, 329]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Hungary\"\n                },\n                \"id\": \"HUN\",\n                \"arcs\": [\n                    [-48, 330, 331, 332, 333, -329, 334]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Indonesia\"\n                },\n                \"id\": \"IDN\",\n                \"arcs\": [\n                    [\n                        [335]\n                    ],\n                    [\n                        [336, 337]\n                    ],\n                    [\n                        [338]\n                    ],\n                    [\n                        [339]\n                    ],\n                    [\n                        [340]\n                    ],\n                    [\n                        [341]\n                    ],\n                    [\n                        [342]\n                    ],\n                    [\n                        [343]\n                    ],\n                    [\n                        [344, 345]\n                    ],\n                    [\n                        [346]\n                    ],\n                    [\n                        [347]\n                    ],\n                    [\n                        [348, 349]\n                    ],\n                    [\n                        [350]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"India\"\n                },\n                \"id\": \"IND\",\n                \"arcs\": [\n                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ireland\"\n                },\n                \"id\": \"IRL\",\n                \"arcs\": [\n                    [355, -289]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iran\"\n                },\n                \"id\": \"IRN\",\n                \"arcs\": [\n                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iraq\"\n                },\n                \"id\": \"IRQ\",\n                \"arcs\": [\n                    [362, 363, 364, 365, 366, 367, -360]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iceland\"\n                },\n                \"id\": \"ISL\",\n                \"arcs\": [\n                    [368]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Israel\"\n                },\n                \"id\": \"ISR\",\n                \"arcs\": [\n                    [369, 370, 371, -252, 372, 373, 374]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Italy\"\n                },\n                \"id\": \"ITA\",\n                \"arcs\": [\n                    [\n                        [375]\n                    ],\n                    [\n                        [376]\n                    ],\n                    [\n                        [377, 378, -280, -162, -50]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jamaica\"\n                },\n                \"id\": \"JAM\",\n                \"arcs\": [\n                    [379]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jordan\"\n                },\n                \"id\": \"JOR\",\n                \"arcs\": [\n                    [-370, 380, -366, 381, 382, -372, 383]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Japan\"\n                },\n                \"id\": \"JPN\",\n                \"arcs\": [\n                    [\n                        [384]\n                    ],\n                    [\n                        [385]\n                    ],\n                    [\n                        [386]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kazakhstan\"\n                },\n                \"id\": \"KAZ\",\n                \"arcs\": [\n                    [387, 388, 389, 390, -181, 391]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kenya\"\n                },\n                \"id\": \"KEN\",\n                \"arcs\": [\n                    [392, 393, 394, 395, -265, 396]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kyrgyzstan\"\n                },\n                \"id\": \"KGZ\",\n                \"arcs\": [\n                    [-392, -180, 397, 398]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cambodia\"\n                },\n                \"id\": \"KHM\",\n                \"arcs\": [\n                    [399, 400, 401, 402]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Korea\"\n                },\n                \"id\": \"KOR\",\n                \"arcs\": [\n                    [403, 404]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kosovo\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-18, 405, 406, 407]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kuwait\"\n                },\n                \"id\": \"KWT\",\n                \"arcs\": [\n                    [408, 409, -364]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Laos\"\n                },\n                \"id\": \"LAO\",\n                \"arcs\": [\n                    [410, 411, -172, 412, -401]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lebanon\"\n                },\n                \"id\": \"LBN\",\n                \"arcs\": [\n                    [-374, 413, 414]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Liberia\"\n                },\n                \"id\": \"LBR\",\n                \"arcs\": [\n                    [415, 416, -297, -186]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Libya\"\n                },\n                \"id\": \"LBY\",\n                \"arcs\": [\n                    [417, -245, 418, 419, -250, 420, 421]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sri Lanka\"\n                },\n                \"id\": \"LKA\",\n                \"arcs\": [\n                    [422]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lesotho\"\n                },\n                \"id\": \"LSO\",\n                \"arcs\": [\n                    [423]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lithuania\"\n                },\n                \"id\": \"LTU\",\n                \"arcs\": [\n                    [424, 425, 426, -93, 427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Luxembourg\"\n                },\n                \"id\": \"LUX\",\n                \"arcs\": [\n                    [-226, -279, -65]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Latvia\"\n                },\n                \"id\": \"LVA\",\n                \"arcs\": [\n                    [428, -262, 429, -94, -427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Morocco\"\n                },\n                \"id\": \"MAR\",\n                \"arcs\": [\n                    [-242, 430, 431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Moldova\"\n                },\n                \"id\": \"MDA\",\n                \"arcs\": [\n                    [432, 433]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Madagascar\"\n                },\n                \"id\": \"MDG\",\n                \"arcs\": [\n                    [434]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mexico\"\n                },\n                \"id\": \"MEX\",\n                \"arcs\": [\n                    [435, -98, -314, 436, 437]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Macedonia\"\n                },\n                \"id\": \"MKD\",\n                \"arcs\": [\n                    [-408, 438, -85, -310, -14]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mali\"\n                },\n                \"id\": \"MLI\",\n                \"arcs\": [\n                    [439, -239, 440, -74, -188, -302, 441]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Myanmar\"\n                },\n                \"id\": \"MMR\",\n                \"arcs\": [\n                    [442, -78, -353, -173, -412, 443]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Montenegro\"\n                },\n                \"id\": \"MNE\",\n                \"arcs\": [\n                    [444, -326, -91, 445, -406, -17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mongolia\"\n                },\n                \"id\": \"MNG\",\n                \"arcs\": [\n                    [446, -183]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mozambique\"\n                },\n                \"id\": \"MOZ\",\n                \"arcs\": [\n                    [447, 448, 449, 450, 451, 452, 453, 454]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mauritania\"\n                },\n                \"id\": \"MRT\",\n                \"arcs\": [\n                    [455, 456, 457, -240, -440]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Malawi\"\n                },\n                \"id\": \"MWI\",\n                \"arcs\": [\n                    [-455, 458, 459]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Malaysia\"\n                },\n                \"id\": \"MYS\",\n                \"arcs\": [\n                    [\n                        [460, 461]\n                    ],\n                    [\n                        [-349, 462, -115, 463]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Namibia\"\n                },\n                \"id\": \"NAM\",\n                \"arcs\": [\n                    [464, -8, 465, -119, 466]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"New Caledonia\"\n                },\n                \"id\": \"NCL\",\n                \"arcs\": [\n                    [467]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Niger\"\n                },\n                \"id\": \"NER\",\n                \"arcs\": [\n                    [-75, -441, -238, -418, 468, -194, 469, -71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nigeria\"\n                },\n                \"id\": \"NGA\",\n                \"arcs\": [\n                    [470, -72, -470, -193]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nicaragua\"\n                },\n                \"id\": \"NIC\",\n                \"arcs\": [\n                    [471, -324, 472, -213]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Netherlands\"\n                },\n                \"id\": \"NLD\",\n                \"arcs\": [\n                    [-227, -63, 473]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Norway\"\n                },\n                \"id\": \"NOR\",\n                \"arcs\": [\n                    [\n                        [474, -272, 475, 476]\n                    ],\n                    [\n                        [477]\n                    ],\n                    [\n                        [478]\n                    ],\n                    [\n                        [479]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nepal\"\n                },\n                \"id\": \"NPL\",\n                \"arcs\": [\n                    [-352, -176]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"New Zealand\"\n                },\n                \"id\": \"NZL\",\n                \"arcs\": [\n                    [\n                        [480]\n                    ],\n                    [\n                        [481]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Oman\"\n                },\n                \"id\": \"OMN\",\n                \"arcs\": [\n                    [\n                        [482, 483, -22, 484]\n                    ],\n                    [\n                        [-20, 485]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Pakistan\"\n                },\n                \"id\": \"PAK\",\n                \"arcs\": [\n                    [-178, -355, 486, -358, -5]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Panama\"\n                },\n                \"id\": \"PAN\",\n                \"arcs\": [\n                    [487, -215, 488, -208]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Peru\"\n                },\n                \"id\": \"PER\",\n                \"arcs\": [\n                    [-167, 489, -247, -211, -106, -102]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Philippines\"\n                },\n                \"id\": \"PHL\",\n                \"arcs\": [\n                    [\n                        [490]\n                    ],\n                    [\n                        [491]\n                    ],\n                    [\n                        [492]\n                    ],\n                    [\n                        [493]\n                    ],\n                    [\n                        [494]\n                    ],\n                    [\n                        [495]\n                    ],\n                    [\n                        [496]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Papua New Guinea\"\n                },\n                \"id\": \"PNG\",\n                \"arcs\": [\n                    [\n                        [497]\n                    ],\n                    [\n                        [498]\n                    ],\n                    [\n                        [-345, 499]\n                    ],\n                    [\n                        [500]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Poland\"\n                },\n                \"id\": \"POL\",\n                \"arcs\": [\n                    [-224, 501, 502, -428, -97, 503, 504, -221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Puerto Rico\"\n                },\n                \"id\": \"PRI\",\n                \"arcs\": [\n                    [505]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"North Korea\"\n                },\n                \"id\": \"PRK\",\n                \"arcs\": [\n                    [506, 507, -405, 508, -169]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Portugal\"\n                },\n                \"id\": \"PRT\",\n                \"arcs\": [\n                    [-259, 509]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Paraguay\"\n                },\n                \"id\": \"PRY\",\n                \"arcs\": [\n                    [-104, -105, -26]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Qatar\"\n                },\n                \"id\": \"QAT\",\n                \"arcs\": [\n                    [510, 511]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Romania\"\n                },\n                \"id\": \"ROU\",\n                \"arcs\": [\n                    [512, -434, 513, 514, -81, 515, -333]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Russia\"\n                },\n                \"id\": \"RUS\",\n                \"arcs\": [\n                    [\n                        [516]\n                    ],\n                    [\n                        [-503, 517, -425]\n                    ],\n                    [\n                        [518, 519]\n                    ],\n                    [\n                        [520]\n                    ],\n                    [\n                        [521]\n                    ],\n                    [\n                        [522]\n                    ],\n                    [\n                        [523]\n                    ],\n                    [\n                        [524]\n                    ],\n                    [\n                        [525]\n                    ],\n                    [\n                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n                    ],\n                    [\n                        [532]\n                    ],\n                    [\n                        [533]\n                    ],\n                    [\n                        [534]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Rwanda\"\n                },\n                \"id\": \"RWA\",\n                \"arcs\": [\n                    [535, -61, -198, 536]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Western Sahara\"\n                },\n                \"id\": \"ESH\",\n                \"arcs\": [\n                    [-241, -458, 537, -431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Saudi Arabia\"\n                },\n                \"id\": \"SAU\",\n                \"arcs\": [\n                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sudan\"\n                },\n                \"id\": \"SDN\",\n                \"arcs\": [\n                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Sudan\"\n                },\n                \"id\": \"SSD\",\n                \"arcs\": [\n                    [547, -266, -396, 548, -203, -125, 549, -543]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Senegal\"\n                },\n                \"id\": \"SEN\",\n                \"arcs\": [\n                    [550, -456, -442, -301, -306, 551, -304]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Solomon Islands\"\n                },\n                \"id\": \"SLB\",\n                \"arcs\": [\n                    [\n                        [552]\n                    ],\n                    [\n                        [553]\n                    ],\n                    [\n                        [554]\n                    ],\n                    [\n                        [555]\n                    ],\n                    [\n                        [556]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sierra Leone\"\n                },\n                \"id\": \"SLE\",\n                \"arcs\": [\n                    [557, -298, -417]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"El Salvador\"\n                },\n                \"id\": \"SLV\",\n                \"arcs\": [\n                    [558, -317, -322]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somaliland\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-263, -231, 559, 560]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somalia\"\n                },\n                \"id\": \"SOM\",\n                \"arcs\": [\n                    [-397, -264, -561, 561]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of Serbia\"\n                },\n                \"id\": \"SRB\",\n                \"arcs\": [\n                    [-86, -439, -407, -446, -90, -325, -334, -516]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Suriname\"\n                },\n                \"id\": \"SUR\",\n                \"arcs\": [\n                    [562, -285, 563, -283, -110, -319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovakia\"\n                },\n                \"id\": \"SVK\",\n                \"arcs\": [\n                    [-505, 564, -331, -54, -222]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovenia\"\n                },\n                \"id\": \"SVN\",\n                \"arcs\": [\n                    [-49, -335, -328, 565, -378]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sweden\"\n                },\n                \"id\": \"SWE\",\n                \"arcs\": [\n                    [-476, -271, 566]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Swaziland\"\n                },\n                \"id\": \"SWZ\",\n                \"arcs\": [\n                    [567, -451]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Syria\"\n                },\n                \"id\": \"SYR\",\n                \"arcs\": [\n                    [-381, -375, -415, 568, 569, -367]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Chad\"\n                },\n                \"id\": \"TCD\",\n                \"arcs\": [\n                    [-469, -422, -545, -122, -195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Togo\"\n                },\n                \"id\": \"TGO\",\n                \"arcs\": [\n                    [570, -296, -76, -69]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Thailand\"\n                },\n                \"id\": \"THA\",\n                \"arcs\": [\n                    [571, -462, 572, -444, -411, -400]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tajikistan\"\n                },\n                \"id\": \"TJK\",\n                \"arcs\": [\n                    [-398, -179, -3, 573]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Turkmenistan\"\n                },\n                \"id\": \"TKM\",\n                \"arcs\": [\n                    [-357, 574, -389, 575, -1]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"East Timor\"\n                },\n                \"id\": \"TLS\",\n                \"arcs\": [\n                    [576, -337]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Trinidad and Tobago\"\n                },\n                \"id\": \"TTO\",\n                \"arcs\": [\n                    [577]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tunisia\"\n                },\n                \"id\": \"TUN\",\n                \"arcs\": [\n                    [-244, 578, -419]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Turkey\"\n                },\n                \"id\": \"TUR\",\n                \"arcs\": [\n                    [\n                        [-294, -36, -361, -368, -570, 579]\n                    ],\n                    [\n                        [-311, -83, 580]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Taiwan\"\n                },\n                \"id\": \"TWN\",\n                \"arcs\": [\n                    [581]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Republic of Tanzania\"\n                },\n                \"id\": \"TZA\",\n                \"arcs\": [\n                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uganda\"\n                },\n                \"id\": \"UGA\",\n                \"arcs\": [\n                    [-537, -197, -549, -395, -585]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ukraine\"\n                },\n                \"id\": \"UKR\",\n                \"arcs\": [\n                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uruguay\"\n                },\n                \"id\": \"URY\",\n                \"arcs\": [\n                    [-113, 586, -28]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United States of America\"\n                },\n                \"id\": \"USA\",\n                \"arcs\": [\n                    [\n                        [587]\n                    ],\n                    [\n                        [588]\n                    ],\n                    [\n                        [589]\n                    ],\n                    [\n                        [590]\n                    ],\n                    [\n                        [591]\n                    ],\n                    [\n                        [592, -438, 593, -139]\n                    ],\n                    [\n                        [594]\n                    ],\n                    [\n                        [595]\n                    ],\n                    [\n                        [596]\n                    ],\n                    [\n                        [-141, 597]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uzbekistan\"\n                },\n                \"id\": \"UZB\",\n                \"arcs\": [\n                    [-576, -388, -399, -574, -2]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Venezuela\"\n                },\n                \"id\": \"VEN\",\n                \"arcs\": [\n                    [598, -320, -108, -210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Vietnam\"\n                },\n                \"id\": \"VNM\",\n                \"arcs\": [\n                    [599, -402, -413, -171]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Vanuatu\"\n                },\n                \"id\": \"VUT\",\n                \"arcs\": [\n                    [\n                        [600]\n                    ],\n                    [\n                        [601]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"West Bank\"\n                },\n                \"id\": \"PSE\",\n                \"arcs\": [\n                    [-384, -371]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Yemen\"\n                },\n                \"id\": \"YEM\",\n                \"arcs\": [\n                    [602, -542, -483]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Africa\"\n                },\n                \"id\": \"ZAF\",\n                \"arcs\": [\n                    [-467, -118, 603, -452, -568, -450, 604],\n                    [-424]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zambia\"\n                },\n                \"id\": \"ZMB\",\n                \"arcs\": [\n                    [-459, -454, 605, -120, -466, -7, -200, -584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zimbabwe\"\n                },\n                \"id\": \"ZWE\",\n                \"arcs\": [\n                    [-604, -121, -606, -453]\n                ]\n            }]\n        }\n    },\n    \"arcs\": [\n        [\n            [6700, 7164],\n            [28, -23],\n            [21, 8],\n            [6, 27],\n            [22, 9],\n            [15, 18],\n            [6, 47],\n            [23, 11],\n            [5, 21],\n            [13, -15],\n            [8, -2]\n        ],\n        [\n            [6847, 7265],\n            [16, -1],\n            [20, -12]\n        ],\n        [\n            [6883, 7252],\n            [9, -7],\n            [20, 19],\n            [9, -12],\n            [9, 27],\n            [17, -1],\n            [4, 9],\n            [3, 24],\n            [12, 20],\n            [15, -13],\n            [-3, -18],\n            [9, -3],\n            [-3, -50],\n            [11, -19],\n            [10, 12],\n            [12, 6],\n            [17, 27],\n            [19, -5],\n            [29, 0]\n        ],\n        [\n            [7082, 7268],\n            [5, -17]\n        ],\n        [\n            [7087, 7251],\n            [-16, -6],\n            [-14, -11],\n            [-32, -7],\n            [-30, -13],\n            [-16, -25],\n            [6, -25],\n            [4, -30],\n            [-14, -25],\n            [1, -22],\n            [-8, -22],\n            [-26, 2],\n            [11, -39],\n            [-18, -15],\n            [-12, -35],\n            [2, -36],\n            [-11, -16],\n            [-10, 5],\n            [-22, -8],\n            [-3, -16],\n            [-20, 0],\n            [-16, -34],\n            [-1, -50],\n            [-36, -24],\n            [-19, 5],\n            [-6, -13],\n            [-16, 7],\n            [-28, -8],\n            [-47, 30]\n        ],\n        [\n            [6690, 6820],\n            [25, 53],\n            [-2, 38],\n            [-21, 10],\n            [-2, 38],\n            [-9, 47],\n            [12, 32],\n            [-12, 9],\n            [7, 43],\n            [12, 74]\n        ],\n        [\n            [5664, 4412],\n            [3, -18],\n            [-4, -29],\n            [5, -28],\n            [-4, -22],\n            [3, -20],\n            [-58, 1],\n            [-2, -188],\n            [19, -49],\n            [18, -37]\n        ],\n        [\n            [5644, 4022],\n            [-51, -24],\n            [-67, 9],\n            [-19, 28],\n            [-113, -3],\n            [-4, -4],\n            [-17, 27],\n            [-18, 2],\n            [-16, -10],\n            [-14, -12]\n        ],\n        [\n            [5325, 4035],\n            [-2, 38],\n            [4, 51],\n            [9, 55],\n            [2, 25],\n            [9, 53],\n            [6, 24],\n            [16, 39],\n            [9, 26],\n            [3, 44],\n            [-1, 34],\n            [-9, 21],\n            [-7, 36],\n            [-7, 35],\n            [2, 12],\n            [8, 24],\n            [-8, 57],\n            [-6, 39],\n            [-14, 38],\n            [3, 11]\n        ],\n        [\n            [5342, 4697],\n            [11, 8],\n            [8, -1],\n            [10, 7],\n            [82, -1],\n            [7, -44],\n            [8, -35],\n            [6, -19],\n            [11, -31],\n            [18, 5],\n            [9, 8],\n            [16, -8],\n            [4, 14],\n            [7, 35],\n            [17, 2],\n            [2, 10],\n            [14, 1],\n            [-3, -22],\n            [34, 1],\n            [1, -37],\n            [5, -23],\n            [-4, -36],\n            [2, -36],\n            [9, -22],\n            [-1, -70],\n            [7, 5],\n            [12, -1],\n            [17, 8],\n            [13, -3]\n        ],\n        [\n            [5338, 4715],\n            [-8, 45]\n        ],\n        [\n            [5330, 4760],\n            [12, 25],\n            [8, 10],\n            [10, -20]\n        ],\n        [\n            [5360, 4775],\n            [-10, -12],\n            [-4, -16],\n            [-1, -25],\n            [-7, -7]\n        ],\n        [\n            [5571, 7530],\n            [-3, -20],\n            [4, -25],\n            [11, -15]\n        ],\n        [\n            [5583, 7470],\n            [0, -15],\n            [-9, -9],\n            [-2, -19],\n            [-13, -29]\n        ],\n        [\n            [5559, 7398],\n            [-5, 5],\n            [0, 13],\n            [-15, 19],\n            [-3, 29],\n            [2, 40],\n            [4, 18],\n            [-4, 10]\n        ],\n        [\n            [5538, 7532],\n            [-2, 18],\n            [12, 29],\n            [1, -11],\n            [8, 6]\n        ],\n        [\n            [5557, 7574],\n            [6, -16],\n            [7, -6],\n            [1, -22]\n        ],\n        [\n            [6432, 6490],\n            [5, 3],\n            [1, -16],\n            [22, 9],\n            [23, -2],\n            [17, -1],\n            [19, 39],\n            [20, 38],\n            [18, 37]\n        ],\n        [\n            [6557, 6597],\n            [5, -20]\n        ],\n        [\n            [6562, 6577],\n            [4, -47]\n        ],\n        [\n            [6566, 6530],\n            [-14, 0],\n            [-3, -39],\n            [5, -8],\n            [-12, -12],\n            [0, -24],\n            [-8, -24],\n            [-1, -24]\n        ],\n        [\n            [6533, 6399],\n            [-6, -12],\n            [-83, 29],\n            [-11, 60],\n            [-1, 14]\n        ],\n        [\n            [3140, 1814],\n            [-17, 2],\n            [-30, 0],\n            [0, 132]\n        ],\n        [\n            [3093, 1948],\n            [11, -27],\n            [14, -45],\n            [36, -35],\n            [39, -15],\n            [-13, -30],\n            [-26, -2],\n            [-14, 20]\n        ],\n        [\n            [3258, 3743],\n            [51, -96],\n            [23, -9],\n            [34, -44],\n            [29, -23],\n            [4, -26],\n            [-28, -90],\n            [28, -16],\n            [32, -9],\n            [22, 10],\n            [25, 45],\n            [4, 52]\n        ],\n        [\n            [3482, 3537],\n            [14, 11],\n            [14, -34],\n            [-1, -47],\n            [-23, -33],\n            [-19, -24],\n            [-31, -57],\n            [-37, -81]\n        ],\n        [\n            [3399, 3272],\n            [-7, -47],\n            [-7, -61],\n            [0, -58],\n            [-6, -14],\n            [-2, -38]\n        ],\n        [\n            [3377, 3054],\n            [-2, -31],\n            [35, -50],\n            [-4, -41],\n            [18, -26],\n            [-2, -29],\n            [-26, -75],\n            [-42, -32],\n            [-55, -12],\n            [-31, 6],\n            [6, -36],\n            [-6, -44],\n            [5, -30],\n            [-16, -20],\n            [-29, -8],\n            [-26, 21],\n            [-11, -15],\n            [4, -59],\n            [18, -18],\n            [16, 19],\n            [8, -31],\n            [-26, -18],\n            [-22, -37],\n            [-4, -59],\n            [-7, -32],\n            [-26, 0],\n            [-22, -31],\n            [-8, -44],\n            [28, -43],\n            [26, -12],\n            [-9, -53],\n            [-33, -33],\n            [-18, -70],\n            [-25, -23],\n            [-12, -28],\n            [9, -61],\n            [19, -34],\n            [-12, 3]\n        ],\n        [\n            [3095, 1968],\n            [-26, 9],\n            [-67, 8],\n            [-11, 34],\n            [0, 45],\n            [-18, -4],\n            [-10, 21],\n            [-3, 63],\n            [22, 26],\n            [9, 37],\n            [-4, 30],\n            [15, 51],\n            [10, 78],\n            [-3, 35],\n            [12, 11],\n            [-3, 22],\n            [-13, 12],\n            [10, 25],\n            [-13, 22],\n            [-6, 68],\n            [11, 12],\n            [-5, 72],\n            [7, 61],\n            [7, 52],\n            [17, 22],\n            [-9, 58],\n            [0, 54],\n            [21, 38],\n            [-1, 50],\n            [16, 57],\n            [0, 55],\n            [-7, 11],\n            [-13, 102],\n            [17, 60],\n            [-2, 58],\n            [10, 53],\n            [18, 56],\n            [20, 36],\n            [-9, 24],\n            [6, 19],\n            [-1, 98],\n            [30, 29],\n            [10, 62],\n            [-3, 14]\n        ],\n        [\n            [3136, 3714],\n            [23, 54],\n            [36, -15],\n            [16, -42],\n            [11, 47],\n            [32, -2],\n            [4, -13]\n        ],\n        [\n            [6210, 7485],\n            [39, 9]\n        ],\n        [\n            [6249, 7494],\n            [5, -15],\n            [11, -10],\n            [-6, -15],\n            [15, -21],\n            [-8, -18],\n            [12, -16],\n            [13, -10],\n            [0, -41]\n        ],\n        [\n            [6291, 7348],\n            [-10, -2]\n        ],\n        [\n            [6281, 7346],\n            [-11, 34],\n            [0, 10],\n            [-12, -1],\n            [-9, 16],\n            [-5, -1]\n        ],\n        [\n            [6244, 7404],\n            [-11, 17],\n            [-21, 15],\n            [3, 28],\n            [-5, 21]\n        ],\n        [\n            [3345, 329],\n            [-8, -30],\n            [-8, -27],\n            [-59, 8],\n            [-62, -3],\n            [-34, 20],\n            [0, 2],\n            [-16, 17],\n            [63, -2],\n            [60, -6],\n            [20, 24],\n            [15, 21],\n            [29, -24]\n        ],\n        [\n            [577, 361],\n            [-53, -8],\n            [-36, 21],\n            [-17, 21],\n            [-1, 3],\n            [-18, 16],\n            [17, 22],\n            [52, -9],\n            [28, -18],\n            [21, -21],\n            [7, -27]\n        ],\n        [\n            [3745, 447],\n            [35, -26],\n            [12, -36],\n            [3, -25],\n            [1, -30],\n            [-43, -19],\n            [-45, -15],\n            [-52, -14],\n            [-59, -11],\n            [-65, 3],\n            [-37, 20],\n            [5, 24],\n            [59, 16],\n            [24, 20],\n            [18, 26],\n            [12, 22],\n            [17, 20],\n            [18, 25],\n            [14, 0],\n            [41, 12],\n            [42, -12]\n        ],\n        [\n            [1633, 715],\n            [36, -9],\n            [33, 10],\n            [-16, -20],\n            [-26, -15],\n            [-39, 4],\n            [-27, 21],\n            [6, 20],\n            [33, -11]\n        ],\n        [\n            [1512, 716],\n            [43, -23],\n            [-17, 3],\n            [-36, 5],\n            [-38, 17],\n            [20, 12],\n            [28, -14]\n        ],\n        [\n            [2250, 808],\n            [31, -8],\n            [30, 7],\n            [17, -34],\n            [-22, 5],\n            [-34, -2],\n            [-34, 2],\n            [-38, -4],\n            [-28, 12],\n            [-15, 24],\n            [18, 11],\n            [35, -8],\n            [40, -5]\n        ],\n        [\n            [3098, 866],\n            [4, -27],\n            [-5, -23],\n            [-8, -22],\n            [-33, -8],\n            [-31, -12],\n            [-36, 1],\n            [14, 24],\n            [-33, -9],\n            [-31, -8],\n            [-21, 18],\n            [-2, 24],\n            [30, 23],\n            [20, 7],\n            [32, -2],\n            [8, 30],\n            [1, 22],\n            [0, 47],\n            [16, 28],\n            [25, 9],\n            [15, -22],\n            [6, -22],\n            [12, -26],\n            [10, -26],\n            [7, -26]\n        ],\n        [\n            [3371, 1268],\n            [-11, -13],\n            [-21, 9],\n            [-23, -6],\n            [-19, -14],\n            [-20, -15],\n            [-14, -17],\n            [-4, -23],\n            [2, -22],\n            [13, -20],\n            [-19, -14],\n            [-26, -4],\n            [-15, -20],\n            [-17, -19],\n            [-17, -25],\n            [-4, -22],\n            [9, -24],\n            [15, -19],\n            [23, -14],\n            [21, -18],\n            [12, -23],\n            [6, -22],\n            [8, -24],\n            [13, -19],\n            [8, -22],\n            [4, -55],\n            [8, -22],\n            [2, -23],\n            [9, -23],\n            [-4, -31],\n            [-15, -24],\n            [-17, -20],\n            [-37, -8],\n            [-12, -21],\n            [-17, -20],\n            [-42, -22],\n            [-37, -9],\n            [-35, -13],\n            [-37, -13],\n            [-22, -24],\n            [-45, -2],\n            [-49, 2],\n            [-44, -4],\n            [-47, 0],\n            [9, -24],\n            [42, -10],\n            [31, -16],\n            [18, -21],\n            [-31, -19],\n            [-48, 6],\n            [-40, -15],\n            [-2, -24],\n            [-1, -23],\n            [33, -20],\n            [6, -22],\n            [35, -22],\n            [59, -9],\n            [50, -16],\n            [40, -19],\n            [50, -18],\n            [70, -10],\n            [68, -16],\n            [47, -17],\n            [52, -20],\n            [27, -28],\n            [13, -22],\n            [34, 21],\n            [46, 17],\n            [48, 19],\n            [58, 15],\n            [49, 16],\n            [69, 1],\n            [68, -8],\n            [56, -14],\n            [18, 26],\n            [39, 17],\n            [70, 1],\n            [55, 13],\n            [52, 13],\n            [58, 8],\n            [62, 10],\n            [43, 15],\n            [-20, 21],\n            [-12, 21],\n            [0, 22],\n            [-54, -2],\n            [-57, -10],\n            [-54, 0],\n            [-8, 22],\n            [4, 44],\n            [12, 13],\n            [40, 14],\n            [47, 14],\n            [34, 17],\n            [33, 18],\n            [25, 23],\n            [38, 10],\n            [38, 8],\n            [19, 5],\n            [43, 2],\n            [41, 8],\n            [34, 12],\n            [34, 14],\n            [30, 14],\n            [39, 18],\n            [24, 20],\n            [26, 17],\n            [9, 24],\n            [-30, 13],\n            [10, 25],\n            [18, 18],\n            [29, 12],\n            [31, 14],\n            [28, 18],\n            [22, 23],\n            [13, 28],\n            [21, 16],\n            [33, -3],\n            [13, -20],\n            [34, -2],\n            [1, 22],\n            [14, 23],\n            [30, -6],\n            [7, -22],\n            [33, -3],\n            [36, 10],\n            [35, 7],\n            [31, -3],\n            [12, -25],\n            [31, 20],\n            [28, 10],\n            [31, 9],\n            [31, 8],\n            [29, 14],\n            [31, 9],\n            [24, 13],\n            [17, 20],\n            [20, -15],\n            [29, 8],\n            [20, -27],\n            [16, -21],\n            [32, 11],\n            [12, 24],\n            [28, 16],\n            [37, -4],\n            [11, -22],\n            [22, 22],\n            [30, 7],\n            [33, 3],\n            [29, -2],\n            [31, -7],\n            [30, -3],\n            [13, -20],\n            [18, -17],\n            [31, 10],\n            [32, 3],\n            [32, 0],\n            [31, 1],\n            [28, 8],\n            [29, 7],\n            [25, 16],\n            [26, 11],\n            [28, 5],\n            [21, 17],\n            [15, 32],\n            [16, 20],\n            [29, -10],\n            [11, -21],\n            [24, -13],\n            [29, 4],\n            [19, -21],\n            [21, -15],\n            [28, 14],\n            [10, 26],\n            [25, 10],\n            [29, 20],\n            [27, 8],\n            [33, 11],\n            [22, 13],\n            [22, 14],\n            [22, 13],\n            [26, -7],\n            [25, 21],\n            [18, 16],\n            [26, -1],\n            [23, 14],\n            [6, 21],\n            [23, 16],\n            [23, 11],\n            [28, 10],\n            [25, 4],\n            [25, -3],\n            [26, -6],\n            [22, -16],\n            [3, -26],\n            [24, -19],\n            [17, -17],\n            [33, -7],\n            [19, -16],\n            [23, -16],\n            [26, -3],\n            [23, 11],\n            [24, 24],\n            [26, -12],\n            [27, -7],\n            [26, -7],\n            [27, -5],\n            [28, 0],\n            [23, -61],\n            [-1, -15],\n            [-4, -27],\n            [-26, -15],\n            [-22, -22],\n            [4, -23],\n            [31, 1],\n            [-4, -23],\n            [-14, -22],\n            [-13, -24],\n            [21, -19],\n            [32, -6],\n            [32, 11],\n            [15, 23],\n            [10, 22],\n            [15, 18],\n            [17, 18],\n            [7, 21],\n            [15, 29],\n            [18, 5],\n            [31, 3],\n            [28, 7],\n            [28, 9],\n            [14, 23],\n            [8, 22],\n            [19, 22],\n            [27, 15],\n            [23, 12],\n            [16, 19],\n            [15, 11],\n            [21, 9],\n            [27, -6],\n            [25, 6],\n            [28, 7],\n            [30, -4],\n            [20, 17],\n            [14, 39],\n            [11, -16],\n            [13, -28],\n            [23, -12],\n            [27, -4],\n            [26, 7],\n            [29, -5],\n            [26, -1],\n            [17, 6],\n            [24, -4],\n            [21, -12],\n            [25, 8],\n            [30, 0],\n            [25, 8],\n            [29, -8],\n            [19, 19],\n            [14, 20],\n            [19, 16],\n            [35, 44],\n            [18, -8],\n            [21, -16],\n            [18, -21],\n            [36, -36],\n            [27, -1],\n            [25, 0],\n            [30, 7],\n            [30, 8],\n            [23, 16],\n            [19, 18],\n            [31, 2],\n            [21, 13],\n            [22, -12],\n            [14, -18],\n            [19, -19],\n            [31, 2],\n            [19, -15],\n            [33, -15],\n            [35, -5],\n            [29, 4],\n            [21, 19],\n            [19, 18],\n            [25, 5],\n            [25, -8],\n            [29, -6],\n            [26, 9],\n            [25, 0],\n            [24, -6],\n            [26, -5],\n            [25, 10],\n            [30, 9],\n            [28, 3],\n            [32, 0],\n            [25, 5],\n            [25, 5],\n            [8, 29],\n            [1, 24],\n            [17, -16],\n            [5, -27],\n            [10, -24],\n            [11, -20],\n            [23, -10],\n            [32, 4],\n            [36, 1],\n            [25, 3],\n            [37, 0],\n            [26, 1],\n            [36, -2],\n            [31, -5],\n            [20, -18],\n            [-5, -22],\n            [18, -18],\n            [30, -13],\n            [31, -15],\n            [35, -11],\n            [38, -9],\n            [28, -9],\n            [32, -2],\n            [18, 20],\n            [24, -16],\n            [21, -19],\n            [25, -13],\n            [34, -6],\n            [32, -7],\n            [13, -23],\n            [32, -14],\n            [21, -21],\n            [31, -9],\n            [32, 1],\n            [30, -4],\n            [33, 1],\n            [34, -4],\n            [31, -8],\n            [28, -14],\n            [29, -12],\n            [20, -17],\n            [-3, -23],\n            [-15, -21],\n            [-13, -27],\n            [-9, -21],\n            [-14, -24],\n            [-36, -9],\n            [-16, -21],\n            [-36, -13],\n            [-13, -23],\n            [-19, -22],\n            [-20, -18],\n            [-11, -25],\n            [-7, -22],\n            [-3, -26],\n            [0, -22],\n            [16, -23],\n            [6, -22],\n            [13, -21],\n            [52, -8],\n            [11, -26],\n            [-50, -9],\n            [-43, -13],\n            [-52, -2],\n            [-24, -34],\n            [-5, -27],\n            [-12, -22],\n            [-14, -22],\n            [37, -20],\n            [14, -24],\n            [24, -22],\n            [33, -20],\n            [39, -19],\n            [42, -18],\n            [64, -19],\n            [14, -29],\n            [80, -12],\n            [5, -5],\n            [21, -17],\n            [77, 15],\n            [63, -19],\n            [48, -14],\n            [-9997, -1],\n            [24, 35],\n            [50, -19],\n            [3, 2],\n            [30, 19],\n            [4, 0],\n            [3, -1],\n            [40, -25],\n            [35, 25],\n            [7, 3],\n            [81, 11],\n            [27, -14],\n            [13, -7],\n            [41, -20],\n            [79, -15],\n            [63, -18],\n            [107, -14],\n            [80, 16],\n            [118, -11],\n            [67, -19],\n            [73, 17],\n            [78, 17],\n            [6, 27],\n            [-110, 3],\n            [-89, 14],\n            [-24, 23],\n            [-74, 12],\n            [5, 27],\n            [10, 24],\n            [10, 22],\n            [-5, 25],\n            [-46, 16],\n            [-22, 21],\n            [-43, 18],\n            [68, -3],\n            [64, 9],\n            [40, -20],\n            [50, 18],\n            [45, 22],\n            [23, 19],\n            [-10, 25],\n            [-36, 16],\n            [-41, 17],\n            [-57, 4],\n            [-50, 8],\n            [-54, 6],\n            [-18, 22],\n            [-36, 18],\n            [-21, 21],\n            [-9, 67],\n            [14, -6],\n            [25, -18],\n            [45, 6],\n            [44, 8],\n            [23, -26],\n            [44, 6],\n            [37, 13],\n            [35, 16],\n            [32, 20],\n            [41, 5],\n            [-1, 22],\n            [-9, 22],\n            [8, 21],\n            [36, 11],\n            [16, -20],\n            [42, 12],\n            [32, 15],\n            [40, 1],\n            [38, 6],\n            [37, 13],\n            [30, 13],\n            [34, 13],\n            [22, -4],\n            [19, -4],\n            [41, 8],\n            [37, -10],\n            [38, 1],\n            [37, 8],\n            [37, -6],\n            [41, -6],\n            [39, 3],\n            [40, -2],\n            [42, -1],\n            [38, 3],\n            [28, 17],\n            [34, 9],\n            [35, -13],\n            [33, 11],\n            [30, 21],\n            [18, -19],\n            [9, -21],\n            [18, -19],\n            [29, 17],\n            [33, -22],\n            [38, -7],\n            [32, -16],\n            [39, 3],\n            [36, 11],\n            [41, -3],\n            [38, -8],\n            [38, -10],\n            [15, 25],\n            [-18, 20],\n            [-14, 21],\n            [-36, 5],\n            [-15, 22],\n            [-6, 22],\n            [-10, 43],\n            [21, -8],\n            [36, -3],\n            [36, 3],\n            [33, -9],\n            [28, -17],\n            [12, -21],\n            [38, -4],\n            [36, 9],\n            [38, 11],\n            [34, 7],\n            [28, -14],\n            [37, 5],\n            [24, 45],\n            [23, -27],\n            [32, -10],\n            [34, 6],\n            [23, -23],\n            [37, -3],\n            [33, -7],\n            [34, -12],\n            [21, 22],\n            [11, 20],\n            [28, -23],\n            [38, 6],\n            [28, -13],\n            [19, -19],\n            [37, 5],\n            [29, 13],\n            [29, 15],\n            [33, 8],\n            [39, 7],\n            [36, 8],\n            [27, 13],\n            [16, 19],\n            [7, 25],\n            [-3, 24],\n            [-9, 24],\n            [-10, 23],\n            [-9, 23],\n            [-7, 21],\n            [-1, 23],\n            [2, 23],\n            [13, 22],\n            [11, 24],\n            [5, 23],\n            [-6, 26],\n            [-3, 23],\n            [14, 27],\n            [15, 17],\n            [18, 22],\n            [19, 19],\n            [22, 17],\n            [11, 25],\n            [15, 17],\n            [18, 15],\n            [26, 3],\n            [18, 19],\n            [19, 11],\n            [23, 7],\n            [20, 15],\n            [16, 19],\n            [22, 7],\n            [16, -15],\n            [-10, -20],\n            [-29, -17]\n        ],\n        [\n            [6914, 2185],\n            [18, -19],\n            [26, -7],\n            [1, -11],\n            [-7, -27],\n            [-43, -4],\n            [-1, 31],\n            [4, 25],\n            [2, 12]\n        ],\n        [\n            [9038, 2648],\n            [27, -21],\n            [15, 8],\n            [22, 12],\n            [16, -4],\n            [2, -70],\n            [-9, -21],\n            [-3, -47],\n            [-10, 16],\n            [-19, -41],\n            [-6, 3],\n            [-17, 2],\n            [-17, 50],\n            [-4, 39],\n            [-16, 52],\n            [1, 27],\n            [18, -5]\n        ],\n        [\n            [8987, 4244],\n            [10, -46],\n            [18, 22],\n            [9, -25],\n            [13, -23],\n            [-3, -26],\n            [6, -51],\n            [5, -29],\n            [7, -7],\n            [7, -51],\n            [-3, -30],\n            [9, -40],\n            [31, -31],\n            [19, -28],\n            [19, -26],\n            [-4, -14],\n            [16, -37],\n            [11, -64],\n            [11, 13],\n            [11, -26],\n            [7, 9],\n            [5, -63],\n            [19, -36],\n            [13, -22],\n            [22, -48],\n            [8, -48],\n            [1, -33],\n            [-2, -37],\n            [13, -50],\n            [-2, -52],\n            [-5, -28],\n            [-7, -52],\n            [1, -34],\n            [-6, -43],\n            [-12, -53],\n            [-21, -29],\n            [-10, -46],\n            [-9, -29],\n            [-8, -51],\n            [-11, -30],\n            [-7, -44],\n            [-4, -41],\n            [2, -18],\n            [-16, -21],\n            [-31, -2],\n            [-26, -24],\n            [-13, -23],\n            [-17, -26],\n            [-23, 27],\n            [-17, 10],\n            [5, 31],\n            [-15, -11],\n            [-25, -43],\n            [-24, 16],\n            [-15, 9],\n            [-16, 4],\n            [-27, 17],\n            [-18, 37],\n            [-5, 45],\n            [-7, 30],\n            [-13, 24],\n            [-27, 7],\n            [9, 28],\n            [-7, 44],\n            [-13, -41],\n            [-25, -11],\n            [14, 33],\n            [5, 34],\n            [10, 29],\n            [-2, 44],\n            [-22, -50],\n            [-18, -21],\n            [-10, -47],\n            [-22, 25],\n            [1, 31],\n            [-18, 43],\n            [-14, 22],\n            [5, 14],\n            [-36, 35],\n            [-19, 2],\n            [-27, 29],\n            [-50, -6],\n            [-36, -21],\n            [-31, -20],\n            [-27, 4],\n            [-29, -30],\n            [-24, -14],\n            [-6, -31],\n            [-10, -24],\n            [-23, -1],\n            [-18, -5],\n            [-24, 10],\n            [-20, -6],\n            [-19, -3],\n            [-17, -31],\n            [-8, 2],\n            [-14, -16],\n            [-13, -19],\n            [-21, 2],\n            [-18, 0],\n            [-30, 38],\n            [-15, 11],\n            [1, 34],\n            [14, 8],\n            [4, 14],\n            [-1, 21],\n            [4, 41],\n            [-3, 35],\n            [-15, 60],\n            [-4, 33],\n            [1, 34],\n            [-11, 38],\n            [-1, 18],\n            [-12, 23],\n            [-4, 47],\n            [-16, 46],\n            [-4, 26],\n            [13, -26],\n            [-10, 55],\n            [14, -17],\n            [8, -23],\n            [0, 30],\n            [-14, 47],\n            [-3, 18],\n            [-6, 18],\n            [3, 34],\n            [6, 15],\n            [4, 29],\n            [-3, 35],\n            [11, 42],\n            [2, -45],\n            [12, 41],\n            [22, 20],\n            [14, 25],\n            [21, 22],\n            [13, 4],\n            [7, -7],\n            [22, 22],\n            [17, 6],\n            [4, 13],\n            [8, 6],\n            [15, -2],\n            [29, 18],\n            [15, 26],\n            [7, 31],\n            [17, 30],\n            [1, 24],\n            [1, 32],\n            [19, 50],\n            [12, -51],\n            [12, 12],\n            [-10, 28],\n            [9, 29],\n            [12, -13],\n            [3, 45],\n            [15, 29],\n            [7, 23],\n            [14, 10],\n            [0, 17],\n            [13, -7],\n            [0, 15],\n            [12, 8],\n            [14, 8],\n            [20, -27],\n            [16, -35],\n            [17, 0],\n            [18, -6],\n            [-6, 33],\n            [13, 47],\n            [13, 15],\n            [-5, 15],\n            [12, 34],\n            [17, 21],\n            [14, -7],\n            [24, 11],\n            [-1, 30],\n            [-20, 19],\n            [15, 9],\n            [18, -15],\n            [15, -24],\n            [23, -15],\n            [8, 6],\n            [17, -18],\n            [17, 17],\n            [10, -5],\n            [7, 11],\n            [12, -29],\n            [-7, -32],\n            [-11, -24],\n            [-9, -2],\n            [3, -23],\n            [-8, -30],\n            [-10, -29],\n            [2, -17],\n            [22, -32],\n            [21, -19],\n            [15, -20],\n            [20, -35],\n            [8, 0],\n            [14, -15],\n            [4, -19],\n            [27, -20],\n            [18, 20],\n            [6, 32],\n            [5, 26],\n            [4, 33],\n            [8, 47],\n            [-4, 28],\n            [2, 17],\n            [-3, 34],\n            [4, 45],\n            [5, 12],\n            [-4, 20],\n            [7, 31],\n            [5, 32],\n            [1, 17],\n            [10, 22],\n            [8, -29],\n            [2, -37],\n            [7, -7],\n            [1, -25],\n            [10, -30],\n            [2, -33],\n            [-1, -22]\n        ],\n        [\n            [5471, 7900],\n            [-2, -24],\n            [-16, 0],\n            [6, -13],\n            [-9, -38]\n        ],\n        [\n            [5450, 7825],\n            [-6, -10],\n            [-24, -1],\n            [-14, -13],\n            [-23, 4]\n        ],\n        [\n            [5383, 7805],\n            [-40, 15],\n            [-6, 21],\n            [-27, -10],\n            [-4, -12],\n            [-16, 9]\n        ],\n        [\n            [5290, 7828],\n            [-15, 1],\n            [-12, 11],\n            [4, 15],\n            [-1, 10]\n        ],\n        [\n            [5266, 7865],\n            [8, 3],\n            [14, -16],\n            [4, 16],\n            [25, -3],\n            [20, 11],\n            [13, -2],\n            [9, -12],\n            [2, 10],\n            [-4, 38],\n            [10, 8],\n            [10, 27]\n        ],\n        [\n            [5377, 7945],\n            [21, -19],\n            [15, 24],\n            [10, 5],\n            [22, -18],\n            [13, 3],\n            [13, -12]\n        ],\n        [\n            [5471, 7928],\n            [-3, -7],\n            [3, -21]\n        ],\n        [\n            [6281, 7346],\n            [-19, 8],\n            [-14, 27],\n            [-4, 23]\n        ],\n        [\n            [6349, 7527],\n            [15, -31],\n            [14, -42],\n            [13, -2],\n            [8, -16],\n            [-23, -5],\n            [-5, -46],\n            [-4, -21],\n            [-11, -13],\n            [1, -30]\n        ],\n        [\n            [6357, 7321],\n            [-7, -3],\n            [-17, 31],\n            [10, 30],\n            [-9, 17],\n            [-10, -4],\n            [-33, -44]\n        ],\n        [\n            [6249, 7494],\n            [6, 10],\n            [21, -17],\n            [15, -4],\n            [4, 7],\n            [-14, 32],\n            [7, 9]\n        ],\n        [\n            [6288, 7531],\n            [8, -2],\n            [19, -36],\n            [13, -4],\n            [4, 15],\n            [17, 23]\n        ],\n        [\n            [5814, 4792],\n            [-1, 71],\n            [-7, 27]\n        ],\n        [\n            [5806, 4890],\n            [17, -5],\n            [8, 34],\n            [15, -4]\n        ],\n        [\n            [5846, 4915],\n            [1, -23],\n            [6, -14],\n            [1, -19],\n            [-7, -12],\n            [-11, -31],\n            [-10, -22],\n            [-12, -2]\n        ],\n        [\n            [5092, 8091],\n            [20, -5],\n            [26, 12],\n            [17, -25],\n            [16, -14]\n        ],\n        [\n            [5171, 8059],\n            [-4, -40]\n        ],\n        [\n            [5167, 8019],\n            [-7, -2],\n            [-3, -33]\n        ],\n        [\n            [5157, 7984],\n            [-24, 26],\n            [-14, -4],\n            [-20, 28],\n            [-13, 23],\n            [-13, 1],\n            [-4, 21]\n        ],\n        [\n            [5069, 8079],\n            [23, 12]\n        ],\n        [\n            [5074, 5427],\n            [-23, -7]\n        ],\n        [\n            [5051, 5420],\n            [-7, 41],\n            [2, 136],\n            [-6, 12],\n            [-1, 29],\n            [-10, 21],\n            [-8, 17],\n            [3, 31]\n        ],\n        [\n            [5024, 5707],\n            [10, 7],\n            [6, 26],\n            [13, 5],\n            [6, 18]\n        ],\n        [\n            [5059, 5763],\n            [10, 17],\n            [10, 0],\n            [21, -34]\n        ],\n        [\n            [5100, 5746],\n            [-1, -19],\n            [6, -35],\n            [-6, -24],\n            [3, -16],\n            [-13, -37],\n            [-9, -18],\n            [-5, -37],\n            [1, -38],\n            [-2, -95]\n        ],\n        [\n            [4921, 5627],\n            [-19, 15],\n            [-13, -2],\n            [-10, -15],\n            [-12, 13],\n            [-5, 19],\n            [-13, 13]\n        ],\n        [\n            [4849, 5670],\n            [-1, 34],\n            [7, 26],\n            [-1, 20],\n            [23, 48],\n            [4, 41],\n            [7, 14],\n            [14, -8],\n            [11, 12],\n            [4, 16],\n            [22, 26],\n            [5, 19],\n            [26, 24],\n            [15, 9],\n            [7, -12],\n            [18, 0]\n        ],\n        [\n            [5010, 5939],\n            [-2, -28],\n            [3, -27],\n            [16, -39],\n            [1, -28],\n            [32, -14],\n            [-1, -40]\n        ],\n        [\n            [5024, 5707],\n            [-24, 1]\n        ],\n        [\n            [5000, 5708],\n            [-13, 5],\n            [-9, -9],\n            [-12, 4],\n            [-48, -3],\n            [-1, -33],\n            [4, -45]\n        ],\n        [\n            [7573, 6360],\n            [0, -43],\n            [-10, 9],\n            [2, -47]\n        ],\n        [\n            [7565, 6279],\n            [-8, 30],\n            [-1, 31],\n            [-6, 28],\n            [-11, 34],\n            [-26, 3],\n            [3, -25],\n            [-9, -32],\n            [-12, 12],\n            [-4, -11],\n            [-8, 6],\n            [-11, 5]\n        ],\n        [\n            [7472, 6360],\n            [-4, 49],\n            [-10, 45],\n            [5, 35],\n            [-17, 16],\n            [6, 22],\n            [18, 22],\n            [-20, 31],\n            [9, 40],\n            [22, -26],\n            [14, -3],\n            [2, -41],\n            [26, -8],\n            [26, 1],\n            [16, -10],\n            [-13, -50],\n            [-12, -3],\n            [-9, -34],\n            [16, -31],\n            [4, 38],\n            [8, 0],\n            [14, -93]\n        ],\n        [\n            [5629, 7671],\n            [8, -25],\n            [11, 5],\n            [21, -9],\n            [41, -4],\n            [13, 16],\n            [33, 13],\n            [20, -21],\n            [17, -6]\n        ],\n        [\n            [5793, 7640],\n            [-15, -25],\n            [-10, -42],\n            [9, -34]\n        ],\n        [\n            [5777, 7539],\n            [-24, 8],\n            [-28, -18]\n        ],\n        [\n            [5725, 7529],\n            [0, -30],\n            [-26, -5],\n            [-19, 20],\n            [-22, -16],\n            [-21, 2]\n        ],\n        [\n            [5637, 7500],\n            [-2, 39],\n            [-14, 19]\n        ],\n        [\n            [5621, 7558],\n            [5, 8],\n            [-3, 7],\n            [4, 19],\n            [11, 18],\n            [-14, 26],\n            [-2, 21],\n            [7, 14]\n        ],\n        [\n            [2846, 6461],\n            [-7, -3],\n            [-7, 34],\n            [-10, 17],\n            [6, 38],\n            [8, -3],\n            [10, -49],\n            [0, -34]\n        ],\n        [\n            [2838, 6628],\n            [-30, -10],\n            [-2, 22],\n            [13, 5],\n            [18, -2],\n            [1, -15]\n        ],\n        [\n            [2861, 6628],\n            [-5, -42],\n            [-5, 8],\n            [0, 31],\n            [-12, 23],\n            [0, 7],\n            [22, -27]\n        ],\n        [\n            [5527, 7708],\n            [10, 0],\n            [-7, -26],\n            [14, -23],\n            [-4, -28],\n            [-7, -2]\n        ],\n        [\n            [5533, 7629],\n            [-5, -6],\n            [-9, -13],\n            [-4, -33]\n        ],\n        [\n            [5515, 7577],\n            [-25, 23],\n            [-10, 24],\n            [-11, 13],\n            [-12, 22],\n            [-6, 19],\n            [-14, 27],\n            [6, 25],\n            [10, -14],\n            [6, 12],\n            [13, 2],\n            [24, -10],\n            [19, 1],\n            [12, -13]\n        ],\n        [\n            [5652, 8242],\n            [27, 0],\n            [30, 22],\n            [6, 34],\n            [23, 19],\n            [-3, 26]\n        ],\n        [\n            [5735, 8343],\n            [17, 10],\n            [30, 23]\n        ],\n        [\n            [5782, 8376],\n            [29, -15],\n            [4, -15],\n            [15, 7],\n            [27, -14],\n            [3, -27],\n            [-6, -16],\n            [17, -39],\n            [12, -11],\n            [-2, -11],\n            [19, -10],\n            [8, -16],\n            [-11, -13],\n            [-23, 2],\n            [-5, -5],\n            [7, -20],\n            [6, -37]\n        ],\n        [\n            [5882, 8136],\n            [-23, -4],\n            [-9, -13],\n            [-2, -30],\n            [-11, 6],\n            [-25, -3],\n            [-7, 14],\n            [-11, -10],\n            [-10, 8],\n            [-22, 1],\n            [-31, 15],\n            [-28, 4],\n            [-22, -1],\n            [-15, -16],\n            [-13, -2]\n        ],\n        [\n            [5653, 8105],\n            [-1, 26],\n            [-8, 27],\n            [17, 12],\n            [0, 24],\n            [-8, 22],\n            [-1, 26]\n        ],\n        [\n            [2524, 6110],\n            [-1, 8],\n            [4, 3],\n            [5, -7],\n            [10, 36],\n            [5, 0]\n        ],\n        [\n            [2547, 6150],\n            [0, -8],\n            [5, -1],\n            [0, -16],\n            [-5, -25],\n            [3, -9],\n            [-3, -21],\n            [2, -6],\n            [-4, -30],\n            [-5, -16],\n            [-5, -1],\n            [-6, -21]\n        ],\n        [\n            [2529, 5996],\n            [-8, 0],\n            [2, 67],\n            [1, 47]\n        ],\n        [\n            [3136, 3714],\n            [-20, -8],\n            [-11, 82],\n            [-15, 66],\n            [9, 57],\n            [-15, 25],\n            [-4, 43],\n            [-13, 40]\n        ],\n        [\n            [3067, 4019],\n            [17, 64],\n            [-12, 49],\n            [7, 20],\n            [-5, 22],\n            [10, 30],\n            [1, 50],\n            [1, 41],\n            [6, 20],\n            [-24, 96]\n        ],\n        [\n            [3068, 4411],\n            [21, -5],\n            [14, 1],\n            [6, 18],\n            [25, 24],\n            [14, 22],\n            [37, 10],\n            [-3, -44],\n            [3, -23],\n            [-2, -40],\n            [30, -53],\n            [31, -9],\n            [11, -23],\n            [19, -11],\n            [11, -17],\n            [18, 0],\n            [16, -17],\n            [1, -34],\n            [6, -18],\n            [0, -25],\n            [-8, -1],\n            [11, -69],\n            [53, -2],\n            [-4, -35],\n            [3, -23],\n            [15, -16],\n            [6, -37],\n            [-4, -47],\n            [-8, -26],\n            [3, -33],\n            [-9, -12]\n        ],\n        [\n            [3384, 3866],\n            [-1, 18],\n            [-25, 30],\n            [-26, 1],\n            [-49, -17],\n            [-13, -52],\n            [-1, -32],\n            [-11, -71]\n        ],\n        [\n            [3482, 3537],\n            [6, 34],\n            [3, 35],\n            [1, 32],\n            [-10, 11],\n            [-11, -9],\n            [-10, 2],\n            [-4, 23],\n            [-2, 54],\n            [-5, 18],\n            [-19, 16],\n            [-11, -12],\n            [-30, 11],\n            [2, 81],\n            [-8, 33]\n        ],\n        [\n            [3068, 4411],\n            [-15, -11],\n            [-13, 7],\n            [2, 90],\n            [-23, -35],\n            [-24, 2],\n            [-11, 31],\n            [-18, 4],\n            [5, 25],\n            [-15, 36],\n            [-11, 53],\n            [7, 11],\n            [0, 25],\n            [17, 17],\n            [-3, 32],\n            [7, 20],\n            [2, 28],\n            [32, 40],\n            [22, 11],\n            [4, 9],\n            [25, -2]\n        ],\n        [\n            [3058, 4804],\n            [13, 162],\n            [0, 25],\n            [-4, 34],\n            [-12, 22],\n            [0, 42],\n            [15, 10],\n            [6, -6],\n            [1, 23],\n            [-16, 6],\n            [-1, 37],\n            [54, -2],\n            [10, 21],\n            [7, -19],\n            [6, -35],\n            [5, 8]\n        ],\n        [\n            [3142, 5132],\n            [15, -32],\n            [22, 4],\n            [5, 18],\n            [21, 14],\n            [11, 10],\n            [4, 25],\n            [19, 17],\n            [-1, 12],\n            [-24, 5],\n            [-3, 37],\n            [1, 40],\n            [-13, 15],\n            [5, 6],\n            [21, -8],\n            [22, -15],\n            [8, 14],\n            [20, 9],\n            [31, 23],\n            [10, 22],\n            [-3, 17]\n        ],\n        [\n            [3313, 5365],\n            [14, 2],\n            [7, -13],\n            [-4, -26],\n            [9, -9],\n            [7, -28],\n            [-8, -20],\n            [-4, -51],\n            [7, -30],\n            [2, -27],\n            [17, -28],\n            [14, -3],\n            [3, 12],\n            [8, 3],\n            [13, 10],\n            [9, 16],\n            [15, -5],\n            [7, 2]\n        ],\n        [\n            [3429, 5170],\n            [15, -5],\n            [3, 12],\n            [-5, 12],\n            [3, 17],\n            [11, -5],\n            [13, 6],\n            [16, -13]\n        ],\n        [\n            [3485, 5194],\n            [12, -12],\n            [9, 16],\n            [6, -3],\n            [4, -16],\n            [13, 4],\n            [11, 22],\n            [8, 44],\n            [17, 54]\n        ],\n        [\n            [3565, 5303],\n            [9, 3],\n            [7, -33],\n            [16, -103],\n            [14, -10],\n            [1, -41],\n            [-21, -48],\n            [9, -18],\n            [49, -9],\n            [1, -60],\n            [21, 39],\n            [35, -21],\n            [46, -36],\n            [14, -35],\n            [-5, -32],\n            [33, 18],\n            [54, -32],\n            [41, 3],\n            [41, -49],\n            [36, -66],\n            [21, -17],\n            [24, -3],\n            [10, -18],\n            [9, -76],\n            [5, -35],\n            [-11, -98],\n            [-14, -39],\n            [-39, -82],\n            [-18, -67],\n            [-21, -51],\n            [-7, -1],\n            [-7, -43],\n            [2, -111],\n            [-8, -91],\n            [-3, -39],\n            [-9, -23],\n            [-5, -79],\n            [-28, -77],\n            [-5, -61],\n            [-22, -26],\n            [-7, -35],\n            [-30, 0],\n            [-44, -23],\n            [-19, -26],\n            [-31, -18],\n            [-33, -47],\n            [-23, -58],\n            [-5, -44],\n            [5, -33],\n            [-5, -60],\n            [-6, -28],\n            [-20, -33],\n            [-31, -104],\n            [-24, -47],\n            [-19, -27],\n            [-13, -57],\n            [-18, -33]\n        ],\n        [\n            [3517, 3063],\n            [-8, 33],\n            [13, 28],\n            [-16, 40],\n            [-22, 33],\n            [-29, 38],\n            [-10, -2],\n            [-28, 46],\n            [-18, -7]\n        ],\n        [\n            [8172, 5325],\n            [11, 22],\n            [23, 32]\n        ],\n        [\n            [8206, 5379],\n            [-1, -29],\n            [-2, -37],\n            [-13, 1],\n            [-6, -20],\n            [-12, 31]\n        ],\n        [\n            [7546, 6698],\n            [12, -19],\n            [-2, -36],\n            [-23, -2],\n            [-23, 4],\n            [-18, -9],\n            [-25, 22],\n            [-1, 12]\n        ],\n        [\n            [7466, 6670],\n            [19, 44],\n            [15, 15],\n            [20, -14],\n            [14, -1],\n            [12, -16]\n        ],\n        [\n            [5817, 3752],\n            [-39, -43],\n            [-25, -44],\n            [-10, -40],\n            [-8, -22],\n            [-15, -4],\n            [-5, -29],\n            [-3, -18],\n            [-17, -14],\n            [-23, 3],\n            [-13, 17],\n            [-12, 7],\n            [-14, -14],\n            [-6, -28],\n            [-14, -18],\n            [-13, -26],\n            [-20, -6],\n            [-6, 20],\n            [2, 36],\n            [-16, 56],\n            [-8, 9]\n        ],\n        [\n            [5552, 3594],\n            [0, 173],\n            [27, 2],\n            [1, 210],\n            [21, 2],\n            [43, 21],\n            [10, -24],\n            [18, 23],\n            [9, 0],\n            [15, 13]\n        ],\n        [\n            [5696, 4014],\n            [5, -4]\n        ],\n        [\n            [5701, 4010],\n            [11, -48],\n            [5, -10],\n            [9, -34],\n            [32, -65],\n            [12, -7],\n            [0, -20],\n            [8, -38],\n            [21, -9],\n            [18, -27]\n        ],\n        [\n            [5424, 5496],\n            [23, 4],\n            [5, 16],\n            [5, -2],\n            [7, -13],\n            [34, 23],\n            [12, 23],\n            [15, 20],\n            [-3, 21],\n            [8, 6],\n            [27, -4],\n            [26, 27],\n            [20, 65],\n            [14, 24],\n            [18, 10]\n        ],\n        [\n            [5635, 5716],\n            [3, -26],\n            [16, -36],\n            [0, -25],\n            [-5, -24],\n            [2, -18],\n            [10, -18]\n        ],\n        [\n            [5661, 5569],\n            [21, -25]\n        ],\n        [\n            [5682, 5544],\n            [15, -24],\n            [0, -19],\n            [19, -31],\n            [12, -26],\n            [7, -35],\n            [20, -24],\n            [5, -18]\n        ],\n        [\n            [5760, 5367],\n            [-9, -7],\n            [-18, 2],\n            [-21, 6],\n            [-10, -5],\n            [-5, -14],\n            [-9, -2],\n            [-10, 12],\n            [-31, -29],\n            [-13, 6],\n            [-4, -5],\n            [-8, -35],\n            [-21, 11],\n            [-20, 6],\n            [-18, 22],\n            [-23, 20],\n            [-15, -19],\n            [-10, -30],\n            [-3, -41]\n        ],\n        [\n            [5512, 5265],\n            [-18, 3],\n            [-19, 10],\n            [-16, -32],\n            [-15, -55]\n        ],\n        [\n            [5444, 5191],\n            [-3, 18],\n            [-1, 27],\n            [-13, 19],\n            [-10, 30],\n            [-2, 21],\n            [-13, 31],\n            [2, 18],\n            [-3, 25],\n            [2, 45],\n            [7, 11],\n            [14, 60]\n        ],\n        [\n            [3231, 7808],\n            [20, -8],\n            [26, 1],\n            [-14, -24],\n            [-10, -4],\n            [-35, 25],\n            [-7, 20],\n            [10, 18],\n            [10, -28]\n        ],\n        [\n            [3283, 7958],\n            [-14, -1],\n            [-36, 19],\n            [-26, 28],\n            [10, 5],\n            [37, -15],\n            [28, -25],\n            [1, -11]\n        ],\n        [\n            [1569, 7923],\n            [-14, -8],\n            [-46, 27],\n            [-8, 21],\n            [-25, 21],\n            [-5, 16],\n            [-28, 11],\n            [-11, 32],\n            [2, 14],\n            [30, -13],\n            [17, -9],\n            [26, -6],\n            [9, -21],\n            [14, -28],\n            [28, -24],\n            [11, -33]\n        ],\n        [\n            [3440, 8052],\n            [-18, -52],\n            [18, 20],\n            [19, -12],\n            [-10, -21],\n            [25, -16],\n            [12, 14],\n            [28, -18],\n            [-8, -43],\n            [19, 10],\n            [4, -32],\n            [8, -36],\n            [-11, -52],\n            [-13, -2],\n            [-18, 11],\n            [6, 48],\n            [-8, 8],\n            [-32, -52],\n            [-17, 2],\n            [20, 28],\n            [-27, 14],\n            [-30, -3],\n            [-54, 2],\n            [-4, 17],\n            [17, 21],\n            [-12, 16],\n            [24, 36],\n            [28, 94],\n            [18, 33],\n            [24, 21],\n            [13, -3],\n            [-6, -16],\n            [-15, -37]\n        ],\n        [\n            [1313, 8250],\n            [27, 5],\n            [-8, -67],\n            [24, -48],\n            [-11, 0],\n            [-17, 27],\n            [-10, 27],\n            [-14, 19],\n            [-5, 26],\n            [1, 19],\n            [13, -8]\n        ],\n        [\n            [2798, 8730],\n            [-11, -31],\n            [-12, 5],\n            [-8, 17],\n            [2, 4],\n            [10, 18],\n            [12, -1],\n            [7, -12]\n        ],\n        [\n            [2725, 8762],\n            [-33, -32],\n            [-19, 1],\n            [-6, 16],\n            [20, 27],\n            [38, 0],\n            [0, -12]\n        ],\n        [\n            [2634, 8936],\n            [5, -26],\n            [15, 9],\n            [16, -15],\n            [30, -20],\n            [32, -19],\n            [2, -28],\n            [21, 5],\n            [20, -20],\n            [-25, -18],\n            [-43, 14],\n            [-16, 26],\n            [-27, -31],\n            [-40, -31],\n            [-9, 35],\n            [-38, -6],\n            [24, 30],\n            [4, 46],\n            [9, 54],\n            [20, -5]\n        ],\n        [\n            [2892, 9024],\n            [-31, -3],\n            [-7, 29],\n            [12, 34],\n            [26, 8],\n            [21, -17],\n            [1, -25],\n            [-4, -8],\n            [-18, -18]\n        ],\n        [\n            [2343, 9140],\n            [-17, -21],\n            [-38, 18],\n            [-22, -6],\n            [-38, 26],\n            [24, 19],\n            [19, 25],\n            [30, -16],\n            [17, -11],\n            [8, -11],\n            [17, -23]\n        ],\n        [\n            [3135, 7724],\n            [-18, 33],\n            [0, 81],\n            [-13, 17],\n            [-18, -10],\n            [-10, 16],\n            [-21, -45],\n            [-8, -46],\n            [-10, -27],\n            [-12, -9],\n            [-9, -3],\n            [-3, -15],\n            [-51, 0],\n            [-42, 0],\n            [-12, -11],\n            [-30, -42],\n            [-3, -5],\n            [-9, -23],\n            [-26, 0],\n            [-27, 0],\n            [-12, -10],\n            [4, -11],\n            [2, -18],\n            [0, -6],\n            [-36, -30],\n            [-29, -9],\n            [-32, -31],\n            [-7, 0],\n            [-10, 9],\n            [-3, 8],\n            [1, 6],\n            [6, 21],\n            [13, 33],\n            [8, 35],\n            [-5, 51],\n            [-6, 53],\n            [-29, 28],\n            [3, 11],\n            [-4, 7],\n            [-8, 0],\n            [-5, 9],\n            [-2, 14],\n            [-5, -6],\n            [-7, 2],\n            [1, 6],\n            [-6, 6],\n            [-3, 15],\n            [-21, 19],\n            [-23, 20],\n            [-27, 23],\n            [-26, 21],\n            [-25, -17],\n            [-9, 0],\n            [-34, 15],\n            [-23, -8],\n            [-27, 19],\n            [-28, 9],\n            [-19, 4],\n            [-9, 10],\n            [-5, 32],\n            [-9, 0],\n            [-1, -23],\n            [-57, 0],\n            [-95, 0],\n            [-94, 0],\n            [-84, 0],\n            [-83, 0],\n            [-82, 0],\n            [-85, 0],\n            [-27, 0],\n            [-82, 0],\n            [-79, 0]\n        ],\n        [\n            [1588, 7952],\n            [-4, 0],\n            [-54, 58],\n            [-20, 26],\n            [-50, 24],\n            [-15, 53],\n            [3, 36],\n            [-35, 25],\n            [-5, 48],\n            [-34, 43],\n            [0, 30]\n        ],\n        [\n            [1374, 8295],\n            [15, 29],\n            [0, 37],\n            [-48, 37],\n            [-28, 68],\n            [-17, 42],\n            [-26, 27],\n            [-19, 24],\n            [-14, 31],\n            [-28, -20],\n            [-27, -33],\n            [-25, 39],\n            [-19, 26],\n            [-27, 16],\n            [-28, 2],\n            [0, 337],\n            [1, 219]\n        ],\n        [\n            [1084, 9176],\n            [51, -14],\n            [44, -29],\n            [29, -5],\n            [24, 24],\n            [34, 19],\n            [41, -7],\n            [42, 26],\n            [45, 14],\n            [20, -24],\n            [20, 14],\n            [6, 27],\n            [20, -6],\n            [47, -53],\n            [37, 40],\n            [3, -45],\n            [34, 10],\n            [11, 17],\n            [34, -3],\n            [42, -25],\n            [65, -22],\n            [38, -10],\n            [28, 4],\n            [37, -30],\n            [-39, -29],\n            [50, -13],\n            [75, 7],\n            [24, 11],\n            [29, -36],\n            [31, 30],\n            [-29, 25],\n            [18, 20],\n            [34, 3],\n            [22, 6],\n            [23, -14],\n            [28, -32],\n            [31, 5],\n            [49, -27],\n            [43, 9],\n            [40, -1],\n            [-3, 37],\n            [25, 10],\n            [43, -20],\n            [0, -56],\n            [17, 47],\n            [23, -1],\n            [12, 59],\n            [-30, 36],\n            [-32, 24],\n            [2, 65],\n            [33, 43],\n            [37, -9],\n            [28, -26],\n            [38, -67],\n            [-25, -29],\n            [52, -12],\n            [-1, -60],\n            [38, 46],\n            [33, -38],\n            [-9, -44],\n            [27, -40],\n            [29, 43],\n            [21, 51],\n            [1, 65],\n            [40, -5],\n            [41, -8],\n            [37, -30],\n            [2, -29],\n            [-21, -31],\n            [20, -32],\n            [-4, -29],\n            [-54, -41],\n            [-39, -9],\n            [-29, 18],\n            [-8, -30],\n            [-27, -50],\n            [-8, -26],\n            [-32, -40],\n            [-40, -4],\n            [-22, -25],\n            [-2, -38],\n            [-32, -7],\n            [-34, -48],\n            [-30, -67],\n            [-11, -46],\n            [-1, -69],\n            [40, -10],\n            [13, -55],\n            [13, -45],\n            [39, 12],\n            [51, -26],\n            [28, -22],\n            [20, -28],\n            [35, -17],\n            [29, -24],\n            [46, -4],\n            [30, -6],\n            [-4, -51],\n            [8, -59],\n            [21, -66],\n            [41, -56],\n            [21, 19],\n            [15, 61],\n            [-14, 93],\n            [-20, 31],\n            [45, 28],\n            [31, 41],\n            [16, 41],\n            [-3, 40],\n            [-19, 50],\n            [-33, 44],\n            [32, 62],\n            [-12, 54],\n            [-9, 92],\n            [19, 14],\n            [48, -16],\n            [29, -6],\n            [23, 15],\n            [25, -20],\n            [35, -34],\n            [8, -23],\n            [50, -4],\n            [-1, -50],\n            [9, -74],\n            [25, -10],\n            [21, -35],\n            [40, 33],\n            [26, 65],\n            [19, 28],\n            [21, -53],\n            [36, -75],\n            [31, -71],\n            [-11, -37],\n            [37, -33],\n            [25, -34],\n            [44, -15],\n            [18, -19],\n            [11, -50],\n            [22, -8],\n            [11, -22],\n            [2, -67],\n            [-20, -22],\n            [-20, -21],\n            [-46, -21],\n            [-35, -48],\n            [-47, -10],\n            [-59, 13],\n            [-42, 0],\n            [-29, -4],\n            [-23, -43],\n            [-35, -26],\n            [-40, -78],\n            [-32, -54],\n            [23, 9],\n            [45, 78],\n            [58, 49],\n            [42, 6],\n            [24, -29],\n            [-26, -40],\n            [9, -63],\n            [9, -45],\n            [36, -29],\n            [46, 8],\n            [28, 67],\n            [2, -43],\n            [17, -22],\n            [-34, -38],\n            [-61, -36],\n            [-28, -23],\n            [-31, -43],\n            [-21, 4],\n            [-1, 50],\n            [48, 49],\n            [-44, -2],\n            [-31, -7]\n        ],\n        [\n            [1829, 9377],\n            [-14, -27],\n            [61, 17],\n            [39, -29],\n            [31, 30],\n            [26, -20],\n            [23, -58],\n            [14, 25],\n            [-20, 60],\n            [24, 9],\n            [28, -9],\n            [31, -24],\n            [17, -58],\n            [9, -41],\n            [47, -30],\n            [50, -28],\n            [-3, -26],\n            [-46, -4],\n            [18, -23],\n            [-9, -22],\n            [-51, 9],\n            [-48, 16],\n            [-32, -3],\n            [-52, -20],\n            [-70, -9],\n            [-50, -6],\n            [-15, 28],\n            [-38, 16],\n            [-24, -6],\n            [-35, 47],\n            [19, 6],\n            [43, 10],\n            [39, -3],\n            [36, 11],\n            [-54, 13],\n            [-59, -4],\n            [-39, 1],\n            [-15, 22],\n            [64, 23],\n            [-42, -1],\n            [-49, 16],\n            [23, 44],\n            [20, 24],\n            [74, 36],\n            [29, -12]\n        ],\n        [\n            [2097, 9395],\n            [-24, -39],\n            [-44, 41],\n            [10, 9],\n            [37, 2],\n            [21, -13]\n        ],\n        [\n            [2879, 9376],\n            [3, -16],\n            [-30, 2],\n            [-30, 1],\n            [-30, -8],\n            [-8, 3],\n            [-31, 32],\n            [1, 21],\n            [14, 4],\n            [63, -6],\n            [48, -33]\n        ],\n        [\n            [2595, 9379],\n            [22, -36],\n            [26, 47],\n            [70, 24],\n            [48, -61],\n            [-4, -38],\n            [55, 17],\n            [26, 23],\n            [62, -30],\n            [38, -28],\n            [3, -25],\n            [52, 13],\n            [29, -38],\n            [67, -23],\n            [24, -24],\n            [26, -55],\n            [-51, -28],\n            [66, -38],\n            [44, -13],\n            [40, -55],\n            [44, -3],\n            [-9, -42],\n            [-49, -69],\n            [-34, 26],\n            [-44, 57],\n            [-36, -8],\n            [-3, -34],\n            [29, -34],\n            [38, -27],\n            [11, -16],\n            [18, -58],\n            [-9, -43],\n            [-35, 16],\n            [-70, 47],\n            [39, -51],\n            [29, -35],\n            [5, -21],\n            [-76, 24],\n            [-59, 34],\n            [-34, 29],\n            [10, 17],\n            [-42, 30],\n            [-40, 29],\n            [0, -18],\n            [-80, -9],\n            [-23, 20],\n            [18, 44],\n            [52, 1],\n            [57, 7],\n            [-9, 21],\n            [10, 30],\n            [36, 57],\n            [-8, 27],\n            [-11, 20],\n            [-42, 29],\n            [-57, 20],\n            [18, 15],\n            [-29, 36],\n            [-25, 4],\n            [-22, 20],\n            [-14, -18],\n            [-51, -7],\n            [-101, 13],\n            [-59, 17],\n            [-45, 9],\n            [-23, 21],\n            [29, 27],\n            [-39, 0],\n            [-9, 60],\n            [21, 53],\n            [29, 24],\n            [72, 16],\n            [-21, -39]\n        ],\n        [\n            [2212, 9420],\n            [33, -12],\n            [50, 7],\n            [7, -17],\n            [-26, -28],\n            [42, -26],\n            [-5, -53],\n            [-45, -23],\n            [-27, 5],\n            [-19, 23],\n            [-69, 45],\n            [0, 19],\n            [57, -7],\n            [-31, 38],\n            [33, 29]\n        ],\n        [\n            [2411, 9357],\n            [-30, -45],\n            [-32, 3],\n            [-17, 52],\n            [1, 29],\n            [14, 25],\n            [28, 16],\n            [58, -2],\n            [53, -14],\n            [-42, -53],\n            [-33, -11]\n        ],\n        [\n            [1654, 9275],\n            [-73, -29],\n            [-15, 26],\n            [-64, 31],\n            [12, 25],\n            [19, 43],\n            [24, 39],\n            [-27, 36],\n            [94, 10],\n            [39, -13],\n            [71, -3],\n            [27, -17],\n            [30, -25],\n            [-35, -15],\n            [-68, -41],\n            [-34, -42],\n            [0, -25]\n        ],\n        [\n            [2399, 9487],\n            [-15, -23],\n            [-40, 5],\n            [-34, 15],\n            [15, 27],\n            [40, 16],\n            [24, -21],\n            [10, -19]\n        ],\n        [\n            [2264, 9590],\n            [21, -27],\n            [1, -31],\n            [-13, -44],\n            [-46, -6],\n            [-30, 10],\n            [1, 34],\n            [-45, -4],\n            [-2, 45],\n            [30, -2],\n            [41, 21],\n            [40, -4],\n            [2, 8]\n        ],\n        [\n            [1994, 9559],\n            [11, -21],\n            [25, 10],\n            [29, -2],\n            [5, -29],\n            [-17, -28],\n            [-94, -10],\n            [-70, -25],\n            [-43, -2],\n            [-3, 20],\n            [57, 26],\n            [-125, -7],\n            [-39, 10],\n            [38, 58],\n            [26, 17],\n            [78, -20],\n            [50, -35],\n            [48, -5],\n            [-40, 57],\n            [26, 21],\n            [29, -7],\n            [9, -28]\n        ],\n        [\n            [2370, 9612],\n            [30, -19],\n            [55, 0],\n            [24, -19],\n            [-6, -22],\n            [32, -14],\n            [17, -14],\n            [38, -2],\n            [40, -5],\n            [44, 13],\n            [57, 5],\n            [45, -5],\n            [30, -22],\n            [6, -24],\n            [-17, -16],\n            [-42, -13],\n            [-35, 8],\n            [-80, -10],\n            [-57, -1],\n            [-45, 8],\n            [-74, 19],\n            [-9, 32],\n            [-4, 29],\n            [-27, 26],\n            [-58, 7],\n            [-32, 19],\n            [10, 24],\n            [58, -4]\n        ],\n        [\n            [1772, 9645],\n            [-4, -46],\n            [-21, -20],\n            [-26, -3],\n            [-52, -26],\n            [-44, -9],\n            [-38, 13],\n            [47, 44],\n            [57, 39],\n            [43, -1],\n            [38, 9]\n        ],\n        [\n            [2393, 9637],\n            [-13, -2],\n            [-52, 4],\n            [-7, 17],\n            [56, -1],\n            [19, -11],\n            [-3, -7]\n        ],\n        [\n            [1939, 9648],\n            [-52, -17],\n            [-41, 19],\n            [23, 19],\n            [40, 6],\n            [39, -10],\n            [-9, -17]\n        ],\n        [\n            [1954, 9701],\n            [-34, -11],\n            [-46, 0],\n            [0, 8],\n            [29, 18],\n            [14, -3],\n            [37, -12]\n        ],\n        [\n            [2338, 9669],\n            [-41, -12],\n            [-23, 13],\n            [-12, 23],\n            [-2, 24],\n            [36, -2],\n            [16, -4],\n            [33, -21],\n            [-7, -21]\n        ],\n        [\n            [2220, 9685],\n            [11, -25],\n            [-45, 7],\n            [-46, 19],\n            [-62, 2],\n            [27, 18],\n            [-34, 14],\n            [-2, 22],\n            [55, -8],\n            [75, -21],\n            [21, -28]\n        ],\n        [\n            [2583, 9764],\n            [33, -20],\n            [-38, -17],\n            [-51, -45],\n            [-50, -4],\n            [-57, 8],\n            [-30, 24],\n            [0, 21],\n            [22, 16],\n            [-50, 0],\n            [-31, 19],\n            [-18, 27],\n            [20, 26],\n            [19, 18],\n            [28, 4],\n            [-12, 14],\n            [65, 3],\n            [35, -32],\n            [47, -12],\n            [46, -11],\n            [22, -39]\n        ],\n        [\n            [3097, 9967],\n            [74, -4],\n            [60, -8],\n            [51, -16],\n            [-2, -16],\n            [-67, -25],\n            [-68, -12],\n            [-25, -14],\n            [61, 1],\n            [-66, -36],\n            [-45, -17],\n            [-48, -48],\n            [-57, -10],\n            [-18, -12],\n            [-84, -6],\n            [39, -8],\n            [-20, -10],\n            [23, -29],\n            [-26, -21],\n            [-43, -16],\n            [-13, -24],\n            [-39, -17],\n            [4, -14],\n            [48, 3],\n            [0, -15],\n            [-74, -35],\n            [-73, 16],\n            [-81, -9],\n            [-42, 7],\n            [-52, 3],\n            [-4, 29],\n            [52, 13],\n            [-14, 43],\n            [17, 4],\n            [74, -26],\n            [-38, 38],\n            [-45, 11],\n            [23, 23],\n            [49, 14],\n            [8, 21],\n            [-39, 23],\n            [-12, 31],\n            [76, -3],\n            [22, -6],\n            [43, 21],\n            [-62, 7],\n            [-98, -4],\n            [-49, 20],\n            [-23, 24],\n            [-32, 17],\n            [-6, 21],\n            [41, 11],\n            [32, 2],\n            [55, 9],\n            [41, 22],\n            [34, -3],\n            [30, -16],\n            [21, 32],\n            [37, 9],\n            [50, 7],\n            [85, 2],\n            [14, -6],\n            [81, 10],\n            [60, -4],\n            [60, -4]\n        ],\n        [\n            [5290, 7828],\n            [-3, -24],\n            [-12, -10],\n            [-20, 7],\n            [-6, -24],\n            [-14, -2],\n            [-5, 10],\n            [-15, -20],\n            [-13, -3],\n            [-12, 13]\n        ],\n        [\n            [5190, 7775],\n            [-10, 25],\n            [-13, -9],\n            [0, 27],\n            [21, 33],\n            [-1, 15],\n            [12, -5],\n            [8, 10]\n        ],\n        [\n            [5207, 7871],\n            [24, -1],\n            [5, 13],\n            [30, -18]\n        ],\n        [\n            [3140, 1814],\n            [-10, -24],\n            [-23, -18],\n            [-14, 2],\n            [-16, 5],\n            [-21, 18],\n            [-29, 8],\n            [-35, 33],\n            [-28, 32],\n            [-38, 66],\n            [23, -12],\n            [39, -40],\n            [36, -21],\n            [15, 27],\n            [9, 41],\n            [25, 24],\n            [20, -7]\n        ],\n        [\n            [3095, 1968],\n            [-25, 0],\n            [-13, -14],\n            [-25, -22],\n            [-5, -55],\n            [-11, -1],\n            [-32, 19],\n            [-32, 41],\n            [-34, 34],\n            [-9, 37],\n            [8, 35],\n            [-14, 39],\n            [-4, 101],\n            [12, 57],\n            [30, 45],\n            [-43, 18],\n            [27, 52],\n            [9, 98],\n            [31, -21],\n            [15, 123],\n            [-19, 15],\n            [-9, -73],\n            [-17, 8],\n            [9, 84],\n            [9, 110],\n            [13, 40],\n            [-8, 58],\n            [-2, 66],\n            [11, 2],\n            [17, 96],\n            [20, 94],\n            [11, 88],\n            [-6, 89],\n            [8, 49],\n            [-3, 72],\n            [16, 73],\n            [5, 114],\n            [9, 123],\n            [9, 132],\n            [-2, 96],\n            [-6, 84]\n        ],\n        [\n            [3045, 3974],\n            [14, 15],\n            [8, 30]\n        ],\n        [\n            [8064, 6161],\n            [-24, -28],\n            [-23, 18],\n            [0, 51],\n            [13, 26],\n            [31, 17],\n            [16, -1],\n            [6, -23],\n            [-12, -26],\n            [-7, -34]\n        ],\n        [\n            [8628, 7562],\n            [-18, 35],\n            [-11, -33],\n            [-43, -26],\n            [4, -31],\n            [-24, 2],\n            [-13, 19],\n            [-19, -42],\n            [-30, -32],\n            [-23, -38]\n        ],\n        [\n            [8451, 7416],\n            [-39, -17],\n            [-20, -27],\n            [-30, -17],\n            [15, 28],\n            [-6, 23],\n            [22, 40],\n            [-15, 30],\n            [-24, -20],\n            [-32, -41],\n            [-17, -39],\n            [-27, -2],\n            [-14, -28],\n            [15, -40],\n            [22, -10],\n            [1, -26],\n            [22, -17],\n            [31, 42],\n            [25, -23],\n            [18, -2],\n            [4, -31],\n            [-39, -16],\n            [-13, -32],\n            [-27, -30],\n            [-14, -41],\n            [30, -33],\n            [11, -58],\n            [17, -54],\n            [18, -45],\n            [0, -44],\n            [-17, -16],\n            [6, -32],\n            [17, -18],\n            [-5, -48],\n            [-7, -47],\n            [-15, -5],\n            [-21, -64],\n            [-22, -78],\n            [-26, -70],\n            [-38, -55],\n            [-39, -50],\n            [-31, -6],\n            [-17, -27],\n            [-10, 20],\n            [-15, -30],\n            [-39, -29],\n            [-29, -9],\n            [-10, -63],\n            [-15, -3],\n            [-8, 43],\n            [7, 22],\n            [-37, 19],\n            [-13, -9]\n        ],\n        [\n            [8001, 6331],\n            [-28, 15],\n            [-14, 24],\n            [5, 34],\n            [-26, 11],\n            [-13, 22],\n            [-24, -31],\n            [-27, -7],\n            [-22, 0],\n            [-15, -14]\n        ],\n        [\n            [7837, 6385],\n            [-14, -9],\n            [4, -68],\n            [-15, 2],\n            [-2, 14]\n        ],\n        [\n            [7810, 6324],\n            [-1, 24],\n            [-20, -17],\n            [-12, 11],\n            [-21, 22],\n            [8, 49],\n            [-18, 12],\n            [-6, 54],\n            [-30, -10],\n            [4, 70],\n            [26, 50],\n            [1, 48],\n            [-1, 46],\n            [-12, 14],\n            [-9, 35],\n            [-16, -5]\n        ],\n        [\n            [7703, 6727],\n            [-30, 9],\n            [9, 25],\n            [-13, 36],\n            [-20, -24],\n            [-23, 14],\n            [-32, -37],\n            [-25, -44],\n            [-23, -8]\n        ],\n        [\n            [7466, 6670],\n            [-2, 47],\n            [-17, -13]\n        ],\n        [\n            [7447, 6704],\n            [-32, 6],\n            [-32, 14],\n            [-22, 26],\n            [-22, 11],\n            [-9, 29],\n            [-16, 8],\n            [-28, 39],\n            [-22, 18],\n            [-12, -14]\n        ],\n        [\n            [7252, 6841],\n            [-38, 41],\n            [-28, 37],\n            [-7, 65],\n            [20, -7],\n            [1, 30],\n            [-12, 30],\n            [3, 48],\n            [-30, 69]\n        ],\n        [\n            [7161, 7154],\n            [-45, 24],\n            [-8, 46],\n            [-21, 27]\n        ],\n        [\n            [7082, 7268],\n            [-4, 34],\n            [1, 23],\n            [-17, 13],\n            [-9, -6],\n            [-7, 55]\n        ],\n        [\n            [7046, 7387],\n            [8, 13],\n            [-4, 14],\n            [26, 28],\n            [20, 12],\n            [29, -8],\n            [11, 38],\n            [35, 7],\n            [10, 23],\n            [44, 32],\n            [4, 13]\n        ],\n        [\n            [7229, 7559],\n            [-2, 34],\n            [19, 15],\n            [-25, 103],\n            [55, 24],\n            [14, 13],\n            [20, 106],\n            [55, -20],\n            [15, 27],\n            [2, 59],\n            [23, 6],\n            [21, 39]\n        ],\n        [\n            [7426, 7965],\n            [11, 5]\n        ],\n        [\n            [7437, 7970],\n            [7, -41],\n            [23, -32],\n            [40, -22],\n            [19, -47],\n            [-10, -70],\n            [10, -25],\n            [33, -10],\n            [37, -8],\n            [33, -37],\n            [18, -7],\n            [12, -54],\n            [17, -35],\n            [30, 1],\n            [58, -13],\n            [36, 8],\n            [28, -9],\n            [41, -36],\n            [34, 0],\n            [12, -18],\n            [32, 32],\n            [45, 20],\n            [42, 2],\n            [32, 21],\n            [20, 32],\n            [20, 20],\n            [-5, 19],\n            [-9, 23],\n            [15, 38],\n            [15, -5],\n            [29, -12],\n            [28, 31],\n            [42, 23],\n            [20, 39],\n            [20, 17],\n            [40, 8],\n            [22, -7],\n            [3, 21],\n            [-25, 41],\n            [-22, 19],\n            [-22, -22],\n            [-27, 10],\n            [-16, -8],\n            [-7, 24],\n            [20, 59],\n            [13, 45]\n        ],\n        [\n            [8240, 8005],\n            [34, -23],\n            [39, 38],\n            [-1, 26],\n            [26, 62],\n            [15, 19],\n            [0, 33],\n            [-16, 14],\n            [23, 29],\n            [35, 11],\n            [37, 2],\n            [41, -18],\n            [25, -22],\n            [17, -59],\n            [10, -26],\n            [10, -36],\n            [10, -58],\n            [49, -19],\n            [32, -42],\n            [12, -55],\n            [42, 0],\n            [24, 23],\n            [46, 17],\n            [-15, -53],\n            [-11, -21],\n            [-9, -65],\n            [-19, -58],\n            [-33, 11],\n            [-24, -21],\n            [7, -51],\n            [-4, -69],\n            [-14, -2],\n            [0, -30]\n        ],\n        [\n            [4920, 5353],\n            [-12, -1],\n            [-20, 12],\n            [-18, -1],\n            [-33, -10],\n            [-19, -18],\n            [-27, -21],\n            [-6, 1]\n        ],\n        [\n            [4785, 5315],\n            [2, 49],\n            [3, 7],\n            [-1, 24],\n            [-12, 24],\n            [-8, 4],\n            [-8, 17],\n            [6, 26],\n            [-3, 28],\n            [1, 18]\n        ],\n        [\n            [4765, 5512],\n            [5, 0],\n            [1, 25],\n            [-2, 12],\n            [3, 8],\n            [10, 7],\n            [-7, 47],\n            [-6, 25],\n            [2, 20],\n            [5, 4]\n        ],\n        [\n            [4776, 5660],\n            [4, 6],\n            [8, -9],\n            [21, -1],\n            [5, 18],\n            [5, -1],\n            [8, 6],\n            [4, -25],\n            [7, 7],\n            [11, 9]\n        ],\n        [\n            [4921, 5627],\n            [7, -84],\n            [-11, -50],\n            [-8, -66],\n            [12, -51],\n            [-1, -23]\n        ],\n        [\n            [5363, 5191],\n            [-4, 4],\n            [-16, -8],\n            [-17, 8],\n            [-13, -4]\n        ],\n        [\n            [5313, 5191],\n            [-45, 1]\n        ],\n        [\n            [5268, 5192],\n            [4, 47],\n            [-11, 39],\n            [-13, 10],\n            [-6, 27],\n            [-7, 8],\n            [1, 16]\n        ],\n        [\n            [5236, 5339],\n            [7, 42],\n            [13, 57],\n            [8, 1],\n            [17, 34],\n            [10, 1],\n            [16, -24],\n            [19, 20],\n            [2, 25],\n            [7, 23],\n            [4, 30],\n            [15, 25],\n            [5, 41],\n            [6, 13],\n            [4, 31],\n            [7, 37],\n            [24, 46],\n            [1, 20],\n            [3, 10],\n            [-11, 24]\n        ],\n        [\n            [5393, 5795],\n            [1, 19],\n            [8, 3]\n        ],\n        [\n            [5402, 5817],\n            [11, -38],\n            [2, -39],\n            [-1, -39],\n            [15, -54],\n            [-15, 1],\n            [-8, -4],\n            [-13, 6],\n            [-6, -28],\n            [16, -35],\n            [13, -10],\n            [3, -24],\n            [9, -41],\n            [-4, -16]\n        ],\n        [\n            [5444, 5191],\n            [-2, -31],\n            [-22, 14],\n            [-22, 15],\n            [-35, 2]\n        ],\n        [\n            [5856, 5265],\n            [-2, -69],\n            [11, -8],\n            [-9, -21],\n            [-10, -16],\n            [-11, -31],\n            [-6, -27],\n            [-1, -48],\n            [-7, -22],\n            [0, -45]\n        ],\n        [\n            [5821, 4978],\n            [-8, -16],\n            [-1, -35],\n            [-4, -5],\n            [-2, -32]\n        ],\n        [\n            [5814, 4792],\n            [5, -55],\n            [-2, -30],\n            [5, -35],\n            [16, -33],\n            [15, -74]\n        ],\n        [\n            [5853, 4565],\n            [-11, 6],\n            [-37, -10],\n            [-7, -7],\n            [-8, -38],\n            [6, -26],\n            [-5, -70],\n            [-3, -59],\n            [7, -11],\n            [19, -23],\n            [8, 11],\n            [2, -64],\n            [-21, 1],\n            [-11, 32],\n            [-10, 25],\n            [-22, 9],\n            [-6, 31],\n            [-17, -19],\n            [-22, 8],\n            [-10, 27],\n            [-17, 6],\n            [-13, -2],\n            [-2, 19],\n            [-9, 1]\n        ],\n        [\n            [5342, 4697],\n            [-4, 18]\n        ],\n        [\n            [5360, 4775],\n            [8, -6],\n            [9, 23],\n            [15, -1],\n            [2, -17],\n            [11, -10],\n            [16, 37],\n            [16, 29],\n            [7, 19],\n            [-1, 48],\n            [12, 58],\n            [13, 30],\n            [18, 29],\n            [3, 18],\n            [1, 22],\n            [5, 21],\n            [-2, 33],\n            [4, 52],\n            [5, 37],\n            [8, 32],\n            [2, 36]\n        ],\n        [\n            [5760, 5367],\n            [17, -49],\n            [12, -7],\n            [8, 10],\n            [12, -4],\n            [16, 12],\n            [6, -25],\n            [25, -39]\n        ],\n        [\n            [5330, 4760],\n            [-22, 62]\n        ],\n        [\n            [5308, 4822],\n            [21, 33],\n            [-11, 39],\n            [10, 15],\n            [19, 7],\n            [2, 26],\n            [15, -28],\n            [24, -2],\n            [9, 27],\n            [3, 40],\n            [-3, 46],\n            [-13, 35],\n            [12, 68],\n            [-7, 12],\n            [-21, -5],\n            [-7, 31],\n            [2, 25]\n        ],\n        [\n            [2906, 5049],\n            [-12, 14],\n            [-14, 19],\n            [-7, -9],\n            [-24, 8],\n            [-7, 25],\n            [-5, -1],\n            [-28, 34]\n        ],\n        [\n            [2809, 5139],\n            [-3, 18],\n            [10, 5],\n            [-1, 29],\n            [6, 22],\n            [14, 4],\n            [12, 37],\n            [10, 31],\n            [-10, 14],\n            [5, 34],\n            [-6, 54],\n            [6, 16],\n            [-4, 50],\n            [-12, 31]\n        ],\n        [\n            [2836, 5484],\n            [4, 29],\n            [9, -4],\n            [5, 17],\n            [-6, 35],\n            [3, 9]\n        ],\n        [\n            [2851, 5570],\n            [14, -2],\n            [21, 41],\n            [12, 6],\n            [0, 20],\n            [5, 50],\n            [16, 27],\n            [17, 1],\n            [3, 13],\n            [21, -5],\n            [22, 30],\n            [11, 13],\n            [14, 28],\n            [9, -3],\n            [8, -16],\n            [-6, -20]\n        ],\n        [\n            [3018, 5753],\n            [-18, -10],\n            [-7, -29],\n            [-10, -17],\n            [-8, -22],\n            [-4, -42],\n            [-8, -35],\n            [15, -4],\n            [3, -27],\n            [6, -13],\n            [3, -24],\n            [-4, -22],\n            [1, -12],\n            [7, -5],\n            [7, -20],\n            [36, 5],\n            [16, -7],\n            [19, -51],\n            [11, 6],\n            [20, -3],\n            [16, 7],\n            [10, -10],\n            [-5, -32],\n            [-6, -20],\n            [-2, -42],\n            [5, -40],\n            [8, -17],\n            [1, -13],\n            [-14, -30],\n            [10, -13],\n            [8, -21],\n            [8, -58]\n        ],\n        [\n            [3058, 4804],\n            [-14, 31],\n            [-8, 1],\n            [18, 61],\n            [-21, 27],\n            [-17, -5],\n            [-10, 10],\n            [-15, -15],\n            [-21, 7],\n            [-16, 62],\n            [-13, 15],\n            [-9, 28],\n            [-19, 28],\n            [-7, -5]\n        ],\n        [\n            [2695, 5543],\n            [-15, 14],\n            [-6, 12],\n            [4, 10],\n            [-1, 13],\n            [-8, 14],\n            [-11, 12],\n            [-10, 8],\n            [-1, 17],\n            [-8, 10],\n            [2, -17],\n            [-5, -14],\n            [-7, 17],\n            [-9, 5],\n            [-4, 12],\n            [1, 18],\n            [3, 19],\n            [-8, 8],\n            [7, 12]\n        ],\n        [\n            [2619, 5713],\n            [4, 7],\n            [18, -15],\n            [7, 7],\n            [9, -5],\n            [4, -12],\n            [8, -4],\n            [7, 13]\n        ],\n        [\n            [2676, 5704],\n            [7, -32],\n            [11, -24],\n            [13, -25]\n        ],\n        [\n            [2707, 5623],\n            [-11, -6],\n            [0, -23],\n            [6, -9],\n            [-4, -7],\n            [1, -11],\n            [-2, -12],\n            [-2, -12]\n        ],\n        [\n            [2715, 6427],\n            [23, -4],\n            [22, 0],\n            [26, -21],\n            [11, -21],\n            [26, 6],\n            [10, -13],\n            [24, -37],\n            [17, -27],\n            [9, 1],\n            [17, -12],\n            [-2, -17],\n            [20, -2],\n            [21, -24],\n            [-3, -14],\n            [-19, -7],\n            [-18, -3],\n            [-19, 4],\n            [-40, -5],\n            [18, 32],\n            [-11, 16],\n            [-18, 4],\n            [-9, 17],\n            [-7, 33],\n            [-16, -2],\n            [-26, 16],\n            [-8, 12],\n            [-36, 10],\n            [-10, 11],\n            [11, 15],\n            [-28, 3],\n            [-20, -31],\n            [-11, -1],\n            [-4, -14],\n            [-14, -7],\n            [-12, 6],\n            [15, 18],\n            [6, 22],\n            [13, 13],\n            [14, 11],\n            [21, 6],\n            [7, 6]\n        ],\n        [\n            [5909, 7133],\n            [2, 1],\n            [4, 14],\n            [20, -1],\n            [25, 18],\n            [-19, -25],\n            [2, -11]\n        ],\n        [\n            [5943, 7129],\n            [-3, 2],\n            [-5, -5],\n            [-4, 1],\n            [-2, -2],\n            [0, 6],\n            [-2, 4],\n            [-6, 0],\n            [-7, -5],\n            [-5, 3]\n        ],\n        [\n            [5943, 7129],\n            [1, -5],\n            [-28, -24],\n            [-14, 8],\n            [-7, 23],\n            [14, 2]\n        ],\n        [\n            [5377, 7945],\n            [-16, 25],\n            [-14, 15],\n            [-3, 25],\n            [-5, 17],\n            [21, 13],\n            [10, 15],\n            [20, 11],\n            [7, 11],\n            [7, -6],\n            [13, 6]\n        ],\n        [\n            [5417, 8077],\n            [13, -19],\n            [21, -5],\n            [-2, -17],\n            [15, -12],\n            [4, 15],\n            [19, -6],\n            [3, -19],\n            [20, -3],\n            [13, -29]\n        ],\n        [\n            [5523, 7982],\n            [-8, 0],\n            [-4, -11],\n            [-7, -3],\n            [-2, -13],\n            [-5, -3],\n            [-1, -5],\n            [-9, -7],\n            [-12, 1],\n            [-4, -13]\n        ],\n        [\n            [5275, 8306],\n            [1, -23],\n            [28, -14],\n            [-1, -21],\n            [29, 11],\n            [15, 16],\n            [32, -23],\n            [13, -19]\n        ],\n        [\n            [5392, 8233],\n            [6, -30],\n            [-8, -16],\n            [11, -21],\n            [6, -31],\n            [-2, -21],\n            [12, -37]\n        ],\n        [\n            [5207, 7871],\n            [3, 42],\n            [14, 40],\n            [-40, 11],\n            [-13, 16]\n        ],\n        [\n            [5171, 7980],\n            [2, 26],\n            [-6, 13]\n        ],\n        [\n            [5171, 8059],\n            [-5, 62],\n            [17, 0],\n            [7, 22],\n            [6, 54],\n            [-5, 20]\n        ],\n        [\n            [5191, 8217],\n            [6, 13],\n            [23, 3],\n            [5, -13],\n            [19, 29],\n            [-6, 22],\n            [-2, 34]\n        ],\n        [\n            [5236, 8305],\n            [21, -8],\n            [18, 9]\n        ],\n        [\n            [6196, 5808],\n            [7, -19],\n            [-1, -24],\n            [-16, -14],\n            [12, -16]\n        ],\n        [\n            [6198, 5735],\n            [-10, -32]\n        ],\n        [\n            [6188, 5703],\n            [-7, 11],\n            [-6, -5],\n            [-16, 1],\n            [0, 18],\n            [-2, 17],\n            [9, 27],\n            [10, 26]\n        ],\n        [\n            [6176, 5798],\n            [12, -5],\n            [8, 15]\n        ],\n        [\n            [5352, 8343],\n            [-17, -48],\n            [-29, 33],\n            [-4, 25],\n            [41, 19],\n            [9, -29]\n        ],\n        [\n            [5236, 8305],\n            [-11, 32],\n            [-1, 61],\n            [5, 16],\n            [8, 17],\n            [24, 4],\n            [10, 16],\n            [22, 17],\n            [-1, -30],\n            [-8, -20],\n            [4, -16],\n            [15, -9],\n            [-7, -22],\n            [-8, 6],\n            [-20, -42],\n            [7, -29]\n        ],\n        [\n            [3008, 6222],\n            [3, 10],\n            [22, 0],\n            [16, -15],\n            [8, 1],\n            [5, -21],\n            [15, 1],\n            [-1, -17],\n            [12, -2],\n            [14, -22],\n            [-10, -24],\n            [-14, 13],\n            [-12, -3],\n            [-9, 3],\n            [-5, -11],\n            [-11, -3],\n            [-4, 14],\n            [-10, -8],\n            [-11, -41],\n            [-7, 10],\n            [-1, 17]\n        ],\n        [\n            [3008, 6124],\n            [0, 16],\n            [-7, 17],\n            [7, 10],\n            [2, 23],\n            [-2, 32]\n        ],\n        [\n            [5333, 6444],\n            [-95, -112],\n            [-81, -117],\n            [-39, -26]\n        ],\n        [\n            [5118, 6189],\n            [-31, -6],\n            [0, 38],\n            [-13, 10],\n            [-17, 16],\n            [-7, 28],\n            [-94, 129],\n            [-93, 129]\n        ],\n        [\n            [4863, 6533],\n            [-105, 143]\n        ],\n        [\n            [4758, 6676],\n            [1, 11],\n            [0, 4]\n        ],\n        [\n            [4759, 6691],\n            [0, 70],\n            [44, 44],\n            [28, 9],\n            [23, 16],\n            [11, 29],\n            [32, 24],\n            [1, 44],\n            [16, 5],\n            [13, 22],\n            [36, 9],\n            [5, 23],\n            [-7, 13],\n            [-10, 62],\n            [-1, 36],\n            [-11, 38]\n        ],\n        [\n            [4939, 7135],\n            [27, 32],\n            [30, 11],\n            [17, 24],\n            [27, 18],\n            [47, 11],\n            [46, 4],\n            [14, -8],\n            [26, 23],\n            [30, 0],\n            [11, -13],\n            [19, 3]\n        ],\n        [\n            [5233, 7240],\n            [-5, -30],\n            [4, -56],\n            [-6, -49],\n            [-18, -33],\n            [3, -45],\n            [23, -35],\n            [0, -14],\n            [17, -24],\n            [12, -106]\n        ],\n        [\n            [5263, 6848],\n            [9, -52],\n            [1, -28],\n            [-5, -48],\n            [2, -27],\n            [-3, -32],\n            [2, -37],\n            [-11, -25],\n            [17, -43],\n            [1, -25],\n            [10, -33],\n            [13, 11],\n            [22, -28],\n            [12, -37]\n        ],\n        [\n            [2769, 4856],\n            [15, 45],\n            [-6, 25],\n            [-11, -27],\n            [-16, 26],\n            [5, 16],\n            [-4, 54],\n            [9, 9],\n            [5, 37],\n            [11, 38],\n            [-2, 24],\n            [15, 13],\n            [19, 23]\n        ],\n        [\n            [2906, 5049],\n            [4, -45],\n            [-9, -39],\n            [-30, -62],\n            [-33, -23],\n            [-17, -51],\n            [-6, -40],\n            [-15, -24],\n            [-12, 29],\n            [-11, 7],\n            [-12, -5],\n            [-1, 22],\n            [8, 14],\n            [-3, 24]\n        ],\n        [\n            [5969, 6800],\n            [-7, -23],\n            [-6, -45],\n            [-8, -31],\n            [-6, -10],\n            [-10, 19],\n            [-12, 26],\n            [-20, 85],\n            [-3, -5],\n            [12, -63],\n            [17, -59],\n            [21, -92],\n            [10, -32],\n            [9, -34],\n            [25, -65],\n            [-6, -10],\n            [1, -39],\n            [33, -53],\n            [4, -12]\n        ],\n        [\n            [6023, 6357],\n            [-110, 0],\n            [-107, 0],\n            [-112, 0]\n        ],\n        [\n            [5694, 6357],\n            [0, 218],\n            [0, 210],\n            [-8, 47],\n            [7, 37],\n            [-5, 25],\n            [10, 29]\n        ],\n        [\n            [5698, 6923],\n            [37, 0],\n            [27, -15],\n            [28, -18],\n            [13, -9],\n            [21, 19],\n            [11, 17],\n            [25, 5],\n            [20, -8],\n            [7, -29],\n            [7, 19],\n            [22, -14],\n            [22, -3],\n            [13, 15]\n        ],\n        [\n            [5951, 6902],\n            [18, -102]\n        ],\n        [\n            [6176, 5798],\n            [-10, 20],\n            [-11, 34],\n            [-12, 19],\n            [-8, 21],\n            [-24, 23],\n            [-19, 1],\n            [-7, 12],\n            [-16, -14],\n            [-17, 27],\n            [-8, -44],\n            [-33, 13]\n        ],\n        [\n            [6011, 5910],\n            [-3, 23],\n            [12, 87],\n            [3, 39],\n            [9, 18],\n            [20, 10],\n            [14, 34]\n        ],\n        [\n            [6066, 6121],\n            [16, -69],\n            [8, -54],\n            [15, -29],\n            [38, -55],\n            [16, -34],\n            [15, -34],\n            [8, -20],\n            [14, -18]\n        ],\n        [\n            [4749, 7532],\n            [1, 42],\n            [-11, 25],\n            [39, 43],\n            [34, -11],\n            [37, 1],\n            [30, -10],\n            [23, 3],\n            [45, -2]\n        ],\n        [\n            [4947, 7623],\n            [11, -23],\n            [51, -27],\n            [10, 13],\n            [31, -27],\n            [32, 8]\n        ],\n        [\n            [5082, 7567],\n            [2, -35],\n            [-26, -39],\n            [-36, -12],\n            [-2, -20],\n            [-18, -33],\n            [-10, -48],\n            [11, -34],\n            [-16, -26],\n            [-6, -39],\n            [-21, -11],\n            [-20, -46],\n            [-35, -1],\n            [-27, 1],\n            [-17, -21],\n            [-11, -22],\n            [-13, 5],\n            [-11, 20],\n            [-8, 34],\n            [-26, 9]\n        ],\n        [\n            [4792, 7249],\n            [-2, 20],\n            [10, 22],\n            [4, 16],\n            [-9, 17],\n            [7, 39],\n            [-11, 36],\n            [12, 5],\n            [1, 27],\n            [5, 9],\n            [0, 46],\n            [13, 16],\n            [-8, 30],\n            [-16, 2],\n            [-5, -8],\n            [-16, 0],\n            [-7, 29],\n            [-11, -8],\n            [-10, -15]\n        ],\n        [\n            [5675, 8472],\n            [3, 35],\n            [-10, -8],\n            [-18, 21],\n            [-2, 34],\n            [35, 17],\n            [35, 8],\n            [30, -10],\n            [29, 2]\n        ],\n        [\n            [5777, 8571],\n            [4, -10],\n            [-20, -34],\n            [8, -55],\n            [-12, -19]\n        ],\n        [\n            [5757, 8453],\n            [-22, 0],\n            [-24, 22],\n            [-13, 7],\n            [-23, -10]\n        ],\n        [\n            [6188, 5703],\n            [-6, -21],\n            [10, -32],\n            [10, -29],\n            [11, -21],\n            [90, -70],\n            [24, 0]\n        ],\n        [\n            [6327, 5530],\n            [-79, -177],\n            [-36, -3],\n            [-25, -41],\n            [-17, -1],\n            [-8, -19]\n        ],\n        [\n            [6162, 5289],\n            [-19, 0],\n            [-11, 20],\n            [-26, -25],\n            [-8, -24],\n            [-18, 4],\n            [-6, 7],\n            [-7, -1],\n            [-9, 0],\n            [-35, 50],\n            [-19, 0],\n            [-10, 20],\n            [0, 33],\n            [-14, 10]\n        ],\n        [\n            [5980, 5383],\n            [-17, 64],\n            [-12, 14],\n            [-5, 23],\n            [-14, 29],\n            [-17, 4],\n            [9, 34],\n            [15, 2],\n            [4, 18]\n        ],\n        [\n            [5943, 5571],\n            [0, 53]\n        ],\n        [\n            [5943, 5624],\n            [8, 62],\n            [13, 16],\n            [3, 24],\n            [12, 45],\n            [17, 30],\n            [11, 58],\n            [4, 51]\n        ],\n        [\n            [5794, 9138],\n            [-4, -42],\n            [42, -39],\n            [-26, -45],\n            [33, -67],\n            [-19, -51],\n            [25, -43],\n            [-11, -39],\n            [41, -40],\n            [-11, -31],\n            [-25, -34],\n            [-60, -75]\n        ],\n        [\n            [5779, 8632],\n            [-50, -5],\n            [-49, -21],\n            [-45, -13],\n            [-16, 32],\n            [-27, 20],\n            [6, 58],\n            [-14, 53],\n            [14, 35],\n            [25, 37],\n            [63, 64],\n            [19, 12],\n            [-3, 25],\n            [-39, 28]\n        ],\n        [\n            [5663, 8957],\n            [-9, 23],\n            [-1, 91],\n            [-43, 40],\n            [-37, 29]\n        ],\n        [\n            [5573, 9140],\n            [17, 16],\n            [30, -32],\n            [37, 3],\n            [30, -14],\n            [26, 26],\n            [14, 44],\n            [43, 20],\n            [35, -24],\n            [-11, -41]\n        ],\n        [\n            [9954, 4033],\n            [9, -17],\n            [-4, -31],\n            [-17, -8],\n            [-16, 7],\n            [-2, 26],\n            [10, 21],\n            [13, -8],\n            [7, 10]\n        ],\n        [\n            [0, 4079],\n            [9981, -14],\n            [-17, -13],\n            [-4, 23],\n            [14, 12],\n            [9, 3],\n            [-9983, 18]\n        ],\n        [\n            [0, 4108],\n            [0, -29]\n        ],\n        [\n            [0, 4108],\n            [6, 3],\n            [-4, -28],\n            [-2, -4]\n        ],\n        [\n            [3300, 1994],\n            [33, 36],\n            [24, -15],\n            [16, 24],\n            [22, -27],\n            [-8, -21],\n            [-37, -17],\n            [-13, 20],\n            [-23, -26],\n            [-14, 26]\n        ],\n        [\n            [5265, 7548],\n            [-9, -46],\n            [-13, 12],\n            [-6, 40],\n            [5, 22],\n            [18, 22],\n            [5, -50]\n        ],\n        [\n            [5157, 7984],\n            [6, -6],\n            [8, 2]\n        ],\n        [\n            [5190, 7775],\n            [-2, -17],\n            [9, -22],\n            [-10, -18],\n            [7, -46],\n            [15, -8],\n            [-3, -25]\n        ],\n        [\n            [5206, 7639],\n            [-25, -34],\n            [-55, 16],\n            [-40, -19],\n            [-4, -35]\n        ],\n        [\n            [4947, 7623],\n            [14, 35],\n            [5, 118],\n            [-28, 62],\n            [-21, 30],\n            [-42, 23],\n            [-3, 43],\n            [36, 12],\n            [47, -15],\n            [-9, 67],\n            [26, -25],\n            [65, 46],\n            [8, 48],\n            [24, 12]\n        ],\n        [\n            [3485, 5194],\n            [7, 25],\n            [3, 27]\n        ],\n        [\n            [3495, 5246],\n            [4, 26],\n            [-10, 34]\n        ],\n        [\n            [3489, 5306],\n            [-3, 41],\n            [15, 51]\n        ],\n        [\n            [3501, 5398],\n            [9, -7],\n            [21, -14],\n            [29, -50],\n            [5, -24]\n        ],\n        [\n            [5308, 4822],\n            [-29, 60],\n            [-18, 49],\n            [-17, 61],\n            [1, 19],\n            [6, 19],\n            [7, 43],\n            [5, 44]\n        ],\n        [\n            [5263, 5117],\n            [10, 4],\n            [40, -1],\n            [0, 71]\n        ],\n        [\n            [4827, 8240],\n            [-21, 12],\n            [-17, -1],\n            [6, 32],\n            [-6, 32]\n        ],\n        [\n            [4789, 8315],\n            [23, 2],\n            [30, -37],\n            [-15, -40]\n        ],\n        [\n            [4916, 8521],\n            [-30, -63],\n            [29, 8],\n            [30, -1],\n            [-7, -48],\n            [-25, -53],\n            [29, -4],\n            [2, -6],\n            [25, -69],\n            [19, -10],\n            [17, -67],\n            [8, -24],\n            [33, -11],\n            [-3, -38],\n            [-14, -17],\n            [11, -30],\n            [-25, -31],\n            [-37, 0],\n            [-48, -16],\n            [-13, 12],\n            [-18, -28],\n            [-26, 7],\n            [-19, -23],\n            [-15, 12],\n            [41, 62],\n            [25, 13],\n            [-1, 0],\n            [-43, 9],\n            [-8, 24],\n            [29, 18],\n            [-15, 32],\n            [5, 39],\n            [42, -6],\n            [4, 35],\n            [-19, 36],\n            [0, 1],\n            [-34, 10],\n            [-7, 16],\n            [10, 27],\n            [-9, 16],\n            [-15, -28],\n            [-1, 57],\n            [-14, 30],\n            [10, 61],\n            [21, 48],\n            [23, -4],\n            [33, 4]\n        ],\n        [\n            [6154, 7511],\n            [4, 26],\n            [-7, 40],\n            [-16, 22],\n            [-16, 6],\n            [-10, 19]\n        ],\n        [\n            [6109, 7624],\n            [4, 6],\n            [23, -10],\n            [41, -9],\n            [38, -28],\n            [5, -11],\n            [17, 9],\n            [25, -13],\n            [9, -24],\n            [17, -13]\n        ],\n        [\n            [6210, 7485],\n            [-27, 29],\n            [-29, -3]\n        ],\n        [\n            [5029, 5408],\n            [-44, -35],\n            [-15, -20],\n            [-25, -17],\n            [-25, 17]\n        ],\n        [\n            [5000, 5708],\n            [-2, -18],\n            [12, -30],\n            [0, -43],\n            [2, -47],\n            [7, -21],\n            [-6, -54],\n            [2, -29],\n            [8, -37],\n            [6, -21]\n        ],\n        [\n            [4765, 5512],\n            [-8, 1],\n            [-5, -24],\n            [-8, 1],\n            [-6, 12],\n            [2, 24],\n            [-11, 36],\n            [-8, -7],\n            [-6, -1]\n        ],\n        [\n            [4715, 5554],\n            [-7, -3],\n            [0, 21],\n            [-4, 16],\n            [0, 17],\n            [-6, 25],\n            [-7, 21],\n            [-23, 0],\n            [-6, -11],\n            [-8, -1],\n            [-4, -13],\n            [-4, -17],\n            [-14, -26]\n        ],\n        [\n            [4632, 5583],\n            [-13, 35],\n            [-10, 24],\n            [-8, 7],\n            [-6, 12],\n            [-4, 26],\n            [-4, 13],\n            [-8, 10]\n        ],\n        [\n            [4579, 5710],\n            [13, 29],\n            [8, -2],\n            [7, 10],\n            [6, 0],\n            [5, 8],\n            [-3, 20],\n            [3, 6],\n            [1, 20]\n        ],\n        [\n            [4619, 5801],\n            [13, -1],\n            [20, -14],\n            [6, 1],\n            [3, 7],\n            [15, -5],\n            [4, 4]\n        ],\n        [\n            [4680, 5793],\n            [1, -22],\n            [5, 0],\n            [7, 8],\n            [5, -2],\n            [7, -15],\n            [12, -5],\n            [8, 13],\n            [9, 8],\n            [6, 8],\n            [6, -1],\n            [6, -13],\n            [3, -17],\n            [12, -24],\n            [-6, -16],\n            [-1, -19],\n            [6, 6],\n            [3, -7],\n            [-1, -17],\n            [8, -18]\n        ],\n        [\n            [4532, 5834],\n            [3, 27]\n        ],\n        [\n            [4535, 5861],\n            [31, 1],\n            [6, 14],\n            [9, 1],\n            [11, -14],\n            [8, -1],\n            [9, 10],\n            [6, -17],\n            [-12, -13],\n            [-12, 1],\n            [-12, 13],\n            [-10, -14],\n            [-5, -1],\n            [-7, -8],\n            [-25, 1]\n        ],\n        [\n            [4579, 5710],\n            [-15, 24],\n            [-11, 4],\n            [-7, 17],\n            [1, 9],\n            [-9, 13],\n            [-2, 12]\n        ],\n        [\n            [4536, 5789],\n            [15, 10],\n            [9, -2],\n            [8, 7],\n            [51, -3]\n        ],\n        [\n            [5263, 5117],\n            [-5, 9],\n            [10, 66]\n        ],\n        [\n            [5658, 7167],\n            [15, -20],\n            [22, 3],\n            [20, -4],\n            [0, -10],\n            [15, 7],\n            [-4, -18],\n            [-40, -5],\n            [1, 10],\n            [-34, 12],\n            [5, 25]\n        ],\n        [\n            [5723, 7469],\n            [-17, 2],\n            [-14, 6],\n            [-34, -16],\n            [19, -33],\n            [-14, -10],\n            [-15, 0],\n            [-15, 31],\n            [-5, -13],\n            [6, -36],\n            [14, -27],\n            [-10, -13],\n            [15, -27],\n            [14, -18],\n            [0, -33],\n            [-25, 16],\n            [8, -30],\n            [-18, -7],\n            [11, -52],\n            [-19, -1],\n            [-23, 26],\n            [-10, 47],\n            [-5, 40],\n            [-11, 27],\n            [-14, 34],\n            [-2, 16]\n        ],\n        [\n            [5583, 7470],\n            [18, 6],\n            [11, 13],\n            [15, -2],\n            [5, 11],\n            [5, 2]\n        ],\n        [\n            [5725, 7529],\n            [13, -16],\n            [-8, -37],\n            [-7, -7]\n        ],\n        [\n            [3701, 9939],\n            [93, 35],\n            [97, -2],\n            [36, 21],\n            [98, 6],\n            [222, -7],\n            [174, -47],\n            [-52, -23],\n            [-106, -3],\n            [-150, -5],\n            [14, -11],\n            [99, 7],\n            [83, -21],\n            [54, 18],\n            [23, -21],\n            [-30, -34],\n            [71, 22],\n            [135, 23],\n            [83, -12],\n            [15, -25],\n            [-113, -42],\n            [-16, -14],\n            [-88, -10],\n            [64, -3],\n            [-32, -43],\n            [-23, -38],\n            [1, -66],\n            [33, -38],\n            [-43, -3],\n            [-46, -19],\n            [52, -31],\n            [6, -50],\n            [-30, -6],\n            [36, -50],\n            [-61, -5],\n            [32, -24],\n            [-9, -20],\n            [-39, -10],\n            [-39, 0],\n            [35, -40],\n            [0, -26],\n            [-55, 24],\n            [-14, -15],\n            [37, -15],\n            [37, -36],\n            [10, -48],\n            [-49, -11],\n            [-22, 22],\n            [-34, 34],\n            [10, -40],\n            [-33, -31],\n            [73, -2],\n            [39, -3],\n            [-75, -52],\n            [-75, -46],\n            [-81, -21],\n            [-31, 0],\n            [-29, -23],\n            [-38, -62],\n            [-60, -42],\n            [-19, -2],\n            [-37, -15],\n            [-40, -13],\n            [-24, -37],\n            [0, -41],\n            [-15, -39],\n            [-45, -47],\n            [11, -47],\n            [-12, -48],\n            [-14, -58],\n            [-39, -4],\n            [-41, 49],\n            [-56, 0],\n            [-27, 32],\n            [-18, 58],\n            [-49, 73],\n            [-14, 39],\n            [-3, 53],\n            [-39, 54],\n            [10, 44],\n            [-18, 21],\n            [27, 69],\n            [42, 22],\n            [11, 25],\n            [6, 46],\n            [-32, -21],\n            [-15, -9],\n            [-25, -8],\n            [-34, 19],\n            [-2, 40],\n            [11, 31],\n            [25, 1],\n            [57, -15],\n            [-48, 37],\n            [-24, 20],\n            [-28, -8],\n            [-23, 15],\n            [31, 55],\n            [-17, 22],\n            [-22, 41],\n            [-34, 62],\n            [-35, 23],\n            [0, 25],\n            [-74, 34],\n            [-59, 5],\n            [-74, -3],\n            [-68, -4],\n            [-32, 19],\n            [-49, 37],\n            [73, 19],\n            [56, 3],\n            [-119, 15],\n            [-62, 24],\n            [3, 23],\n            [106, 28],\n            [101, 29],\n            [11, 21],\n            [-75, 22],\n            [24, 23],\n            [97, 41],\n            [40, 7],\n            [-12, 26],\n            [66, 16],\n            [86, 9],\n            [85, 1],\n            [30, -19],\n            [74, 33],\n            [66, -22],\n            [39, -5],\n            [58, -19],\n            [-66, 32],\n            [4, 25]\n        ],\n        [\n            [2497, 5869],\n            [-14, 10],\n            [-17, 1],\n            [-13, 12],\n            [-15, 24]\n        ],\n        [\n            [2438, 5916],\n            [1, 18],\n            [3, 13],\n            [-4, 12],\n            [13, 48],\n            [36, 0],\n            [1, 20],\n            [-5, 4],\n            [-3, 12],\n            [-10, 14],\n            [-11, 20],\n            [13, 0],\n            [0, 33],\n            [26, 0],\n            [26, 0]\n        ],\n        [\n            [2529, 5996],\n            [10, -11],\n            [2, 9],\n            [8, -7]\n        ],\n        [\n            [2549, 5987],\n            [-13, -23],\n            [-13, -16],\n            [-2, -12],\n            [2, -11],\n            [-5, -15]\n        ],\n        [\n            [2518, 5910],\n            [-7, -4],\n            [2, -7],\n            [-6, -6],\n            [-9, -15],\n            [-1, -9]\n        ],\n        [\n            [3340, 5552],\n            [18, -22],\n            [17, -38],\n            [1, -31],\n            [10, -1],\n            [15, -29],\n            [11, -21]\n        ],\n        [\n            [3412, 5410],\n            [-4, -53],\n            [-17, -15],\n            [1, -14],\n            [-5, -31],\n            [13, -42],\n            [9, -1],\n            [3, -33],\n            [17, -51]\n        ],\n        [\n            [3313, 5365],\n            [-19, 45],\n            [7, 16],\n            [0, 27],\n            [17, 10],\n            [7, 11],\n            [-10, 22],\n            [3, 21],\n            [22, 35]\n        ],\n        [\n            [2574, 5825],\n            [-5, 18],\n            [-8, 5]\n        ],\n        [\n            [2561, 5848],\n            [2, 24],\n            [-4, 6],\n            [-6, 4],\n            [-12, -7],\n            [-1, 8],\n            [-8, 10],\n            [-6, 12],\n            [-8, 5]\n        ],\n        [\n            [2549, 5987],\n            [3, -3],\n            [6, 11],\n            [8, 1],\n            [3, -5],\n            [4, 3],\n            [13, -6],\n            [13, 2],\n            [9, 6],\n            [3, 7],\n            [9, -3],\n            [6, -4],\n            [8, 1],\n            [5, 5],\n            [13, -8],\n            [4, -1],\n            [9, -11],\n            [8, -13],\n            [10, -9],\n            [7, -17]\n        ],\n        [\n            [2690, 5943],\n            [-9, 2],\n            [-4, -8],\n            [-10, -8],\n            [-7, 0],\n            [-6, -8],\n            [-6, 3],\n            [-4, 9],\n            [-3, -2],\n            [-4, -14],\n            [-3, 1],\n            [0, -12],\n            [-10, -17],\n            [-5, -7],\n            [-3, -7],\n            [-8, 12],\n            [-6, -16],\n            [-6, 1],\n            [-6, -2],\n            [0, -29],\n            [-4, 0],\n            [-3, -14],\n            [-9, -2]\n        ],\n        [\n            [5522, 7770],\n            [7, -23],\n            [9, -17],\n            [-11, -22]\n        ],\n        [\n            [5515, 7577],\n            [-3, -10]\n        ],\n        [\n            [5512, 7567],\n            [-26, 22],\n            [-16, 21],\n            [-26, 18],\n            [-23, 43],\n            [6, 5],\n            [-13, 25],\n            [-1, 19],\n            [-17, 10],\n            [-9, -26],\n            [-8, 20],\n            [0, 21],\n            [1, 1]\n        ],\n        [\n            [5380, 7746],\n            [20, -2],\n            [5, 9],\n            [9, -9],\n            [11, -1],\n            [0, 16],\n            [10, 6],\n            [2, 24],\n            [23, 16]\n        ],\n        [\n            [5460, 7805],\n            [8, -7],\n            [21, -26],\n            [23, -11],\n            [10, 9]\n        ],\n        [\n            [3008, 6124],\n            [-19, 10],\n            [-13, -5],\n            [-17, 5],\n            [-13, -11],\n            [-15, 18],\n            [3, 19],\n            [25, -8],\n            [21, -5],\n            [10, 13],\n            [-12, 26],\n            [0, 23],\n            [-18, 9],\n            [7, 16],\n            [17, -3],\n            [24, -9]\n        ],\n        [\n            [5471, 7900],\n            [14, -15],\n            [10, -6],\n            [24, 7],\n            [2, 12],\n            [11, 2],\n            [14, 9],\n            [3, -4],\n            [13, 8],\n            [6, 13],\n            [9, 4],\n            [30, -18],\n            [6, 6]\n        ],\n        [\n            [5613, 7918],\n            [15, -16],\n            [2, -16]\n        ],\n        [\n            [5630, 7886],\n            [-17, -12],\n            [-13, -40],\n            [-17, -40],\n            [-22, -11]\n        ],\n        [\n            [5561, 7783],\n            [-17, 2],\n            [-22, -15]\n        ],\n        [\n            [5460, 7805],\n            [-6, 20],\n            [-4, 0]\n        ],\n        [\n            [8352, 4453],\n            [-11, -2],\n            [-37, 42],\n            [26, 11],\n            [14, -18],\n            [10, -17],\n            [-2, -16]\n        ],\n        [\n            [8471, 4532],\n            [2, -11],\n            [1, -18]\n        ],\n        [\n            [8474, 4503],\n            [-18, -45],\n            [-24, -13],\n            [-3, 8],\n            [2, 20],\n            [12, 36],\n            [28, 23]\n        ],\n        [\n            [8274, 4579],\n            [10, -16],\n            [17, 5],\n            [7, -25],\n            [-32, -12],\n            [-19, -8],\n            [-15, 1],\n            [10, 34],\n            [15, 0],\n            [7, 21]\n        ],\n        [\n            [8413, 4579],\n            [-4, -32],\n            [-42, -17],\n            [-37, 7],\n            [0, 22],\n            [22, 12],\n            [18, -18],\n            [18, 5],\n            [25, 21]\n        ],\n        [\n            [8017, 4657],\n            [53, -6],\n            [6, 25],\n            [51, -29],\n            [10, -38],\n            [42, -11],\n            [34, -35],\n            [-31, -23],\n            [-31, 24],\n            [-25, -1],\n            [-29, 4],\n            [-26, 11],\n            [-32, 22],\n            [-21, 6],\n            [-11, -7],\n            [-51, 24],\n            [-5, 25],\n            [-25, 5],\n            [19, 56],\n            [34, -3],\n            [22, -23],\n            [12, -5],\n            [4, -21]\n        ],\n        [\n            [8741, 4690],\n            [-14, -40],\n            [-3, 45],\n            [5, 21],\n            [6, 20],\n            [7, -17],\n            [-1, -29]\n        ],\n        [\n            [8534, 4853],\n            [-11, -19],\n            [-19, 10],\n            [-5, 26],\n            [28, 3],\n            [7, -20]\n        ],\n        [\n            [8623, 4875],\n            [10, -45],\n            [-23, 24],\n            [-23, 5],\n            [-16, -4],\n            [-19, 2],\n            [6, 33],\n            [35, 2],\n            [30, -17]\n        ],\n        [\n            [8916, 4904],\n            [0, -193],\n            [1, -192]\n        ],\n        [\n            [8917, 4519],\n            [-25, 48],\n            [-28, 12],\n            [-7, -17],\n            [-35, -1],\n            [12, 48],\n            [17, 16],\n            [-7, 64],\n            [-14, 50],\n            [-53, 50],\n            [-23, 5],\n            [-42, 54],\n            [-8, -28],\n            [-11, -5],\n            [-6, 21],\n            [0, 26],\n            [-21, 29],\n            [29, 21],\n            [20, -1],\n            [-2, 16],\n            [-41, 0],\n            [-11, 35],\n            [-25, 11],\n            [-11, 29],\n            [37, 14],\n            [14, 20],\n            [45, -25],\n            [4, -22],\n            [8, -95],\n            [29, -35],\n            [23, 62],\n            [32, 36],\n            [25, 0],\n            [23, -21],\n            [21, -21],\n            [30, -11]\n        ],\n        [\n            [8478, 5141],\n            [-22, -58],\n            [-21, -12],\n            [-27, 12],\n            [-46, -3],\n            [-24, -8],\n            [-4, -45],\n            [24, -53],\n            [15, 27],\n            [52, 20],\n            [-2, -27],\n            [-12, 9],\n            [-12, -35],\n            [-25, -23],\n            [27, -76],\n            [-5, -20],\n            [25, -68],\n            [-1, -39],\n            [-14, -17],\n            [-11, 20],\n            [13, 49],\n            [-27, -23],\n            [-7, 16],\n            [3, 23],\n            [-20, 35],\n            [3, 57],\n            [-19, -18],\n            [2, -69],\n            [1, -84],\n            [-17, -9],\n            [-12, 18],\n            [8, 54],\n            [-4, 57],\n            [-12, 1],\n            [-9, 40],\n            [12, 39],\n            [4, 47],\n            [14, 89],\n            [5, 24],\n            [24, 44],\n            [22, -18],\n            [35, -8],\n            [32, 3],\n            [27, 43],\n            [5, -14]\n        ],\n        [\n            [8574, 5124],\n            [-2, -51],\n            [-14, 6],\n            [-4, -36],\n            [11, -32],\n            [-8, -7],\n            [-11, 38],\n            [-8, 75],\n            [6, 47],\n            [9, 22],\n            [2, -32],\n            [16, -5],\n            [3, -25]\n        ],\n        [\n            [8045, 5176],\n            [5, -39],\n            [19, -34],\n            [18, 12],\n            [18, -4],\n            [16, 30],\n            [13, 5],\n            [26, -17],\n            [23, 13],\n            [14, 82],\n            [11, 21],\n            [10, 67],\n            [32, 0],\n            [24, -10]\n        ],\n        [\n            [8274, 5302],\n            [-16, -53],\n            [20, -56],\n            [-5, -28],\n            [32, -54],\n            [-33, -7],\n            [-10, -40],\n            [2, -54],\n            [-27, -40],\n            [-1, -59],\n            [-10, -91],\n            [-5, 21],\n            [-31, -26],\n            [-11, 36],\n            [-20, 3],\n            [-14, 19],\n            [-33, -21],\n            [-10, 29],\n            [-18, -4],\n            [-23, 7],\n            [-4, 79],\n            [-14, 17],\n            [-13, 50],\n            [-4, 52],\n            [3, 55],\n            [16, 39]\n        ],\n        [\n            [7939, 4712],\n            [-31, -1],\n            [-24, 49],\n            [-35, 48],\n            [-12, 36],\n            [-21, 48],\n            [-14, 44],\n            [-21, 83],\n            [-24, 49],\n            [-9, 51],\n            [-10, 46],\n            [-25, 37],\n            [-14, 51],\n            [-21, 33],\n            [-29, 65],\n            [-3, 30],\n            [18, -2],\n            [43, -12],\n            [25, -57],\n            [21, -40],\n            [16, -25],\n            [26, -63],\n            [28, -1],\n            [23, -41],\n            [16, -49],\n            [22, -27],\n            [-12, -49],\n            [16, -20],\n            [10, -2],\n            [5, -41],\n            [10, -33],\n            [20, -5],\n            [14, -37],\n            [-7, -74],\n            [-1, -91]\n        ],\n        [\n            [7252, 6841],\n            [-17, -27],\n            [-11, -55],\n            [27, -23],\n            [26, -29],\n            [36, -33],\n            [38, -8],\n            [16, -30],\n            [22, -5],\n            [33, -14],\n            [23, 1],\n            [4, 23],\n            [-4, 38],\n            [2, 25]\n        ],\n        [\n            [7703, 6727],\n            [2, -22],\n            [-10, -11],\n            [2, -36],\n            [-19, 10],\n            [-36, -41],\n            [0, -33],\n            [-15, -50],\n            [-1, -29],\n            [-13, -48],\n            [-21, 13],\n            [-1, -61],\n            [-7, -20],\n            [3, -25],\n            [-14, -14]\n        ],\n        [\n            [7472, 6360],\n            [-4, -21],\n            [-19, 1],\n            [-34, -13],\n            [2, -44],\n            [-15, -35],\n            [-40, -40],\n            [-31, -69],\n            [-21, -38],\n            [-28, -38],\n            [0, -27],\n            [-13, -15],\n            [-26, -21],\n            [-12, -3],\n            [-9, -45],\n            [6, -77],\n            [1, -49],\n            [-11, -56],\n            [0, -101],\n            [-15, -2],\n            [-12, -46],\n            [8, -19],\n            [-25, -17],\n            [-10, -40],\n            [-11, -17],\n            [-26, 55],\n            [-13, 83],\n            [-11, 60],\n            [-9, 28],\n            [-15, 56],\n            [-7, 74],\n            [-5, 37],\n            [-25, 81],\n            [-12, 115],\n            [-8, 75],\n            [0, 72],\n            [-5, 55],\n            [-41, -35],\n            [-19, 7],\n            [-36, 71],\n            [13, 22],\n            [-8, 23],\n            [-33, 50]\n        ],\n        [\n            [6893, 6457],\n            [19, 40],\n            [61, -1],\n            [-6, 51],\n            [-15, 30],\n            [-4, 46],\n            [-18, 26],\n            [31, 62],\n            [32, -4],\n            [29, 61],\n            [18, 60],\n            [27, 60],\n            [-1, 42],\n            [24, 34],\n            [-23, 29],\n            [-9, 40],\n            [-10, 52],\n            [14, 25],\n            [42, -14],\n            [31, 9],\n            [26, 49]\n        ],\n        [\n            [4827, 8240],\n            [5, -42],\n            [-21, -53],\n            [-49, -35],\n            [-40, 9],\n            [23, 62],\n            [-15, 60],\n            [38, 46],\n            [21, 28]\n        ],\n        [\n            [6497, 7255],\n            [25, 12],\n            [19, 33],\n            [19, -1],\n            [12, 11],\n            [20, -6],\n            [31, -30],\n            [22, -6],\n            [31, -53],\n            [21, -2],\n            [3, -49]\n        ],\n        [\n            [6690, 6820],\n            [14, -31],\n            [11, -36],\n            [27, -26],\n            [1, -52],\n            [13, -10],\n            [2, -27],\n            [-40, -30],\n            [-10, -69]\n        ],\n        [\n            [6708, 6539],\n            [-53, 18],\n            [-30, 13],\n            [-31, 8],\n            [-12, 73],\n            [-13, 10],\n            [-22, -11],\n            [-28, -28],\n            [-34, 20],\n            [-28, 45],\n            [-27, 17],\n            [-18, 56],\n            [-21, 79],\n            [-15, -10],\n            [-17, 20],\n            [-11, -24]\n        ],\n        [\n            [6348, 6825],\n            [-15, 32],\n            [0, 31],\n            [-9, 0],\n            [5, 43],\n            [-15, 45],\n            [-34, 32],\n            [-19, 56],\n            [6, 46],\n            [14, 21],\n            [-2, 34],\n            [-18, 18],\n            [-18, 70]\n        ],\n        [\n            [6243, 7253],\n            [-15, 48],\n            [5, 18],\n            [-8, 68],\n            [19, 17]\n        ],\n        [\n            [6357, 7321],\n            [9, -43],\n            [26, -13],\n            [20, -29],\n            [39, -10],\n            [44, 15],\n            [2, 14]\n        ],\n        [\n            [6348, 6825],\n            [-16, 3]\n        ],\n        [\n            [6332, 6828],\n            [-19, 5],\n            [-20, -56]\n        ],\n        [\n            [6293, 6777],\n            [-52, 4],\n            [-78, 119],\n            [-41, 41],\n            [-34, 16]\n        ],\n        [\n            [6088, 6957],\n            [-11, 72]\n        ],\n        [\n            [6077, 7029],\n            [61, 62],\n            [11, 71],\n            [-3, 43],\n            [16, 15],\n            [14, 37]\n        ],\n        [\n            [6176, 7257],\n            [12, 9],\n            [32, -8],\n            [10, -15],\n            [13, 10]\n        ],\n        [\n            [4597, 8984],\n            [-7, -39],\n            [31, -40],\n            [-36, -45],\n            [-80, -41],\n            [-24, -10],\n            [-36, 8],\n            [-78, 19],\n            [28, 26],\n            [-61, 29],\n            [49, 12],\n            [-1, 17],\n            [-58, 14],\n            [19, 38],\n            [42, 9],\n            [43, -40],\n            [42, 32],\n            [35, -17],\n            [45, 32],\n            [47, -4]\n        ],\n        [\n            [5992, 6990],\n            [-5, -19]\n        ],\n        [\n            [5987, 6971],\n            [-10, 8],\n            [-6, -39],\n            [7, -7],\n            [-7, -8],\n            [-1, -15],\n            [13, 8]\n        ],\n        [\n            [5983, 6918],\n            [0, -23],\n            [-14, -95]\n        ],\n        [\n            [5951, 6902],\n            [8, 19],\n            [-2, 4],\n            [8, 27],\n            [5, 45],\n            [4, 15],\n            [1, 0]\n        ],\n        [\n            [5975, 7012],\n            [9, 0],\n            [3, 11],\n            [7, 0]\n        ],\n        [\n            [5994, 7023],\n            [1, -24],\n            [-4, -9],\n            [1, 0]\n        ],\n        [\n            [5431, 7316],\n            [-10, -46],\n            [4, -19],\n            [-6, -30],\n            [-21, 22],\n            [-14, 7],\n            [-39, 30],\n            [4, 30],\n            [32, -6],\n            [28, 7],\n            [22, 5]\n        ],\n        [\n            [5255, 7492],\n            [17, -42],\n            [-4, -78],\n            [-13, 4],\n            [-11, -20],\n            [-10, 16],\n            [-2, 71],\n            [-6, 34],\n            [15, -3],\n            [14, 18]\n        ],\n        [\n            [5383, 7805],\n            [-3, -29],\n            [7, -25]\n        ],\n        [\n            [5387, 7751],\n            [-22, 8],\n            [-23, -20],\n            [1, -30],\n            [-3, -17],\n            [9, -30],\n            [26, -29],\n            [14, -49],\n            [31, -48],\n            [22, 0],\n            [7, -13],\n            [-8, -11],\n            [25, -22],\n            [20, -18],\n            [24, -30],\n            [3, -11],\n            [-5, -22],\n            [-16, 28],\n            [-24, 10],\n            [-12, -39],\n            [20, -21],\n            [-3, -31],\n            [-11, -4],\n            [-15, -50],\n            [-12, -5],\n            [0, 18],\n            [6, 32],\n            [6, 12],\n            [-11, 35],\n            [-8, 29],\n            [-12, 8],\n            [-8, 25],\n            [-18, 11],\n            [-12, 24],\n            [-21, 4],\n            [-21, 26],\n            [-26, 39],\n            [-19, 34],\n            [-8, 58],\n            [-14, 7],\n            [-23, 20],\n            [-12, -8],\n            [-16, -28],\n            [-12, -4]\n        ],\n        [\n            [2845, 6150],\n            [19, -5],\n            [14, -15],\n            [5, -16],\n            [-19, -1],\n            [-9, -10],\n            [-15, 10],\n            [-16, 21],\n            [3, 14],\n            [12, 4],\n            [6, -2]\n        ],\n        [\n            [5992, 6990],\n            [31, -24],\n            [54, 63]\n        ],\n        [\n            [6088, 6957],\n            [-5, -8],\n            [-56, -30],\n            [28, -59],\n            [-9, -10],\n            [-5, -20],\n            [-21, -8],\n            [-7, -21],\n            [-12, -19],\n            [-31, 10]\n        ],\n        [\n            [5970, 6792],\n            [-1, 8]\n        ],\n        [\n            [5983, 6918],\n            [4, 17],\n            [0, 36]\n        ],\n        [\n            [8739, 7075],\n            [4, -20],\n            [-16, -36],\n            [-11, 19],\n            [-15, -14],\n            [-7, -34],\n            [-18, 16],\n            [0, 28],\n            [15, 36],\n            [16, -7],\n            [12, 25],\n            [20, -13]\n        ],\n        [\n            [8915, 7252],\n            [-10, -47],\n            [4, -30],\n            [-14, -42],\n            [-35, -27],\n            [-49, -4],\n            [-40, -67],\n            [-19, 22],\n            [-1, 44],\n            [-48, -13],\n            [-33, -27],\n            [-32, -2],\n            [28, -43],\n            [-19, -101],\n            [-18, -24],\n            [-13, 23],\n            [7, 53],\n            [-18, 17],\n            [-11, 41],\n            [26, 18],\n            [15, 37],\n            [28, 30],\n            [20, 41],\n            [55, 17],\n            [30, -12],\n            [29, 105],\n            [19, -28],\n            [40, 59],\n            [16, 23],\n            [18, 72],\n            [-5, 67],\n            [11, 37],\n            [30, 11],\n            [15, -82],\n            [-1, -48],\n            [-25, -59],\n            [0, -61]\n        ],\n        [\n            [8997, 7667],\n            [19, -12],\n            [20, 25],\n            [6, -67],\n            [-41, -16],\n            [-25, -59],\n            [-43, 41],\n            [-15, -65],\n            [-31, -1],\n            [-4, 59],\n            [14, 46],\n            [29, 3],\n            [8, 82],\n            [9, 46],\n            [32, -62],\n            [22, -20]\n        ],\n        [\n            [6970, 7554],\n            [-15, -10],\n            [-37, -42],\n            [-12, -42],\n            [-11, 0],\n            [-7, 28],\n            [-36, 2],\n            [-5, 48],\n            [-14, 0],\n            [2, 60],\n            [-33, 43],\n            [-48, -5],\n            [-32, -8],\n            [-27, 53],\n            [-22, 22],\n            [-43, 43],\n            [-6, 5],\n            [-71, -35],\n            [1, -218]\n        ],\n        [\n            [6554, 7498],\n            [-14, -3],\n            [-20, 46],\n            [-18, 17],\n            [-32, -12],\n            [-12, -20]\n        ],\n        [\n            [6458, 7526],\n            [-2, 14],\n            [7, 25],\n            [-5, 21],\n            [-32, 20],\n            [-13, 53],\n            [-15, 15],\n            [-1, 19],\n            [27, -6],\n            [1, 44],\n            [23, 9],\n            [25, -9],\n            [5, 58],\n            [-5, 36],\n            [-28, -2],\n            [-24, 14],\n            [-32, -26],\n            [-26, -12]\n        ],\n        [\n            [6363, 7799],\n            [-14, 9],\n            [3, 31],\n            [-18, 39],\n            [-20, -2],\n            [-24, 40],\n            [16, 45],\n            [-8, 12],\n            [22, 65],\n            [29, -34],\n            [3, 43],\n            [58, 64],\n            [43, 2],\n            [61, -41],\n            [33, -24],\n            [30, 25],\n            [44, 1],\n            [35, -30],\n            [8, 17],\n            [39, -2],\n            [7, 28],\n            [-45, 40],\n            [27, 29],\n            [-5, 16],\n            [26, 15],\n            [-20, 41],\n            [13, 20],\n            [104, 21],\n            [13, 14],\n            [70, 22],\n            [25, 24],\n            [50, -12],\n            [9, -61],\n            [29, 14],\n            [35, -20],\n            [-2, -32],\n            [27, 3],\n            [69, 56],\n            [-10, -19],\n            [35, -46],\n            [62, -150],\n            [15, 31],\n            [39, -34],\n            [39, 16],\n            [16, -11],\n            [13, -34],\n            [20, -12],\n            [11, -25],\n            [36, 8],\n            [15, -36]\n        ],\n        [\n            [7229, 7559],\n            [-17, 9],\n            [-14, 21],\n            [-42, 6],\n            [-46, 2],\n            [-10, -6],\n            [-39, 24],\n            [-16, -12],\n            [-4, -35],\n            [-46, 21],\n            [-18, -9],\n            [-7, -26]\n        ],\n        [\n            [6155, 4958],\n            [-20, -24],\n            [-7, -24],\n            [-10, -4],\n            [-4, -42],\n            [-9, -24],\n            [-5, -39],\n            [-12, -20]\n        ],\n        [\n            [6088, 4781],\n            [-40, 59],\n            [-1, 35],\n            [-101, 120],\n            [-5, 6]\n        ],\n        [\n            [5941, 5001],\n            [0, 63],\n            [8, 24],\n            [14, 39],\n            [10, 43],\n            [-13, 68],\n            [-3, 30],\n            [-13, 41]\n        ],\n        [\n            [5944, 5309],\n            [17, 35],\n            [19, 39]\n        ],\n        [\n            [6162, 5289],\n            [-24, -67],\n            [0, -215],\n            [17, -49]\n        ],\n        [\n            [7046, 7387],\n            [-53, -9],\n            [-34, 19],\n            [-30, -4],\n            [3, 34],\n            [30, -10],\n            [10, 18]\n        ],\n        [\n            [6972, 7435],\n            [21, -6],\n            [36, 43],\n            [-33, 31],\n            [-20, -15],\n            [-21, 22],\n            [24, 39],\n            [-9, 5]\n        ],\n        [\n            [7849, 5777],\n            [-7, 72],\n            [18, 49],\n            [36, 11],\n            [26, -8]\n        ],\n        [\n            [7922, 5901],\n            [23, -23],\n            [12, 40],\n            [25, -21]\n        ],\n        [\n            [7982, 5897],\n            [6, -40],\n            [-3, -71],\n            [-47, -45],\n            [13, -36],\n            [-30, -4],\n            [-24, -24]\n        ],\n        [\n            [7897, 5677],\n            [-23, 9],\n            [-11, 30],\n            [-14, 61]\n        ],\n        [\n            [8564, 7339],\n            [24, -70],\n            [7, -38],\n            [0, -68],\n            [-10, -33],\n            [-25, -11],\n            [-22, -25],\n            [-25, -5],\n            [-3, 32],\n            [5, 45],\n            [-13, 61],\n            [21, 10],\n            [-19, 51]\n        ],\n        [\n            [8504, 7288],\n            [2, 5],\n            [12, -2],\n            [11, 27],\n            [20, 2],\n            [11, 4],\n            [4, 15]\n        ],\n        [\n            [5557, 7574],\n            [5, 13]\n        ],\n        [\n            [5562, 7587],\n            [7, 4],\n            [4, 20],\n            [5, 3],\n            [4, -8],\n            [5, -4],\n            [3, -10],\n            [5, -2],\n            [5, -11],\n            [4, 0],\n            [-3, -14],\n            [-3, -7],\n            [1, -5]\n        ],\n        [\n            [5599, 7553],\n            [-6, -2],\n            [-17, -9],\n            [-1, -12],\n            [-4, 0]\n        ],\n        [\n            [6332, 6828],\n            [6, -26],\n            [-3, -13],\n            [9, -45]\n        ],\n        [\n            [6344, 6744],\n            [-19, -1],\n            [-7, 28],\n            [-25, 6]\n        ],\n        [\n            [7922, 5901],\n            [9, 26],\n            [1, 50],\n            [-22, 52],\n            [-2, 58],\n            [-21, 48],\n            [-21, 4],\n            [-6, -20],\n            [-16, -2],\n            [-8, 10],\n            [-30, -35],\n            [0, 53],\n            [7, 62],\n            [-19, 3],\n            [-2, 36],\n            [-12, 18]\n        ],\n        [\n            [7780, 6264],\n            [6, 21],\n            [24, 39]\n        ],\n        [\n            [7837, 6385],\n            [17, -47],\n            [12, -54],\n            [34, 0],\n            [11, -52],\n            [-18, -15],\n            [-8, -21],\n            [34, -36],\n            [23, -70],\n            [17, -52],\n            [21, -41],\n            [7, -41],\n            [-5, -59]\n        ],\n        [\n            [5975, 7012],\n            [10, 49],\n            [14, 41],\n            [0, 2]\n        ],\n        [\n            [5999, 7104],\n            [13, -3],\n            [4, -23],\n            [-15, -22],\n            [-7, -33]\n        ],\n        [\n            [4785, 5315],\n            [-7, 0],\n            [-29, 28],\n            [-25, 45],\n            [-24, 32],\n            [-18, 38]\n        ],\n        [\n            [4682, 5458],\n            [6, 19],\n            [2, 17],\n            [12, 33],\n            [13, 27]\n        ],\n        [\n            [5412, 6408],\n            [-20, -22],\n            [-15, 33],\n            [-44, 25]\n        ],\n        [\n            [5263, 6848],\n            [13, 14],\n            [3, 25],\n            [-3, 24],\n            [19, 23],\n            [8, 19],\n            [14, 17],\n            [2, 45]\n        ],\n        [\n            [5319, 7015],\n            [32, -20],\n            [12, 5],\n            [23, -10],\n            [37, -26],\n            [13, -53],\n            [25, -11],\n            [39, -25],\n            [30, -29],\n            [13, 15],\n            [13, 27],\n            [-6, 45],\n            [9, 29],\n            [20, 28],\n            [19, 8],\n            [37, -12],\n            [10, -27],\n            [10, 0],\n            [9, -10],\n            [28, -7],\n            [6, -19]\n        ],\n        [\n            [5694, 6357],\n            [0, -118],\n            [-32, 0],\n            [0, -25]\n        ],\n        [\n            [5662, 6214],\n            [-111, 113],\n            [-111, 113],\n            [-28, -32]\n        ],\n        [\n            [7271, 5502],\n            [-4, -62],\n            [-12, -16],\n            [-24, -14],\n            [-13, 47],\n            [-5, 85],\n            [13, 96],\n            [19, -33],\n            [13, -42],\n            [13, -61]\n        ],\n        [\n            [5804, 3347],\n            [10, -18],\n            [-9, -29],\n            [-4, -19],\n            [-16, -9],\n            [-5, -19],\n            [-10, -6],\n            [-21, 46],\n            [15, 37],\n            [15, 23],\n            [13, 12],\n            [12, -18]\n        ],\n        [\n            [5631, 8267],\n            [-2, 15],\n            [3, 16],\n            [-13, 10],\n            [-29, 10]\n        ],\n        [\n            [5590, 8318],\n            [-6, 50]\n        ],\n        [\n            [5584, 8368],\n            [32, 18],\n            [47, -4],\n            [27, 6],\n            [4, -12],\n            [15, -4],\n            [26, -29]\n        ],\n        [\n            [5652, 8242],\n            [-7, 19],\n            [-14, 6]\n        ],\n        [\n            [5584, 8368],\n            [1, 44],\n            [14, 37],\n            [26, 20],\n            [22, -44],\n            [22, 1],\n            [6, 46]\n        ],\n        [\n            [5757, 8453],\n            [14, -14],\n            [2, -28],\n            [9, -35]\n        ],\n        [\n            [4759, 6691],\n            [-4, 0],\n            [0, -31],\n            [-17, -2],\n            [-9, -14],\n            [-13, 0],\n            [-10, 8],\n            [-23, -6],\n            [-9, -46],\n            [-9, -5],\n            [-13, -74],\n            [-38, -64],\n            [-9, -81],\n            [-12, -27],\n            [-3, -21],\n            [-63, -5]\n        ],\n        [\n            [4527, 6323],\n            [1, 27],\n            [11, 17],\n            [9, 30],\n            [-2, 20],\n            [10, 42],\n            [15, 38],\n            [9, 9],\n            [8, 35],\n            [0, 31],\n            [10, 37],\n            [19, 21],\n            [18, 60],\n            [0, 1],\n            [14, 23],\n            [26, 6],\n            [22, 41],\n            [14, 16],\n            [23, 49],\n            [-7, 73],\n            [10, 51],\n            [4, 31],\n            [18, 40],\n            [28, 27],\n            [21, 25],\n            [18, 61],\n            [9, 36],\n            [20, 0],\n            [17, -25],\n            [26, 4],\n            [29, -13],\n            [12, -1]\n        ],\n        [\n            [5739, 7906],\n            [6, 9],\n            [19, 6],\n            [20, -19],\n            [12, -2],\n            [12, -16],\n            [-2, -20],\n            [11, -9],\n            [4, -25],\n            [9, -15],\n            [-2, -9],\n            [5, -6],\n            [-7, -4],\n            [-16, 1],\n            [-3, 9],\n            [-6, -5],\n            [2, -11],\n            [-7, -19],\n            [-5, -20],\n            [-7, -6]\n        ],\n        [\n            [5784, 7745],\n            [-5, 27],\n            [3, 25],\n            [-1, 26],\n            [-16, 35],\n            [-9, 25],\n            [-9, 17],\n            [-8, 6]\n        ],\n        [\n            [6376, 4321],\n            [7, -25],\n            [7, -39],\n            [4, -71],\n            [7, -28],\n            [-2, -28],\n            [-5, -18],\n            [-10, 35],\n            [-5, -18],\n            [5, -43],\n            [-2, -25],\n            [-8, -14],\n            [-1, -50],\n            [-11, -69],\n            [-14, -81],\n            [-17, -112],\n            [-11, -82],\n            [-12, -69],\n            [-23, -14],\n            [-24, -25],\n            [-16, 15],\n            [-22, 21],\n            [-8, 31],\n            [-2, 53],\n            [-10, 47],\n            [-2, 42],\n            [5, 43],\n            [13, 10],\n            [0, 20],\n            [13, 45],\n            [2, 37],\n            [-6, 28],\n            [-5, 38],\n            [-2, 54],\n            [9, 33],\n            [4, 38],\n            [14, 2],\n            [15, 12],\n            [11, 10],\n            [12, 1],\n            [16, 34],\n            [23, 36],\n            [8, 30],\n            [-4, 25],\n            [12, -7],\n            [15, 41],\n            [1, 36],\n            [9, 26],\n            [10, -25]\n        ],\n        [\n            [2301, 6586],\n            [-10, -52],\n            [-5, -43],\n            [-2, -79],\n            [-3, -29],\n            [5, -32],\n            [9, -29],\n            [5, -45],\n            [19, -44],\n            [6, -34],\n            [11, -29],\n            [29, -16],\n            [12, -25],\n            [24, 17],\n            [21, 6],\n            [21, 11],\n            [18, 10],\n            [17, 24],\n            [7, 34],\n            [2, 50],\n            [5, 17],\n            [19, 16],\n            [29, 13],\n            [25, -2],\n            [17, 5],\n            [6, -12],\n            [-1, -29],\n            [-15, -35],\n            [-6, -36],\n            [5, -10],\n            [-4, -26],\n            [-7, -46],\n            [-7, 15],\n            [-6, -1]\n        ],\n        [\n            [2438, 5916],\n            [-32, 64],\n            [-14, 19],\n            [-23, 16],\n            [-15, -5],\n            [-22, -22],\n            [-14, -6],\n            [-20, 16],\n            [-21, 11],\n            [-26, 27],\n            [-21, 8],\n            [-31, 28],\n            [-23, 28],\n            [-7, 16],\n            [-16, 3],\n            [-28, 19],\n            [-12, 27],\n            [-30, 34],\n            [-14, 37],\n            [-6, 29],\n            [9, 5],\n            [-3, 17],\n            [7, 16],\n            [0, 20],\n            [-10, 27],\n            [-2, 23],\n            [-9, 30],\n            [-25, 59],\n            [-28, 46],\n            [-13, 37],\n            [-24, 24],\n            [-5, 14],\n            [4, 37],\n            [-14, 13],\n            [-17, 29],\n            [-7, 41],\n            [-14, 5],\n            [-17, 31],\n            [-13, 29],\n            [-1, 19],\n            [-15, 44],\n            [-10, 45],\n            [1, 23],\n            [-20, 23],\n            [-10, -2],\n            [-15, 16],\n            [-5, -24],\n            [5, -28],\n            [2, -45],\n            [10, -24],\n            [21, -41],\n            [4, -14],\n            [4, -4],\n            [4, -20],\n            [5, 1],\n            [6, -38],\n            [8, -15],\n            [6, -21],\n            [17, -30],\n            [10, -55],\n            [8, -26],\n            [8, -28],\n            [1, -31],\n            [13, -2],\n            [12, -27],\n            [10, -26],\n            [-1, -11],\n            [-12, -21],\n            [-5, 0],\n            [-7, 36],\n            [-18, 33],\n            [-20, 29],\n            [-14, 15],\n            [1, 43],\n            [-5, 32],\n            [-13, 19],\n            [-19, 26],\n            [-4, -8],\n            [-7, 16],\n            [-17, 14],\n            [-16, 34],\n            [2, 5],\n            [11, -4],\n            [11, 22],\n            [1, 27],\n            [-22, 42],\n            [-16, 17],\n            [-10, 36],\n            [-11, 39],\n            [-12, 47],\n            [-12, 54]\n        ],\n        [\n            [1746, 6980],\n            [32, 4],\n            [35, 7],\n            [-2, -12],\n            [41, -29],\n            [64, -41],\n            [55, 0],\n            [22, 0],\n            [0, 24],\n            [48, 0],\n            [10, -20],\n            [15, -19],\n            [16, -26],\n            [9, -31],\n            [7, -32],\n            [15, -18],\n            [23, -18],\n            [17, 47],\n            [23, 1],\n            [19, -24],\n            [14, -40],\n            [10, -35],\n            [16, -34],\n            [6, -41],\n            [8, -28],\n            [22, -18],\n            [20, -13],\n            [10, 2]\n        ],\n        [\n            [5599, 7553],\n            [9, 4],\n            [13, 1]\n        ],\n        [\n            [4661, 5921],\n            [10, 11],\n            [4, 35],\n            [9, 1],\n            [20, -16],\n            [15, 11],\n            [11, -4],\n            [4, 13],\n            [112, 1],\n            [6, 42],\n            [-5, 7],\n            [-13, 255],\n            [-14, 255],\n            [43, 1]\n        ],\n        [\n            [5118, 6189],\n            [0, -136],\n            [-15, -39],\n            [-2, -37],\n            [-25, -9],\n            [-38, -5],\n            [-10, -21],\n            [-18, -3]\n        ],\n        [\n            [4680, 5793],\n            [1, 18],\n            [-2, 23],\n            [-11, 16],\n            [-5, 34],\n            [-2, 37]\n        ],\n        [\n            [7737, 5644],\n            [-3, 44],\n            [9, 45],\n            [-10, 35],\n            [3, 65],\n            [-12, 30],\n            [-9, 71],\n            [-5, 75],\n            [-12, 49],\n            [-18, -30],\n            [-32, -42],\n            [-15, 5],\n            [-17, 14],\n            [9, 73],\n            [-6, 56],\n            [-21, 68],\n            [3, 21],\n            [-16, 7],\n            [-20, 49]\n        ],\n        [\n            [7780, 6264],\n            [-16, -14],\n            [-16, -26],\n            [-20, -2],\n            [-12, -64],\n            [-12, -11],\n            [14, -52],\n            [17, -43],\n            [12, -39],\n            [-11, -51],\n            [-9, -11],\n            [6, -30],\n            [19, -47],\n            [3, -33],\n            [0, -27],\n            [11, -54],\n            [-16, -55],\n            [-13, -61]\n        ],\n        [\n            [5538, 7532],\n            [-6, 4],\n            [-8, 19],\n            [-12, 12]\n        ],\n        [\n            [5533, 7629],\n            [8, -10],\n            [4, -9],\n            [9, -6],\n            [10, -12],\n            [-2, -5]\n        ],\n        [\n            [7437, 7970],\n            [29, 10],\n            [53, 51],\n            [42, 28],\n            [24, -18],\n            [29, -1],\n            [19, -28],\n            [28, -2],\n            [40, -15],\n            [27, 41],\n            [-11, 35],\n            [28, 61],\n            [31, -24],\n            [26, -7],\n            [32, -15],\n            [6, -44],\n            [39, -25],\n            [26, 11],\n            [36, 7],\n            [27, -7],\n            [28, -29],\n            [16, -30],\n            [26, 1],\n            [35, -10],\n            [26, 15],\n            [36, 9],\n            [41, 42],\n            [17, -6],\n            [14, -20],\n            [33, 5]\n        ],\n        [\n            [5959, 4377],\n            [21, 5],\n            [34, -17],\n            [7, 8],\n            [19, 1],\n            [10, 18],\n            [17, -1],\n            [30, 23],\n            [22, 34]\n        ],\n        [\n            [6119, 4448],\n            [5, -26],\n            [-1, -59],\n            [3, -52],\n            [1, -92],\n            [5, -29],\n            [-8, -43],\n            [-11, -41],\n            [-18, -36],\n            [-25, -23],\n            [-31, -28],\n            [-32, -64],\n            [-10, -11],\n            [-20, -42],\n            [-11, -13],\n            [-3, -42],\n            [14, -45],\n            [5, -35],\n            [0, -17],\n            [5, 3],\n            [-1, -58],\n            [-4, -28],\n            [6, -10],\n            [-4, -25],\n            [-11, -21],\n            [-23, -20],\n            [-34, -32],\n            [-12, -21],\n            [3, -25],\n            [7, -4],\n            [-3, -31]\n        ],\n        [\n            [5911, 3478],\n            [-21, 0]\n        ],\n        [\n            [5890, 3478],\n            [-2, 26],\n            [-4, 27]\n        ],\n        [\n            [5884, 3531],\n            [-3, 21],\n            [5, 66],\n            [-7, 42],\n            [-13, 83]\n        ],\n        [\n            [5866, 3743],\n            [29, 67],\n            [7, 43],\n            [5, 5],\n            [3, 35],\n            [-5, 17],\n            [1, 44],\n            [6, 41],\n            [0, 75],\n            [-15, 19],\n            [-13, 4],\n            [-6, 15],\n            [-13, 12],\n            [-23, -1],\n            [-2, 22]\n        ],\n        [\n            [5840, 4141],\n            [-2, 42],\n            [84, 49]\n        ],\n        [\n            [5922, 4232],\n            [16, -28],\n            [8, 5],\n            [11, -15],\n            [1, -23],\n            [-6, -28],\n            [2, -42],\n            [19, -36],\n            [8, 41],\n            [12, 12],\n            [-2, 76],\n            [-12, 43],\n            [-10, 19],\n            [-10, -1],\n            [-7, 77],\n            [7, 45]\n        ],\n        [\n            [4661, 5921],\n            [-18, 41],\n            [-17, 43],\n            [-18, 16],\n            [-13, 17],\n            [-16, -1],\n            [-13, -12],\n            [-14, 5],\n            [-10, -19]\n        ],\n        [\n            [4542, 6011],\n            [-2, 32],\n            [8, 29],\n            [3, 55],\n            [-3, 59],\n            [-3, 29],\n            [2, 30],\n            [-7, 28],\n            [-14, 25]\n        ],\n        [\n            [4526, 6298],\n            [6, 20],\n            [108, -1],\n            [-5, 86],\n            [7, 30],\n            [26, 5],\n            [-1, 152],\n            [91, -4],\n            [0, 90]\n        ],\n        [\n            [5922, 4232],\n            [-15, 15],\n            [9, 55],\n            [9, 21],\n            [-6, 49],\n            [6, 48],\n            [5, 16],\n            [-7, 50],\n            [-14, 26]\n        ],\n        [\n            [5909, 4512],\n            [28, -11],\n            [5, -16],\n            [10, -28],\n            [7, -80]\n        ],\n        [\n            [7836, 5425],\n            [7, -5],\n            [16, -36],\n            [12, -40],\n            [2, -39],\n            [-3, -27],\n            [2, -21],\n            [2, -35],\n            [10, -16],\n            [11, -52],\n            [-1, -20],\n            [-19, -4],\n            [-27, 44],\n            [-32, 47],\n            [-4, 30],\n            [-16, 39],\n            [-4, 49],\n            [-10, 32],\n            [4, 43],\n            [-7, 25]\n        ],\n        [\n            [7779, 5439],\n            [5, 11],\n            [23, -26],\n            [2, -30],\n            [18, 7],\n            [9, 24]\n        ],\n        [\n            [8045, 5176],\n            [21, -20],\n            [21, 11],\n            [6, 50],\n            [12, 11],\n            [33, 13],\n            [20, 47],\n            [14, 37]\n        ],\n        [\n            [8206, 5379],\n            [22, 41],\n            [14, 47],\n            [11, 0],\n            [14, -30],\n            [1, -26],\n            [19, -16],\n            [23, -18],\n            [-2, -23],\n            [-19, -3],\n            [5, -29],\n            [-20, -20]\n        ],\n        [\n            [5453, 3369],\n            [-20, 45],\n            [-11, 43],\n            [-6, 58],\n            [-7, 42],\n            [-9, 91],\n            [-1, 71],\n            [-3, 32],\n            [-11, 25],\n            [-15, 48],\n            [-14, 71],\n            [-6, 37],\n            [-23, 58],\n            [-2, 45]\n        ],\n        [\n            [5644, 4022],\n            [23, 14],\n            [18, -4],\n            [11, -13],\n            [0, -5]\n        ],\n        [\n            [5552, 3594],\n            [0, -218],\n            [-25, -30],\n            [-15, -4],\n            [-17, 11],\n            [-13, 4],\n            [-4, 25],\n            [-11, 17],\n            [-14, -30]\n        ],\n        [\n            [9604, 3812],\n            [23, -36],\n            [14, -28],\n            [-10, -14],\n            [-16, 16],\n            [-19, 27],\n            [-18, 31],\n            [-19, 42],\n            [-4, 20],\n            [12, -1],\n            [16, -20],\n            [12, -20],\n            [9, -17]\n        ],\n        [\n            [5412, 6408],\n            [7, -92],\n            [10, -15],\n            [1, -19],\n            [11, -20],\n            [-6, -25],\n            [-11, -120],\n            [-1, -77],\n            [-35, -56],\n            [-12, -78],\n            [11, -22],\n            [0, -38],\n            [18, -1],\n            [-3, -28]\n        ],\n        [\n            [5393, 5795],\n            [-5, -1],\n            [-19, 64],\n            [-6, 3],\n            [-22, -33],\n            [-21, 17],\n            [-15, 3],\n            [-8, -8],\n            [-17, 2],\n            [-16, -25],\n            [-14, -2],\n            [-34, 31],\n            [-13, -15],\n            [-14, 1],\n            [-10, 23],\n            [-28, 22],\n            [-30, -7],\n            [-7, -13],\n            [-4, -34],\n            [-8, -24],\n            [-2, -53]\n        ],\n        [\n            [5236, 5339],\n            [-29, -21],\n            [-11, 3],\n            [-10, -13],\n            [-23, 1],\n            [-15, 37],\n            [-9, 43],\n            [-19, 39],\n            [-21, -1],\n            [-25, 0]\n        ],\n        [\n            [2619, 5713],\n            [-10, 18],\n            [-13, 24],\n            [-6, 20],\n            [-12, 19],\n            [-13, 26],\n            [3, 9],\n            [4, -9],\n            [2, 5]\n        ],\n        [\n            [2690, 5943],\n            [-2, -5],\n            [-2, -13],\n            [3, -22],\n            [-6, -20],\n            [-3, -24],\n            [-1, -26],\n            [1, -15],\n            [1, -27],\n            [-4, -6],\n            [-3, -25],\n            [2, -15],\n            [-6, -16],\n            [2, -16],\n            [4, -9]\n        ],\n        [\n            [5092, 8091],\n            [14, 16],\n            [24, 87],\n            [38, 25],\n            [23, -2]\n        ],\n        [\n            [5863, 9167],\n            [-47, -24],\n            [-22, -5]\n        ],\n        [\n            [5573, 9140],\n            [-17, -2],\n            [-4, -39],\n            [-53, 9],\n            [-7, -33],\n            [-27, 1],\n            [-18, -42],\n            [-28, -66],\n            [-43, -83],\n            [10, -20],\n            [-10, -24],\n            [-27, 1],\n            [-18, -55],\n            [2, -79],\n            [17, -29],\n            [-9, -70],\n            [-23, -40],\n            [-12, -34]\n        ],\n        [\n            [5306, 8535],\n            [-19, 36],\n            [-55, -69],\n            [-37, -13],\n            [-38, 30],\n            [-10, 63],\n            [-9, 137],\n            [26, 38],\n            [73, 49],\n            [55, 61],\n            [51, 82],\n            [66, 115],\n            [47, 44],\n            [76, 74],\n            [61, 26],\n            [46, -3],\n            [42, 49],\n            [51, -3],\n            [50, 12],\n            [87, -43],\n            [-36, -16],\n            [30, -37]\n        ],\n        [\n            [5686, 9657],\n            [-62, -24],\n            [-49, 13],\n            [19, 16],\n            [-16, 19],\n            [57, 11],\n            [11, -22],\n            [40, -13]\n        ],\n        [\n            [5506, 9766],\n            [92, -44],\n            [-70, -23],\n            [-15, -44],\n            [-25, -11],\n            [-13, -49],\n            [-34, -2],\n            [-59, 36],\n            [25, 21],\n            [-42, 17],\n            [-54, 50],\n            [-21, 46],\n            [75, 21],\n            [16, -20],\n            [39, 0],\n            [11, 21],\n            [40, 2],\n            [35, -21]\n        ],\n        [\n            [5706, 9808],\n            [55, -21],\n            [-41, -32],\n            [-81, -7],\n            [-82, 10],\n            [-5, 16],\n            [-40, 1],\n            [-30, 27],\n            [86, 17],\n            [40, -14],\n            [28, 17],\n            [70, -14]\n        ],\n        [\n            [9805, 2640],\n            [6, -24],\n            [20, 24],\n            [8, -25],\n            [0, -25],\n            [-10, -27],\n            [-18, -44],\n            [-14, -24],\n            [10, -28],\n            [-22, -1],\n            [-23, -22],\n            [-8, -39],\n            [-16, -60],\n            [-21, -26],\n            [-14, -17],\n            [-26, 1],\n            [-18, 20],\n            [-30, 4],\n            [-5, 22],\n            [15, 43],\n            [35, 59],\n            [18, 11],\n            [20, 22],\n            [24, 31],\n            [16, 31],\n            [13, 44],\n            [10, 15],\n            [5, 33],\n            [19, 27],\n            [6, -25]\n        ],\n        [\n            [9849, 2922],\n            [20, -63],\n            [1, 41],\n            [13, -16],\n            [4, -45],\n            [22, -19],\n            [19, -5],\n            [16, 22],\n            [14, -6],\n            [-7, -53],\n            [-8, -34],\n            [-22, 1],\n            [-7, -18],\n            [3, -25],\n            [-4, -11],\n            [-11, -32],\n            [-14, -41],\n            [-21, -23],\n            [-5, 15],\n            [-12, 9],\n            [16, 48],\n            [-9, 33],\n            [-30, 23],\n            [1, 22],\n            [20, 20],\n            [5, 46],\n            [-1, 38],\n            [-12, 40],\n            [1, 10],\n            [-13, 25],\n            [-22, 52],\n            [-12, 42],\n            [11, 4],\n            [15, -33],\n            [21, -15],\n            [8, -52]\n        ],\n        [\n            [6475, 6041],\n            [-9, 41],\n            [-22, 98]\n        ],\n        [\n            [6444, 6180],\n            [83, 59],\n            [19, 118],\n            [-13, 42]\n        ],\n        [\n            [6566, 6530],\n            [12, -40],\n            [16, -22],\n            [20, -8],\n            [17, -10],\n            [12, -34],\n            [8, -20],\n            [10, -7],\n            [0, -13],\n            [-10, -36],\n            [-5, -16],\n            [-12, -19],\n            [-10, -41],\n            [-13, 3],\n            [-5, -14],\n            [-5, -30],\n            [4, -39],\n            [-3, -7],\n            [-13, 0],\n            [-17, -22],\n            [-3, -29],\n            [-6, -12],\n            [-18, 0],\n            [-10, -15],\n            [0, -24],\n            [-14, -16],\n            [-15, 5],\n            [-19, -19],\n            [-12, -4]\n        ],\n        [\n            [6557, 6597],\n            [8, 20],\n            [3, -5],\n            [-2, -25],\n            [-4, -10]\n        ],\n        [\n            [6893, 6457],\n            [-20, 15],\n            [-9, 43],\n            [-21, 45],\n            [-51, -12],\n            [-45, -1],\n            [-39, -8]\n        ],\n        [\n            [2836, 5484],\n            [-9, 17],\n            [-6, 32],\n            [7, 16],\n            [-7, 4],\n            [-5, 20],\n            [-14, 16],\n            [-12, -4],\n            [-6, -20],\n            [-11, -15],\n            [-6, -2],\n            [-3, -13],\n            [13, -32],\n            [-7, -7],\n            [-4, -9],\n            [-13, -3],\n            [-5, 35],\n            [-4, -10],\n            [-9, 4],\n            [-5, 24],\n            [-12, 3],\n            [-7, 7],\n            [-12, 0],\n            [-1, -13],\n            [-3, 9]\n        ],\n        [\n            [2707, 5623],\n            [10, -22],\n            [-1, -12],\n            [11, -3],\n            [3, 5],\n            [8, -14],\n            [13, 4],\n            [12, 15],\n            [17, 12],\n            [9, 17],\n            [16, -3],\n            [-1, -6],\n            [15, -2],\n            [12, -10],\n            [10, -18],\n            [10, -16]\n        ],\n        [\n            [3045, 3974],\n            [-28, 33],\n            [-2, 25],\n            [-55, 59],\n            [-50, 65],\n            [-22, 36],\n            [-11, 49],\n            [4, 17],\n            [-23, 77],\n            [-28, 109],\n            [-26, 118],\n            [-11, 27],\n            [-9, 43],\n            [-21, 39],\n            [-20, 24],\n            [9, 26],\n            [-14, 57],\n            [9, 41],\n            [22, 37]\n        ],\n        [\n            [8510, 5555],\n            [2, -40],\n            [2, -33],\n            [-9, -54],\n            [-11, 60],\n            [-13, -30],\n            [9, -43],\n            [-8, -28],\n            [-32, 35],\n            [-8, 42],\n            [8, 28],\n            [-17, 28],\n            [-9, -24],\n            [-13, 2],\n            [-21, -33],\n            [-4, 17],\n            [11, 50],\n            [17, 17],\n            [15, 22],\n            [10, -27],\n            [21, 17],\n            [5, 26],\n            [19, 1],\n            [-1, 46],\n            [22, -28],\n            [3, -30],\n            [2, -21]\n        ],\n        [\n            [8443, 5665],\n            [-10, -20],\n            [-9, -37],\n            [-8, -17],\n            [-17, 40],\n            [5, 16],\n            [7, 17],\n            [3, 36],\n            [16, 4],\n            [-5, -40],\n            [21, 57],\n            [-3, -56]\n        ],\n        [\n            [8291, 5608],\n            [-37, -56],\n            [14, 41],\n            [20, 37],\n            [16, 41],\n            [15, 58],\n            [5, -48],\n            [-18, -33],\n            [-15, -40]\n        ],\n        [\n            [8385, 5760],\n            [16, -18],\n            [18, 0],\n            [0, -25],\n            [-13, -25],\n            [-18, -18],\n            [-1, 28],\n            [2, 30],\n            [-4, 28]\n        ],\n        [\n            [8485, 5776],\n            [8, -66],\n            [-21, 16],\n            [0, -20],\n            [7, -37],\n            [-13, -13],\n            [-1, 42],\n            [-9, 3],\n            [-4, 36],\n            [16, -5],\n            [0, 22],\n            [-17, 45],\n            [27, -1],\n            [7, -22]\n        ],\n        [\n            [8375, 5830],\n            [-7, -51],\n            [-12, 29],\n            [-15, 45],\n            [24, -2],\n            [10, -21]\n        ],\n        [\n            [8369, 6151],\n            [17, -17],\n            [9, 15],\n            [2, -15],\n            [-4, -24],\n            [9, -43],\n            [-7, -49],\n            [-16, -19],\n            [-5, -48],\n            [7, -47],\n            [14, -7],\n            [13, 7],\n            [34, -32],\n            [-2, -32],\n            [9, -15],\n            [-3, -27],\n            [-22, 29],\n            [-10, 31],\n            [-7, -22],\n            [-18, 36],\n            [-25, -9],\n            [-14, 13],\n            [1, 25],\n            [9, 15],\n            [-8, 13],\n            [-4, -21],\n            [-14, 34],\n            [-4, 26],\n            [-1, 56],\n            [11, -19],\n            [3, 92],\n            [9, 54],\n            [17, 0]\n        ],\n        [\n            [9329, 4655],\n            [-8, -6],\n            [-12, 22],\n            [-12, 38],\n            [-6, 45],\n            [4, 6],\n            [3, -18],\n            [8, -13],\n            [14, -38],\n            [13, -20],\n            [-4, -16]\n        ],\n        [\n            [9221, 4734],\n            [-15, -5],\n            [-4, -17],\n            [-15, -14],\n            [-15, -14],\n            [-14, 0],\n            [-23, 18],\n            [-16, 16],\n            [2, 18],\n            [25, -8],\n            [15, 4],\n            [5, 29],\n            [4, 1],\n            [2, -31],\n            [16, 4],\n            [8, 20],\n            [16, 21],\n            [-4, 35],\n            [17, 1],\n            [6, -9],\n            [-1, -33],\n            [-9, -36]\n        ],\n        [\n            [8916, 4904],\n            [48, -41],\n            [51, -34],\n            [19, -30],\n            [16, -30],\n            [4, -34],\n            [46, -37],\n            [7, -31],\n            [-25, -7],\n            [6, -39],\n            [25, -39],\n            [18, -62],\n            [15, 2],\n            [-1, -27],\n            [22, -10],\n            [-9, -11],\n            [30, -25],\n            [-3, -17],\n            [-18, -4],\n            [-7, 16],\n            [-24, 6],\n            [-28, 9],\n            [-22, 38],\n            [-16, 32],\n            [-14, 52],\n            [-36, 26],\n            [-24, -17],\n            [-17, -20],\n            [4, -43],\n            [-22, -20],\n            [-16, 9],\n            [-28, 3]\n        ],\n        [\n            [9253, 4792],\n            [-9, -16],\n            [-5, 35],\n            [-6, 23],\n            [-13, 19],\n            [-16, 25],\n            [-20, 18],\n            [8, 14],\n            [15, -17],\n            [9, -13],\n            [12, -14],\n            [11, -25],\n            [11, -19],\n            [3, -30]\n        ],\n        [\n            [5392, 8233],\n            [19, 18],\n            [43, 27],\n            [35, 20],\n            [28, -10],\n            [2, -14],\n            [27, -1]\n        ],\n        [\n            [5546, 8273],\n            [34, -7],\n            [51, 1]\n        ],\n        [\n            [5653, 8105],\n            [14, -52],\n            [-3, -17],\n            [-14, -6],\n            [-25, -50],\n            [7, -26],\n            [-6, 3]\n        ],\n        [\n            [5626, 7957],\n            [-26, 23],\n            [-20, -8],\n            [-13, 6],\n            [-17, -13],\n            [-14, 21],\n            [-11, -8],\n            [-2, 4]\n        ],\n        [\n            [3159, 6151],\n            [14, -5],\n            [5, -12],\n            [-7, -15],\n            [-21, 1],\n            [-17, -2],\n            [-1, 25],\n            [4, 9],\n            [23, -1]\n        ],\n        [\n            [8628, 7562],\n            [4, -10]\n        ],\n        [\n            [8632, 7552],\n            [-11, 3],\n            [-12, -20],\n            [-8, -20],\n            [1, -42],\n            [-14, -13],\n            [-5, -11],\n            [-11, -17],\n            [-18, -10],\n            [-12, -16],\n            [-1, -25],\n            [-3, -7],\n            [11, -9],\n            [15, -26]\n        ],\n        [\n            [8504, 7288],\n            [-13, 11],\n            [-4, -11],\n            [-8, -5],\n            [-1, 11],\n            [-7, 5],\n            [-8, 10],\n            [8, 26],\n            [7, 7],\n            [-3, 11],\n            [7, 31],\n            [-2, 10],\n            [-16, 7],\n            [-13, 15]\n        ],\n        [\n            [4792, 7249],\n            [-11, -15],\n            [-14, 8],\n            [-15, -6],\n            [5, 46],\n            [-3, 36],\n            [-12, 6],\n            [-7, 22],\n            [2, 39],\n            [11, 21],\n            [2, 24],\n            [6, 36],\n            [-1, 25],\n            [-5, 21],\n            [-1, 20]\n        ],\n        [\n            [6411, 6520],\n            [-2, 43],\n            [7, 31],\n            [8, 6],\n            [8, -18],\n            [1, -35],\n            [-6, -35]\n        ],\n        [\n            [6427, 6512],\n            [-8, -4],\n            [-8, 12]\n        ],\n        [\n            [5630, 7886],\n            [12, 13],\n            [17, -7],\n            [18, 0],\n            [13, -14],\n            [10, 9],\n            [20, 5],\n            [7, 14],\n            [12, 0]\n        ],\n        [\n            [5784, 7745],\n            [12, -11],\n            [13, 9],\n            [13, -10]\n        ],\n        [\n            [5822, 7733],\n            [0, -15],\n            [-13, -13],\n            [-9, 6],\n            [-7, -71]\n        ],\n        [\n            [5629, 7671],\n            [-5, 10],\n            [6, 10],\n            [-7, 7],\n            [-8, -13],\n            [-17, 17],\n            [-2, 25],\n            [-17, 14],\n            [-3, 18],\n            [-15, 24]\n        ],\n        [\n            [8989, 8056],\n            [28, -105],\n            [-41, 19],\n            [-17, -85],\n            [27, -61],\n            [-1, -41],\n            [-21, 36],\n            [-18, -46],\n            [-5, 50],\n            [3, 57],\n            [-3, 64],\n            [6, 45],\n            [2, 79],\n            [-17, 58],\n            [3, 80],\n            [25, 28],\n            [-11, 27],\n            [13, 8],\n            [7, -39],\n            [10, -57],\n            [-1, -58],\n            [11, -59]\n        ],\n        [\n            [5546, 8273],\n            [6, 26],\n            [38, 19]\n        ],\n        [\n            [0, 9132],\n            [68, -45],\n            [73, -59],\n            [-3, -37],\n            [19, -15],\n            [-6, 43],\n            [75, -8],\n            [55, -56],\n            [-28, -26],\n            [-46, -6],\n            [0, -57],\n            [-11, -13],\n            [-26, 2],\n            [-22, 21],\n            [-36, 17],\n            [-7, 26],\n            [-28, 9],\n            [-31, -7],\n            [-16, 20],\n            [6, 22],\n            [-33, -14],\n            [13, -28],\n            [-16, -25]\n        ],\n        [\n            [0, 8896],\n            [0, 236]\n        ],\n        [\n            [0, 9282],\n            [9999, -40],\n            [-30, -3],\n            [-5, 19],\n            [-9964, 24]\n        ],\n        [\n            [0, 9282],\n            [4, 3],\n            [23, 0],\n            [40, -17],\n            [-2, -8],\n            [-29, -14],\n            [-36, -4],\n            [0, 40]\n        ],\n        [\n            [8988, 9383],\n            [-42, -1],\n            [-57, 7],\n            [-5, 3],\n            [27, 23],\n            [34, 6],\n            [40, -23],\n            [3, -15]\n        ],\n        [\n            [9186, 9493],\n            [-32, -23],\n            [-44, 5],\n            [-52, 23],\n            [7, 20],\n            [51, -9],\n            [70, -16]\n        ],\n        [\n            [9029, 9522],\n            [-22, -44],\n            [-102, 1],\n            [-46, -14],\n            [-55, 39],\n            [15, 40],\n            [37, 11],\n            [73, -2],\n            [100, -31]\n        ],\n        [\n            [6598, 9235],\n            [-17, -5],\n            [-91, 8],\n            [-7, 26],\n            [-50, 16],\n            [-4, 32],\n            [28, 13],\n            [-1, 32],\n            [55, 50],\n            [-25, 7],\n            [66, 52],\n            [-7, 27],\n            [62, 31],\n            [91, 38],\n            [93, 11],\n            [48, 22],\n            [54, 8],\n            [19, -23],\n            [-19, -19],\n            [-98, -29],\n            [-85, -28],\n            [-86, -57],\n            [-42, -57],\n            [-43, -57],\n            [5, -49],\n            [54, -49]\n        ],\n        [\n            [0, 8896],\n            [9963, -26],\n            [-36, 4],\n            [25, -31],\n            [17, -49],\n            [13, -16],\n            [3, -24],\n            [-7, -16],\n            [-52, 13],\n            [-78, -44],\n            [-25, -7],\n            [-42, -42],\n            [-40, -36],\n            [-11, -27],\n            [-39, 41],\n            [-73, -46],\n            [-12, 22],\n            [-27, -26],\n            [-37, 8],\n            [-9, -38],\n            [-33, -58],\n            [1, -24],\n            [31, -13],\n            [-4, -86],\n            [-25, -2],\n            [-12, -49],\n            [11, -26],\n            [-48, -30],\n            [-10, -67],\n            [-41, -15],\n            [-9, -60],\n            [-40, -55],\n            [-10, 41],\n            [-12, 86],\n            [-15, 131],\n            [13, 82],\n            [23, 35],\n            [2, 28],\n            [43, 13],\n            [50, 75],\n            [47, 60],\n            [50, 48],\n            [23, 83],\n            [-34, -5],\n            [-17, -49],\n            [-70, -65],\n            [-23, 73],\n            [-72, -20],\n            [-69, -99],\n            [23, -36],\n            [-62, -16],\n            [-43, -6],\n            [2, 43],\n            [-43, 9],\n            [-35, -29],\n            [-85, 10],\n            [-91, -18],\n            [-90, -115],\n            [-106, -139],\n            [43, -8],\n            [14, -37],\n            [27, -13],\n            [18, 30],\n            [30, -4],\n            [40, -65],\n            [1, -50],\n            [-21, -59],\n            [-3, -71],\n            [-12, -94],\n            [-42, -86],\n            [-9, -41],\n            [-38, -69],\n            [-38, -68],\n            [-18, -35],\n            [-37, -34],\n            [-17, -1],\n            [-17, 29],\n            [-38, -44],\n            [-4, -19]\n        ],\n        [\n            [6363, 7799],\n            [-12, -35],\n            [-27, -10],\n            [-28, -61],\n            [25, -56],\n            [-2, -40],\n            [30, -70]\n        ],\n        [\n            [6109, 7624],\n            [-35, 49],\n            [-32, 23],\n            [-24, 34],\n            [20, 10],\n            [23, 49],\n            [-15, 24],\n            [41, 24],\n            [-1, 13],\n            [-25, -10]\n        ],\n        [\n            [6061, 7840],\n            [1, 26],\n            [14, 17],\n            [27, 4],\n            [5, 20],\n            [-7, 33],\n            [12, 30],\n            [-1, 18],\n            [-41, 19],\n            [-16, -1],\n            [-17, 28],\n            [-21, -9],\n            [-35, 20],\n            [0, 12],\n            [-10, 26],\n            [-22, 3],\n            [-2, 18],\n            [7, 12],\n            [-18, 33],\n            [-29, -5],\n            [-8, 3],\n            [-7, -14],\n            [-11, 3]\n        ],\n        [\n            [5777, 8571],\n            [31, 33],\n            [-29, 28]\n        ],\n        [\n            [5863, 9167],\n            [29, 20],\n            [46, -35],\n            [76, -14],\n            [105, -67],\n            [21, -28],\n            [2, -40],\n            [-31, -31],\n            [-45, -15],\n            [-124, 44],\n            [-21, -7],\n            [45, -43],\n            [2, -28],\n            [2, -60],\n            [36, -18],\n            [22, -15],\n            [3, 28],\n            [-17, 26],\n            [18, 22],\n            [67, -37],\n            [24, 15],\n            [-19, 43],\n            [65, 58],\n            [25, -4],\n            [26, -20],\n            [16, 40],\n            [-23, 35],\n            [14, 36],\n            [-21, 36],\n            [78, -18],\n            [16, -34],\n            [-35, -7],\n            [0, -33],\n            [22, -20],\n            [43, 13],\n            [7, 38],\n            [58, 28],\n            [97, 50],\n            [20, -3],\n            [-27, -35],\n            [35, -7],\n            [19, 21],\n            [52, 1],\n            [42, 25],\n            [31, -36],\n            [32, 39],\n            [-29, 35],\n            [14, 19],\n            [82, -18],\n            [39, -18],\n            [100, -68],\n            [19, 31],\n            [-28, 31],\n            [-1, 13],\n            [-34, 6],\n            [10, 28],\n            [-15, 46],\n            [-1, 19],\n            [51, 53],\n            [18, 54],\n            [21, 11],\n            [74, -15],\n            [5, -33],\n            [-26, -48],\n            [17, -19],\n            [9, -41],\n            [-6, -81],\n            [31, -36],\n            [-12, -40],\n            [-55, -84],\n            [32, -8],\n            [11, 21],\n            [31, 15],\n            [7, 29],\n            [24, 29],\n            [-16, 33],\n            [13, 39],\n            [-31, 5],\n            [-6, 33],\n            [22, 59],\n            [-36, 48],\n            [50, 40],\n            [-7, 42],\n            [14, 2],\n            [15, -33],\n            [-11, -57],\n            [29, -11],\n            [-12, 43],\n            [46, 23],\n            [58, 3],\n            [51, -34],\n            [-25, 49],\n            [-2, 63],\n            [48, 12],\n            [67, -2],\n            [60, 7],\n            [-23, 31],\n            [33, 39],\n            [31, 2],\n            [54, 29],\n            [74, 8],\n            [9, 16],\n            [73, 6],\n            [23, -14],\n            [62, 32],\n            [51, -1],\n            [8, 25],\n            [26, 25],\n            [66, 25],\n            [48, -19],\n            [-38, -15],\n            [63, -9],\n            [7, -29],\n            [25, 14],\n            [82, -1],\n            [62, -29],\n            [23, -22],\n            [-7, -30],\n            [-31, -18],\n            [-73, -33],\n            [-21, -17],\n            [35, -8],\n            [41, -15],\n            [25, 11],\n            [14, -38],\n            [12, 15],\n            [44, 10],\n            [90, -10],\n            [6, -28],\n            [116, -9],\n            [2, 46],\n            [59, -11],\n            [44, 1],\n            [45, -32],\n            [13, -37],\n            [-17, -25],\n            [35, -47],\n            [44, -24],\n            [27, 62],\n            [44, -26],\n            [48, 16],\n            [53, -18],\n            [21, 16],\n            [45, -8],\n            [-20, 55],\n            [37, 25],\n            [251, -38],\n            [24, -35],\n            [72, -45],\n            [112, 11],\n            [56, -10],\n            [23, -24],\n            [-4, -44],\n            [35, -16],\n            [37, 12],\n            [49, 1],\n            [52, -11],\n            [53, 6],\n            [49, -52],\n            [34, 19],\n            [-23, 37],\n            [13, 27],\n            [88, -17],\n            [58, 4],\n            [80, -29],\n            [-9960, -25]\n        ],\n        [\n            [7918, 9684],\n            [-157, -23],\n            [51, 77],\n            [23, 7],\n            [21, -4],\n            [70, -33],\n            [-8, -24]\n        ],\n        [\n            [6420, 9816],\n            [-37, -8],\n            [-25, -4],\n            [-4, -10],\n            [-33, -10],\n            [-30, 14],\n            [16, 19],\n            [-62, 2],\n            [54, 10],\n            [43, 1],\n            [5, -16],\n            [16, 14],\n            [26, 10],\n            [42, -13],\n            [-11, -9]\n        ],\n        [\n            [7775, 9718],\n            [-60, -8],\n            [-78, 17],\n            [-46, 23],\n            [-21, 42],\n            [-38, 12],\n            [72, 40],\n            [60, 14],\n            [54, -30],\n            [64, -57],\n            [-7, -53]\n        ],\n        [\n            [5844, 4990],\n            [11, -33],\n            [-1, -35],\n            [-8, -7]\n        ],\n        [\n            [5821, 4978],\n            [7, -6],\n            [16, 18]\n        ],\n        [\n            [4526, 6298],\n            [1, 25]\n        ],\n        [\n            [6188, 6023],\n            [-4, 26],\n            [-8, 17],\n            [-2, 24],\n            [-15, 21],\n            [-15, 50],\n            [-7, 48],\n            [-20, 40],\n            [-12, 10],\n            [-18, 56],\n            [-4, 41],\n            [2, 35],\n            [-16, 66],\n            [-13, 23],\n            [-15, 12],\n            [-10, 34],\n            [2, 13],\n            [-8, 31],\n            [-8, 13],\n            [-11, 44],\n            [-17, 48],\n            [-14, 40],\n            [-14, 0],\n            [5, 33],\n            [1, 20],\n            [3, 24]\n        ],\n        [\n            [6344, 6744],\n            [11, -51],\n            [14, -13],\n            [5, -21],\n            [18, -25],\n            [2, -24],\n            [-3, -20],\n            [4, -20],\n            [8, -16],\n            [4, -20],\n            [4, -14]\n        ],\n        [\n            [6427, 6512],\n            [5, -22]\n        ],\n        [\n            [6444, 6180],\n            [-80, -23],\n            [-26, -26],\n            [-20, -62],\n            [-13, -10],\n            [-7, 20],\n            [-11, -3],\n            [-27, 6],\n            [-5, 5],\n            [-32, -1],\n            [-7, -5],\n            [-12, 15],\n            [-7, -29],\n            [3, -25],\n            [-12, -19]\n        ],\n        [\n            [5943, 5617],\n            [-4, 1],\n            [0, 29],\n            [-3, 20],\n            [-14, 24],\n            [-4, 42],\n            [4, 44],\n            [-13, 4],\n            [-2, -13],\n            [-17, -3],\n            [7, -17],\n            [2, -36],\n            [-15, -32],\n            [-14, -43],\n            [-14, -6],\n            [-23, 34],\n            [-11, -12],\n            [-3, -17],\n            [-14, -11],\n            [-1, -12],\n            [-28, 0],\n            [-3, 12],\n            [-20, 2],\n            [-10, -10],\n            [-8, 5],\n            [-14, 34],\n            [-5, 17],\n            [-20, -9],\n            [-8, -27],\n            [-7, -53],\n            [-10, -11],\n            [-8, -6]\n        ],\n        [\n            [5663, 5567],\n            [-2, 2]\n        ],\n        [\n            [5635, 5716],\n            [0, 14],\n            [-10, 17],\n            [-1, 35],\n            [-5, 23],\n            [-10, -4],\n            [3, 22],\n            [7, 25],\n            [-3, 24],\n            [9, 18],\n            [-6, 14],\n            [7, 36],\n            [13, 44],\n            [24, -4],\n            [-1, 234]\n        ],\n        [\n            [6023, 6357],\n            [9, -58],\n            [-6, -10],\n            [4, -61],\n            [11, -71],\n            [10, -14],\n            [15, -22]\n        ],\n        [\n            [5943, 5624],\n            [0, -7]\n        ],\n        [\n            [5943, 5617],\n            [0, -46]\n        ],\n        [\n            [5944, 5309],\n            [-17, -28],\n            [-20, 1],\n            [-22, -14],\n            [-18, 13],\n            [-11, -16]\n        ],\n        [\n            [5682, 5544],\n            [-19, 23]\n        ],\n        [\n            [4535, 5861],\n            [-11, 46],\n            [-14, 21],\n            [12, 11],\n            [14, 41],\n            [6, 31]\n        ],\n        [\n            [4536, 5789],\n            [-4, 45]\n        ],\n        [\n            [9502, 4438],\n            [8, -20],\n            [-19, 0],\n            [-11, 37],\n            [17, -15],\n            [5, -2]\n        ],\n        [\n            [9467, 4474],\n            [-11, -1],\n            [-17, 6],\n            [-5, 9],\n            [1, 23],\n            [19, -9],\n            [9, -12],\n            [4, -16]\n        ],\n        [\n            [9490, 4490],\n            [-4, -11],\n            [-21, 52],\n            [-5, 35],\n            [9, 0],\n            [10, -47],\n            [11, -29]\n        ],\n        [\n            [9440, 4565],\n            [1, -12],\n            [-22, 25],\n            [-15, 21],\n            [-10, 20],\n            [4, 6],\n            [13, -14],\n            [23, -27],\n            [6, -19]\n        ],\n        [\n            [9375, 4623],\n            [-5, -3],\n            [-13, 14],\n            [-11, 24],\n            [1, 10],\n            [17, -25],\n            [11, -20]\n        ],\n        [\n            [4682, 5458],\n            [-8, 5],\n            [-20, 24],\n            [-14, 31],\n            [-5, 22],\n            [-3, 43]\n        ],\n        [\n            [2561, 5848],\n            [-3, -14],\n            [-16, 1],\n            [-10, 6],\n            [-12, 12],\n            [-15, 3],\n            [-8, 13]\n        ],\n        [\n            [6198, 5735],\n            [9, -11],\n            [5, -25],\n            [13, -24],\n            [14, -1],\n            [26, 16],\n            [30, 7],\n            [25, 18],\n            [13, 4],\n            [10, 11],\n            [16, 2]\n        ],\n        [\n            [6359, 5732],\n            [0, -1],\n            [0, -25],\n            [0, -59],\n            [0, -31],\n            [-13, -36],\n            [-19, -50]\n        ],\n        [\n            [6359, 5732],\n            [9, 1],\n            [13, 9],\n            [14, 6],\n            [14, 20],\n            [10, 0],\n            [1, -16],\n            [-3, -35],\n            [0, -31],\n            [-6, -21],\n            [-7, -64],\n            [-14, -66],\n            [-17, -75],\n            [-24, -87],\n            [-23, -66],\n            [-33, -81],\n            [-28, -48],\n            [-42, -58],\n            [-25, -45],\n            [-31, -72],\n            [-6, -31],\n            [-6, -14]\n        ],\n        [\n            [3412, 5410],\n            [34, -11],\n            [2, 10],\n            [23, 4],\n            [30, -15]\n        ],\n        [\n            [3489, 5306],\n            [10, -35],\n            [-4, -25]\n        ],\n        [\n            [5626, 7957],\n            [-8, -15],\n            [-5, -24]\n        ],\n        [\n            [5380, 7746],\n            [7, 5]\n        ],\n        [\n            [5663, 8957],\n            [-47, -17],\n            [-27, -41],\n            [4, -36],\n            [-44, -48],\n            [-54, -50],\n            [-20, -84],\n            [20, -41],\n            [26, -33],\n            [-25, -67],\n            [-29, -14],\n            [-11, -99],\n            [-15, -55],\n            [-34, 6],\n            [-16, -47],\n            [-32, -3],\n            [-9, 56],\n            [-23, 67],\n            [-21, 84]\n        ],\n        [\n            [5890, 3478],\n            [-5, -26],\n            [-17, -6],\n            [-16, 32],\n            [0, 20],\n            [7, 22],\n            [3, 17],\n            [8, 5],\n            [14, -11]\n        ],\n        [\n            [5999, 7104],\n            [-2, 45],\n            [7, 25]\n        ],\n        [\n            [6004, 7174],\n            [7, 13],\n            [7, 13],\n            [2, 33],\n            [9, -12],\n            [31, 17],\n            [14, -12],\n            [23, 1],\n            [32, 22],\n            [15, -1],\n            [32, 9]\n        ],\n        [\n            [5051, 5420],\n            [-22, -12]\n        ],\n        [\n            [7849, 5777],\n            [-25, 28],\n            [-24, -2],\n            [4, 47],\n            [-24, 0],\n            [-2, -65],\n            [-15, -87],\n            [-10, -52],\n            [2, -43],\n            [18, -2],\n            [12, -53],\n            [5, -52],\n            [15, -33],\n            [17, -7],\n            [14, -31]\n        ],\n        [\n            [7779, 5439],\n            [-11, 23],\n            [-4, 29],\n            [-15, 34],\n            [-14, 28],\n            [-4, -35],\n            [-5, 33],\n            [3, 37],\n            [8, 56]\n        ],\n        [\n            [6883, 7252],\n            [16, 60],\n            [-6, 44],\n            [-20, 14],\n            [7, 26],\n            [23, -3],\n            [13, 33],\n            [9, 38],\n            [37, 13],\n            [-6, -27],\n            [4, -17],\n            [12, 2]\n        ],\n        [\n            [6497, 7255],\n            [-5, 42],\n            [4, 62],\n            [-22, 20],\n            [8, 40],\n            [-19, 4],\n            [6, 49],\n            [26, -14],\n            [25, 19],\n            [-20, 35],\n            [-8, 34],\n            [-23, -15],\n            [-3, -43],\n            [-8, 38]\n        ],\n        [\n            [6554, 7498],\n            [31, 1],\n            [-4, 29],\n            [24, 21],\n            [23, 34],\n            [37, -31],\n            [3, -47],\n            [11, -12],\n            [30, 2],\n            [9, -10],\n            [14, -61],\n            [32, -41],\n            [18, -28],\n            [29, -29],\n            [37, -25],\n            [-1, -36]\n        ],\n        [\n            [8471, 4532],\n            [3, 14],\n            [24, 13],\n            [19, 2],\n            [9, 8],\n            [10, -8],\n            [-10, -16],\n            [-29, -25],\n            [-23, -17]\n        ],\n        [\n            [3286, 5693],\n            [16, 8],\n            [6, -2],\n            [-1, -44],\n            [-23, -7],\n            [-5, 6],\n            [8, 16],\n            [-1, 23]\n        ],\n        [\n            [5233, 7240],\n            [31, 24],\n            [19, -7],\n            [-1, -30],\n            [24, 22],\n            [2, -12],\n            [-14, -29],\n            [0, -27],\n            [9, -15],\n            [-3, -51],\n            [-19, -29],\n            [6, -33],\n            [14, -1],\n            [7, -28],\n            [11, -9]\n        ],\n        [\n            [6004, 7174],\n            [-11, 27],\n            [11, 22],\n            [-17, -5],\n            [-23, 13],\n            [-19, -34],\n            [-43, -6],\n            [-22, 31],\n            [-30, 2],\n            [-6, -24],\n            [-20, -7],\n            [-26, 31],\n            [-31, -1],\n            [-16, 59],\n            [-21, 33],\n            [14, 46],\n            [-18, 28],\n            [31, 56],\n            [43, 3],\n            [12, 45],\n            [53, -8],\n            [33, 38],\n            [32, 17],\n            [46, 1],\n            [49, -42],\n            [40, -22],\n            [32, 9],\n            [24, -6],\n            [33, 31]\n        ],\n        [\n            [5777, 7539],\n            [3, -23],\n            [25, -19],\n            [-5, -14],\n            [-33, -3],\n            [-12, -19],\n            [-23, -31],\n            [-9, 27],\n            [0, 12]\n        ],\n        [\n            [8382, 6499],\n            [-17, -95],\n            [-12, -49],\n            [-14, 50],\n            [-4, 44],\n            [17, 58],\n            [22, 45],\n            [13, -18],\n            [-5, -35]\n        ],\n        [\n            [6088, 4781],\n            [-12, -73],\n            [1, -33],\n            [18, -22],\n            [1, -15],\n            [-8, -36],\n            [2, -18],\n            [-2, -28],\n            [10, -37],\n            [11, -58],\n            [10, -13]\n        ],\n        [\n            [5909, 4512],\n            [-15, 18],\n            [-18, 10],\n            [-11, 10],\n            [-12, 15]\n        ],\n        [\n            [5844, 4990],\n            [10, 8],\n            [31, -1],\n            [56, 4]\n        ],\n        [\n            [6061, 7840],\n            [-22, -5],\n            [-18, -19],\n            [-26, -3],\n            [-24, -22],\n            [1, -37],\n            [14, -14],\n            [28, 4],\n            [-5, -21],\n            [-31, -11],\n            [-37, -34],\n            [-16, 12],\n            [6, 28],\n            [-30, 17],\n            [5, 12],\n            [26, 19],\n            [-8, 14],\n            [-43, 15],\n            [-2, 22],\n            [-25, -8],\n            [-11, -32],\n            [-21, -44]\n        ],\n        [\n            [3517, 3063],\n            [-12, -38],\n            [-31, -32],\n            [-21, 11],\n            [-15, -6],\n            [-26, 25],\n            [-18, -1],\n            [-17, 32]\n        ],\n        [\n            [679, 6185],\n            [-4, -10],\n            [-7, 8],\n            [1, 17],\n            [-4, 21],\n            [1, 7],\n            [5, 10],\n            [-2, 11],\n            [1, 6],\n            [3, -1],\n            [10, -10],\n            [5, -5],\n            [5, -8],\n            [7, -21],\n            [-1, -3],\n            [-11, -13],\n            [-9, -9]\n        ],\n        [\n            [664, 6277],\n            [-9, -4],\n            [-5, 12],\n            [-3, 5],\n            [0, 4],\n            [3, 5],\n            [9, -6],\n            [8, -9],\n            [-3, -7]\n        ],\n        [\n            [646, 6309],\n            [-1, -7],\n            [-15, 2],\n            [2, 7],\n            [14, -2]\n        ],\n        [\n            [621, 6317],\n            [-2, -3],\n            [-2, 1],\n            [-9, 2],\n            [-4, 13],\n            [-1, 2],\n            [7, 8],\n            [3, -3],\n            [8, -20]\n        ],\n        [\n            [574, 6356],\n            [-4, -6],\n            [-9, 11],\n            [1, 4],\n            [5, 6],\n            [6, -1],\n            [1, -14]\n        ],\n        [\n            [3135, 7724],\n            [5, -19],\n            [-30, -29],\n            [-29, -20],\n            [-29, -18],\n            [-15, -35],\n            [-4, -13],\n            [-1, -31],\n            [10, -32],\n            [11, -1],\n            [-3, 21],\n            [8, -13],\n            [-2, -17],\n            [-19, -9],\n            [-13, 1],\n            [-20, -10],\n            [-12, -3],\n            [-17, -3],\n            [-23, -17],\n            [41, 11],\n            [8, -11],\n            [-39, -18],\n            [-17, 0],\n            [0, 7],\n            [-8, -16],\n            [8, -3],\n            [-6, -43],\n            [-20, -45],\n            [-2, 15],\n            [-6, 3],\n            [-9, 15],\n            [5, -32],\n            [7, -10],\n            [1, -23],\n            [-9, -23],\n            [-16, -47],\n            [-2, 3],\n            [8, 40],\n            [-14, 22],\n            [-3, 49],\n            [-5, -25],\n            [5, -38],\n            [-18, 10],\n            [19, -19],\n            [1, -57],\n            [8, -4],\n            [3, -20],\n            [4, -59],\n            [-17, -44],\n            [-29, -18],\n            [-18, -34],\n            [-14, -4],\n            [-14, -22],\n            [-4, -20],\n            [-31, -38],\n            [-16, -28],\n            [-13, -35],\n            [-4, -42],\n            [5, -41],\n            [9, -51],\n            [13, -41],\n            [0, -26],\n            [13, -69],\n            [-1, -39],\n            [-1, -23],\n            [-7, -36],\n            [-8, -8],\n            [-14, 7],\n            [-4, 26],\n            [-11, 14],\n            [-15, 51],\n            [-13, 45],\n            [-4, 23],\n            [6, 39],\n            [-8, 33],\n            [-22, 49],\n            [-10, 9],\n            [-28, -27],\n            [-5, 3],\n            [-14, 28],\n            [-17, 14],\n            [-32, -7],\n            [-24, 7],\n            [-21, -5],\n            [-12, -9],\n            [5, -15],\n            [0, -24],\n            [5, -12],\n            [-5, -8],\n            [-10, 9],\n            [-11, -11],\n            [-20, 2],\n            [-20, 31],\n            [-25, -8],\n            [-20, 14],\n            [-17, -4],\n            [-24, -14],\n            [-25, -44],\n            [-27, -25],\n            [-16, -28],\n            [-6, -27],\n            [0, -41],\n            [1, -28],\n            [5, -20]\n        ],\n        [\n            [1746, 6980],\n            [-4, 30],\n            [-18, 34],\n            [-13, 7],\n            [-3, 17],\n            [-16, 3],\n            [-10, 16],\n            [-26, 6],\n            [-7, 9],\n            [-3, 32],\n            [-27, 60],\n            [-23, 82],\n            [1, 14],\n            [-13, 19],\n            [-21, 50],\n            [-4, 48],\n            [-15, 32],\n            [6, 49],\n            [-1, 51],\n            [-8, 45],\n            [10, 56],\n            [4, 53],\n            [3, 54],\n            [-5, 79],\n            [-9, 51],\n            [-8, 27],\n            [4, 12],\n            [40, -20],\n            [15, -56],\n            [7, 15],\n            [-5, 49],\n            [-9, 48]\n        ],\n        [\n            [750, 8432],\n            [-28, -23],\n            [-14, 15],\n            [-4, 28],\n            [25, 21],\n            [15, 9],\n            [18, -4],\n            [12, -18],\n            [-24, -28]\n        ],\n        [\n            [401, 8597],\n            [-18, -9],\n            [-18, 11],\n            [-17, 16],\n            [28, 10],\n            [22, -6],\n            [3, -22]\n        ],\n        [\n            [230, 8826],\n            [17, -12],\n            [17, 6],\n            [23, -15],\n            [27, -8],\n            [-2, -7],\n            [-21, -12],\n            [-21, 13],\n            [-11, 11],\n            [-24, -4],\n            [-7, 5],\n            [2, 23]\n        ],\n        [\n            [1374, 8295],\n            [-15, 22],\n            [-25, 19],\n            [-8, 52],\n            [-36, 47],\n            [-15, 56],\n            [-26, 4],\n            [-44, 2],\n            [-33, 17],\n            [-57, 61],\n            [-27, 11],\n            [-49, 21],\n            [-38, -5],\n            [-55, 27],\n            [-33, 25],\n            [-30, -12],\n            [5, -41],\n            [-15, -4],\n            [-32, -12],\n            [-25, -20],\n            [-30, -13],\n            [-4, 35],\n            [12, 58],\n            [30, 18],\n            [-8, 15],\n            [-35, -33],\n            [-19, -39],\n            [-40, -42],\n            [20, -29],\n            [-26, -42],\n            [-30, -25],\n            [-28, -18],\n            [-7, -26],\n            [-43, -31],\n            [-9, -28],\n            [-32, -25],\n            [-20, 5],\n            [-25, -17],\n            [-29, -20],\n            [-23, -20],\n            [-47, -16],\n            [-5, 9],\n            [31, 28],\n            [27, 18],\n            [29, 33],\n            [35, 6],\n            [14, 25],\n            [38, 35],\n            [6, 12],\n            [21, 21],\n            [5, 44],\n            [14, 35],\n            [-32, -18],\n            [-9, 11],\n            [-15, -22],\n            [-18, 30],\n            [-8, -21],\n            [-10, 29],\n            [-28, -23],\n            [-17, 0],\n            [-3, 35],\n            [5, 21],\n            [-17, 22],\n            [-37, -12],\n            [-23, 28],\n            [-19, 14],\n            [0, 34],\n            [-22, 25],\n            [11, 34],\n            [23, 33],\n            [10, 30],\n            [22, 4],\n            [19, -9],\n            [23, 28],\n            [20, -5],\n            [21, 19],\n            [-5, 27],\n            [-16, 10],\n            [21, 23],\n            [-17, -1],\n            [-30, -13],\n            [-8, -13],\n            [-22, 13],\n            [-39, -6],\n            [-41, 14],\n            [-12, 24],\n            [-35, 34],\n            [39, 25],\n            [62, 29],\n            [23, 0],\n            [-4, -30],\n            [59, 2],\n            [-23, 37],\n            [-34, 23],\n            [-20, 29],\n            [-26, 25],\n            [-38, 19],\n            [15, 31],\n            [49, 2],\n            [35, 27],\n            [7, 29],\n            [28, 28],\n            [28, 6],\n            [52, 27],\n            [26, -4],\n            [42, 31],\n            [42, -12],\n            [21, -27],\n            [12, 11],\n            [47, -3],\n            [-2, -14],\n            [43, -10],\n            [28, 6],\n            [59, -18],\n            [53, -6],\n            [21, -8],\n            [37, 10],\n            [42, -18],\n            [31, -8]\n        ],\n        [\n            [3018, 5753],\n            [-1, -14],\n            [-16, -7],\n            [9, -26],\n            [0, -31],\n            [-12, -35],\n            [10, -47],\n            [12, 4],\n            [6, 43],\n            [-8, 21],\n            [-2, 45],\n            [35, 24],\n            [-4, 27],\n            [10, 19],\n            [10, -41],\n            [19, -1],\n            [18, -33],\n            [1, -20],\n            [25, 0],\n            [30, 6],\n            [16, -27],\n            [21, -7],\n            [16, 18],\n            [0, 15],\n            [34, 4],\n            [34, 1],\n            [-24, -18],\n            [10, -28],\n            [22, -4],\n            [21, -29],\n            [4, -48],\n            [15, 2],\n            [11, -14]\n        ],\n        [\n            [8001, 6331],\n            [-37, -51],\n            [-24, -56],\n            [-6, -41],\n            [22, -62],\n            [25, -77],\n            [26, -37],\n            [17, -47],\n            [12, -109],\n            [-3, -104],\n            [-24, -39],\n            [-31, -38],\n            [-23, -49],\n            [-35, -55],\n            [-10, 37],\n            [8, 40],\n            [-21, 34]\n        ],\n        [\n            [9661, 4085],\n            [-9, -8],\n            [-9, 26],\n            [1, 16],\n            [17, -34]\n        ],\n        [\n            [9641, 4175],\n            [4, -47],\n            [-7, 7],\n            [-6, -3],\n            [-4, 16],\n            [0, 45],\n            [13, -18]\n        ],\n        [\n            [6475, 6041],\n            [-21, -16],\n            [-5, -26],\n            [-1, -20],\n            [-27, -25],\n            [-45, -28],\n            [-24, -41],\n            [-13, -3],\n            [-8, 3],\n            [-16, -25],\n            [-18, -11],\n            [-23, -3],\n            [-7, -3],\n            [-6, -16],\n            [-8, -4],\n            [-4, -15],\n            [-14, 1],\n            [-9, -8],\n            [-19, 3],\n            [-7, 35],\n            [1, 32],\n            [-5, 17],\n            [-5, 44],\n            [-8, 24],\n            [5, 3],\n            [-2, 27],\n            [3, 12],\n            [-1, 25]\n        ],\n        [\n            [5817, 3752],\n            [11, 0],\n            [14, -10],\n            [9, 7],\n            [15, -6]\n        ],\n        [\n            [5911, 3478],\n            [-7, -43],\n            [-3, -49],\n            [-7, -27],\n            [-19, -30],\n            [-5, -8],\n            [-12, -30],\n            [-8, -31],\n            [-16, -42],\n            [-31, -61],\n            [-20, -36],\n            [-21, -26],\n            [-29, -23],\n            [-14, -3],\n            [-3, -17],\n            [-17, 9],\n            [-14, -11],\n            [-30, 11],\n            [-17, -7],\n            [-12, 3],\n            [-28, -23],\n            [-24, -10],\n            [-17, -22],\n            [-13, -1],\n            [-11, 21],\n            [-10, 1],\n            [-12, 26],\n            [-1, -8],\n            [-4, 16],\n            [0, 34],\n            [-9, 40],\n            [9, 11],\n            [0, 45],\n            [-19, 55],\n            [-14, 50],\n            [0, 1],\n            [-20, 76]\n        ],\n        [\n            [5840, 4141],\n            [-21, -8],\n            [-15, -23],\n            [-4, -21],\n            [-10, -4],\n            [-24, -49],\n            [-15, -38],\n            [-10, -2],\n            [-9, 7],\n            [-31, 7]\n        ]\n    ],\n    \"transform\": {\n        \"scale\": [0.036003600360036005, 0.016927109510951093],\n        \"translate\": [-180, -85.609038]\n    }\n}\n;\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  //convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  //add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data) {\n    var svg = this.svg;\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        //if it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          //if ( !data ) return '';\n          return options.popupTemplate(d, data);\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        //add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // expose library\n  if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", function(require) { d3 = require('d3'); topojson = require('topojson'); return Datamap; } );\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/dist/datamaps.all.js\n// module id = 261\n// module chunks = 5 17","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/~/d3/d3.js\n// module id = 262\n// module chunks = 5 17","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datamaps/~/topojson/build/topojson.js\n// module id = 263\n// module chunks = 5 17"],"sourceRoot":""}