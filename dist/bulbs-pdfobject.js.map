{"version":3,"sources":["webpack:///bulbs-pdfobject.js","webpack:///./elements/bulbs-pdfobject/bulbs-pdfobject.js","webpack:///./~/pdfobject/pdfobject.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_defaults","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","setPrototypeOf","_register","_invariant","_invariant2","_pdfobject","_pdfobject2","BulbsPDFObject","_BulbsHTMLElement","this","apply","arguments","createdCallback","poster","getAttribute","options","fallbackLink","hasAttribute","embed","BulbsHTMLElement","registerElement","276","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","window","navigator","supportsPDFs","createAXO","isIE","supportsPdfActiveX","buildFragmentString","log","embedError","getTargetElement","generatePDFJSiframe","generateEmbedElement","pdfobjectversion","supportsPdfMimeType","mimeTypes","isIOS","test","userAgent","toLowerCase","type","ax","ActiveXObject","e","pdfParams","prop","string","hasOwnProperty","encodeURIComponent","slice","msg","console","targetSelector","targetNode","document","body","querySelector","jQuery","get","nodeType","url","pdfOpenFragment","PDFJS_URL","id","fullURL","scrollfix","iframe","className","style","position","overflow","innerHTML","getElementsByTagName","width","height","page","pdfOpenParams","forcePDFJS","fallbackHTML","fallbackHTML_default","replace","a","b","c"],"mappings":"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","file":"bulbs-pdfobject.js","sourcesContent":["webpackJsonp([16],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _register = __webpack_require__(1);\n\t\n\tvar _invariant = __webpack_require__(37);\n\t\n\tvar _invariant2 = _interopRequireDefault(_invariant);\n\t\n\tvar _pdfobject = __webpack_require__(276);\n\t\n\tvar _pdfobject2 = _interopRequireDefault(_pdfobject);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\t\n\tvar BulbsPDFObject = function (_BulbsHTMLElement) {\n\t  _inherits(BulbsPDFObject, _BulbsHTMLElement);\n\t\n\t  function BulbsPDFObject() {\n\t    _classCallCheck(this, BulbsPDFObject);\n\t\n\t    return _possibleConstructorReturn(this, _BulbsHTMLElement.apply(this, arguments));\n\t  }\n\t\n\t  BulbsPDFObject.prototype.createdCallback = function createdCallback() {\n\t    var poster = this.getAttribute('poster');\n\t    var options = {\n\t      fallbackLink: '<a href=\\'[url]\\'><img src=\"' + poster + '\"></a>'\n\t    };\n\t    (0, _invariant2.default)(this.hasAttribute('poster'), '<bulbs-pdfobject> MUST have a \\'poster\\' attribute');\n\t    (0, _invariant2.default)(this.hasAttribute('src'), '<bulbs-pdfobject> MUST have a \\'src\\' attribute');\n\t    _pdfobject2.default.embed(this.getAttribute('src'), this, options);\n\t  };\n\t\n\t  return BulbsPDFObject;\n\t}(_register.BulbsHTMLElement);\n\t\n\t(0, _register.registerElement)('bulbs-pdfobject', BulbsPDFObject);\n\n/***/ }),\n\n/***/ 276:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global ActiveXObject, window, console, define, module, jQuery */\n\t//jshint unused:false, strict: false\n\t\n\t/*\n\t    PDFObject v2.0.201604172\n\t    https://github.com/pipwerks/PDFObject\n\t    Copyright (c) 2008-2016 Philip Hutchison\n\t    MIT-style license: http://pipwerks.mit-license.org/\n\t    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n\t*/\n\t\n\t(function (root, factory) {\n\t    if (true) {\n\t        // AMD. Register as an anonymous module.\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module === 'object' && module.exports) {\n\t        // Node. Does not work with strict CommonJS, but\n\t        // only CommonJS-like environments that support module.exports,\n\t        // like Node.\n\t        module.exports = factory();\n\t    } else {\n\t        // Browser globals (root is window)\n\t        root.PDFObject = factory();\n\t  }\n\t}(this, function () {\n\t\n\t    \"use strict\";\n\t    //jshint unused:true\n\t\n\t    //PDFObject is designed for client-side (browsers), not server-side (node)\n\t    //Will choke on undefined navigator and window vars when run on server\n\t    //Return boolean false and exit function when running server-side\n\t\n\t    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\t\n\t    var pdfobjectversion = \"2.0.201604172\",\n\t        supportsPDFs,\n\t\n\t        //declare functions\n\t        createAXO,\n\t        isIE,\n\t        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n\t        supportsPdfActiveX,\n\t        buildFragmentString,\n\t        log,\n\t        embedError,\n\t        embed,\n\t        getTargetElement,\n\t        generatePDFJSiframe,\n\t        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(navigator.userAgent.toLowerCase())); })(),\n\t        generateEmbedElement;\n\t\n\t\n\t    /* ----------------------------------------------------\n\t       Supporting functions\n\t       ---------------------------------------------------- */\n\t\n\t    createAXO = function (type){\n\t        var ax;\n\t        try {\n\t            ax = new ActiveXObject(type);\n\t        } catch (e) {\n\t            ax = null; //ensure ax remains null\n\t        }\n\t        return ax;\n\t    };\n\t\n\t    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n\t    //window.ActiveXObject the same way previous versions of IE did\n\t    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n\t    //so check the first one for older IE, and the second for IE11\n\t    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n\t    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n\t    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\t\n\t    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n\t    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n\t    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\t\n\t    //Determines whether PDF support is available\n\t    supportsPDFs = (supportsPdfMimeType || (isIE() && supportsPdfActiveX()));\n\t\n\t    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n\t    buildFragmentString = function(pdfParams){\n\t\n\t        var string = \"\",\n\t            prop;\n\t\n\t        if(pdfParams){\n\t\n\t            for (prop in pdfParams) {\n\t                if (pdfParams.hasOwnProperty(prop)) {\n\t                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n\t                }\n\t            }\n\t\n\t            //The string will be empty if no PDF Params found\n\t            if(string){\n\t\n\t                string = \"#\" + string;\n\t\n\t                //Remove last ampersand\n\t                string = string.slice(0, string.length - 1);\n\t\n\t            }\n\t\n\t        }\n\t\n\t        return string;\n\t\n\t    };\n\t\n\t    log = function (msg){\n\t        if(typeof console !== \"undefined\" && console.log){\n\t            console.log(\"[PDFObject] \" + msg);\n\t        }\n\t    };\n\t\n\t    embedError = function (msg){\n\t        log(msg);\n\t        return false;\n\t    };\n\t\n\t    getTargetElement = function (targetSelector){\n\t\n\t        //Default to body for full-browser PDF\n\t        var targetNode = document.body;\n\t\n\t        //If a targetSelector is specified, check to see whether\n\t        //it's passing a selector, jQuery object, or an HTML element\n\t\n\t        if(typeof targetSelector === \"string\"){\n\t\n\t            //Is CSS selector\n\t            targetNode = document.querySelector(targetSelector);\n\t\n\t        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\t\n\t            //Is jQuery element. Extract HTML node\n\t            targetNode = targetSelector.get(0);\n\t\n\t        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\t\n\t            //Is HTML element\n\t            targetNode = targetSelector;\n\t\n\t        }\n\t\n\t        return targetNode;\n\t\n\t    };\n\t\n\t    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\t\n\t        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n\t        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n\t        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n\t        targetNode.className += \" pdfobject-container\";\n\t        targetNode.style.position = \"relative\";\n\t        targetNode.style.overflow = \"auto\";\n\t        targetNode.innerHTML = iframe;\n\t        return targetNode.getElementsByTagName(\"iframe\")[0];\n\t\n\t    };\n\t\n\t    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\t\n\t        var style = \"\";\n\t\n\t        if(targetSelector && targetSelector !== document.body){\n\t            style = \"width: \" + width + \"; height: \" + height + \";\";\n\t        } else {\n\t            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n\t        }\n\t\n\t        targetNode.className += \" pdfobject-container\";\n\t        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\t\n\t        return targetNode.getElementsByTagName(\"embed\")[0];\n\t\n\t    };\n\t\n\t    embed = function(url, targetSelector, options){\n\t\n\t        //Ensure URL is available. If not, exit now.\n\t        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\t\n\t        //If targetSelector is not defined, convert to boolean\n\t        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\t\n\t        //Ensure options object is not undefined -- enables easier error checking below\n\t        options = (typeof options !== \"undefined\") ? options : {};\n\t\n\t        //Get passed options, or set reasonable defaults\n\t        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n\t            page = (options.page) ? options.page : false,\n\t            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n\t            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n\t            width = (options.width) ? options.width : \"100%\",\n\t            height = (options.height) ? options.height : \"100%\",\n\t            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n\t            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n\t            targetNode = getTargetElement(targetSelector),\n\t            fallbackHTML = \"\",\n\t            pdfOpenFragment = \"\",\n\t            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\t\n\t        //If target element is specified but is not valid, exit without doing anything\n\t        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\t\n\t\n\t        //page option overrides pdfOpenParams, if found\n\t        if(page){\n\t            pdfOpenParams.page = page;\n\t        }\n\t\n\t        //Stringify optional Adobe params for opening document (as fragment identifier)\n\t        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\t\n\t        //Do the dance\n\t        if(forcePDFJS && PDFJS_URL){\n\t\n\t            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\t\n\t        } else if(supportsPDFs){\n\t\n\t            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\t\n\t        } else {\n\t\n\t            if(PDFJS_URL){\n\t\n\t                return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\t\n\t            } else if(fallbackLink){\n\t\n\t                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n\t                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\t\n\t            }\n\t\n\t            return embedError(\"This browser does not support embedded PDFs\");\n\t\n\t        }\n\t\n\t    };\n\t\n\t    return {\n\t        embed: function (a,b,c){ return embed(a,b,c); },\n\t        pdfobjectversion: (function () { return pdfobjectversion; })(),\n\t        supportsPDFs: (function (){ return supportsPDFs; })()\n\t    };\n\t\n\t}));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// bulbs-pdfobject.js","import {\n  BulbsHTMLElement,\n  registerElement,\n} from 'bulbs-elements/register';\n\nimport invariant from 'invariant';\n\nimport PDFObject from 'pdfobject/pdfobject';\n\nclass BulbsPDFObject extends BulbsHTMLElement {\n  createdCallback () {\n    let poster = this.getAttribute('poster');\n    let options = {\n      fallbackLink: `<a href='[url]'><img src=\"${poster}\"></a>`,\n    };\n    invariant(this.hasAttribute('poster'), '<bulbs-pdfobject> MUST have a \\'poster\\' attribute');\n    invariant(this.hasAttribute('src'), '<bulbs-pdfobject> MUST have a \\'src\\' attribute');\n    PDFObject.embed(this.getAttribute('src'), this, options);\n  }\n}\n\nregisterElement('bulbs-pdfobject', BulbsPDFObject);\n\n\n\n\n// WEBPACK FOOTER //\n// ./elements/bulbs-pdfobject/bulbs-pdfobject.js","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.0.201604172\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2016 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.0.201604172\",\n        supportsPDFs,\n\n        //declare functions\n        createAXO,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(navigator.userAgent.toLowerCase())); })(),\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (supportsPdfMimeType || (isIE() && supportsPdfActiveX()));\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else if(supportsPDFs){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        } else {\n\n            if(PDFJS_URL){\n\n                return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n            } else if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfobject/pdfobject.js\n// module id = 276\n// module chunks = 16 17"],"sourceRoot":""}